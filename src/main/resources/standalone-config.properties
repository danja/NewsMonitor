USERNAME = admin
PASSWORD = pw123 
# admin

# for debugging
POLLER_NO_LOOP = false

# stop after this no. milliseconds, 0 = infinite
TEST_RUN = 0

TOPIC = PresetTopics.ALL;

# File Resources 
# buggy-list.txt rdf-bloggers-feedlist.txt; short-list.txt woodcarvers.txt
SEED_FEEDLIST_LOCATION = src/main/resources/feedlists/single-rss-test.txt
// SEED_FEEDLIST_LOCATION = src/main/resources/feedlists/html-sourced-test.txt

SUBSCRIBE_RELEVANCE_THRESHOLD = 2
UNSUBSCRIBE_RELEVANCE_THRESHOLD = 0.1

# Timings - all in milliseconds

# Pause between polling runs
REFRESH_PERIOD = 1000
# 3600000

# Pause between reading each feed
PER_FEED_SLEEP_PERIOD = 1000
        
LINK_EXPLORER_SLEEP_PERIOD = 1000
# 3600000

CONNECT_TIMEOUT = 1000
READ_TIMEOUT = 2000
        
# Number of attempts to read a feed which is failing before flagging it as dead
MAX_LIVES = 3

FEED_USER_AGENT_HEADER = Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.97 Safari/537.36 NewsMonitor/1.0.0

HTML_USER_AGENT_HEADER = Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.97 Safari/537.36 NewsMonitor/1.0.0

FEED_ACCEPT_HEADER = application/rdf+xml, application/atom+xml, application/rss+xml, application/xml, text/xml

HTML_ACCEPT_HEADER = text/html, application/xhtml+xml, application/xml

# File locations
TEMPLATES_LOCATION = src/main/resources/templates/html/it/danja/newsmonitor/resource/

SPARQL_FEEDLIST_LOCATION = src/main/resources/sparql/get-feedlist.sparql



SPARQL_GET_STATUS_LOCATION = src/main/resources/sparql/get-system-status.sparql
GET_LINKS_SPARQL_LOCATION = src/main/resources/sparql/get-new-links.sparql
SPARQL_PREFIXES_LOCATION = src/main/resources/sparql/prefixes.sparql

# URLs - UNUSED!
SPARQL_SCHEME = http
SPARQL_HOST = localhost
SPARQL_PORT = 3030
SPARQL_QUERY_PATH = /query
SPARQL_UPDATE_PATH = /update
# SPARQL_URL_BASE = SPARQL_SCHEME+"://"+SPARQL_HOST+":"+SPARQL_PORT;
	
# public static final String QUERY_ENDPOINT = SPARQL_URL_BASE+SPARQL_QUERY_PATH;
# public static final String UPDATE_ENDPOINT = SPARQL_URL_BASE+SPARQL_UPDATE_PATH;
		
# QUERY_ENDPOINT = http://localhost:3030/feedreader/query
# UPDATE_ENDPOINT = http://localhost:3030/feedreader/update

QUERY_ENDPOINT = http://localhost:3030/newsmonitor/query
UPDATE_ENDPOINT = http://localhost:3030/newsmonitor/update

# File Upload:
# http://server:3030/newsmonitor/upload
# Graph Store Protocol:
# http://server:3030/newsmonitor/data
# Graph Store Protocol (Read):
# http://server:3030/newsmonitor/get
# HTTP Quads:
# http://server:3030/newsmonitor/
# SPARQL Query:
# http://server:3030/newsmonitor/query
# SPARQL Query:
# http://server:3030/newsmonitor/sparql
# SPARQL Update:
# http://server:3030/newsmonitor/update

