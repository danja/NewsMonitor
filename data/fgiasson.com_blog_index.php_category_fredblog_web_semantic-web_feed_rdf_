<?xml version="1.0" encoding="UTF-8"?><rdf:RDF
	xmlns="http://purl.org/rss/1.0/"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:admin="http://webns.net/mvcb/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	>
<channel rdf:about="http://fgiasson.com/blog">
	<title>Frederick Giasson's Weblog &#187; Semantic Web</title>
	<link>http://fgiasson.com/blog</link>
	<description></description>
	<dc:date>2014-04-23T12:41:55Z</dc:date>
		<sy:updatePeriod>hourly</sy:updatePeriod>
		<sy:updateFrequency>1</sy:updateFrequency>
	<sy:updateBase>2000-01-01T12:00+00:00</sy:updateBase>
	<admin:generatorAgent rdf:resource="http://wordpress.org/?v=3.9" />
	<items>
		<rdf:Seq>
					<rdf:li rdf:resource="http://fgiasson.com/blog/index.php/2014/04/23/exporting-entities-using-osf-for-drupal-screencast/"/>
					<rdf:li rdf:resource="http://fgiasson.com/blog/index.php/2014/04/14/the-open-semantic-framework-academy/"/>
					<rdf:li rdf:resource="http://fgiasson.com/blog/index.php/2014/01/23/3-5-million-dbpedia-entities-in-drupal-7/"/>
					<rdf:li rdf:resource="http://fgiasson.com/blog/index.php/2014/01/22/loading-dbpedia-into-the-open-semantic-framework/"/>
					<rdf:li rdf:resource="http://fgiasson.com/blog/index.php/2014/01/20/open-semantic-framework-version-3-0-released/"/>
					<rdf:li rdf:resource="http://fgiasson.com/blog/index.php/2013/06/10/structfieldstorage-a-new-field-storage-system-for-drupal-7/"/>
					<rdf:li rdf:resource="http://fgiasson.com/blog/index.php/2013/06/06/construct-for-drupal-7/"/>
					<rdf:li rdf:resource="http://fgiasson.com/blog/index.php/2013/05/21/neighbourhoods-of-winnipeg-a-community-semantic-portal/"/>
					<rdf:li rdf:resource="http://fgiasson.com/blog/index.php/2012/02/27/new-mapping-semantic-component-in-javascript/"/>
					<rdf:li rdf:resource="http://fgiasson.com/blog/index.php/2011/12/28/open-semantic-framework-running-on-micro-instances/"/>
				</rdf:Seq>
	</items>
</channel>
<item rdf:about="http://fgiasson.com/blog/index.php/2014/04/23/exporting-entities-using-osf-for-drupal-screencast/">
	<title>Exporting Entities using OSF for Drupal (Screencast)</title>
	<link>http://fgiasson.com/blog/index.php/2014/04/23/exporting-entities-using-osf-for-drupal-screencast/</link>
	<dc:date>2014-04-23T12:41:55Z</dc:date>
	<dc:creator><![CDATA[Frederick Giasson]]></dc:creator>
			<dc:subject><![CDATA[Open Semantic Framework]]></dc:subject>
		<dc:subject><![CDATA[OSF Academy]]></dc:subject>
		<dc:subject><![CDATA[OSF for Drupal]]></dc:subject>
		<dc:subject><![CDATA[Planet Drupal]]></dc:subject>
		<dc:subject><![CDATA[Semantic Web]]></dc:subject>
		<dc:subject><![CDATA[Structured Dynamics]]></dc:subject>
		<dc:subject><![CDATA[#drupal]]></dc:subject>
		<dc:subject><![CDATA[#drupal7]]></dc:subject>
		<dc:subject><![CDATA[#linkeddata]]></dc:subject>
		<dc:subject><![CDATA[#osf]]></dc:subject>
		<dc:subject><![CDATA[#osffordrupal]]></dc:subject>
		<dc:subject><![CDATA[#rdf]]></dc:subject>
		<dc:subject><![CDATA[#semanticweb]]></dc:subject>
	<description><![CDATA[	
	<span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Adc&amp;rfr_id=info%3Asid%2Focoins.info%3Agenerator&amp;rft.title=Exporting Entities using OSF for Drupal (Screencast)&amp;rft.aulast=Giasson&amp;rft.aufirst=Frederick&amp;rft.subject=Open Semantic Framework&amp;rft.subject=OSF Academy&amp;rft.subject=OSF for Drupal&amp;rft.subject=Planet Drupal&amp;rft.subject=Semantic Web&amp;rft.subject=Structured Dynamics&amp;rft.source=Frederick Giasson&#8217;s Weblog&amp;rft.date=2014-04-23&amp;rft.type=blogPost&amp;rft.format=text&amp;rft.identifier=http://fgiasson.com/blog/index.php/2014/04/23/exporting-entities-using-osf-for-drupal-screencast/&amp;rft.language=English"></span>
This screencast will introduce you to the OSF for Drupal features that let you export Drupal Entities in one of the following supported serializations: RDF+XML (RDF in XML) RDF+N3 (RDF in N3) structJSON (Internal OSF RDF serialization in JSON) structXML (Internal OSF RDF serialization in XML) ironJSON (irON serialization in JSON) commON (CSV serialization to [&#8230;]]]></description>
	<content:encoded><![CDATA[	
	<span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Adc&amp;rfr_id=info%3Asid%2Focoins.info%3Agenerator&amp;rft.title=Exporting Entities using OSF for Drupal (Screencast)&amp;rft.aulast=Giasson&amp;rft.aufirst=Frederick&amp;rft.subject=Open Semantic Framework&amp;rft.subject=OSF Academy&amp;rft.subject=OSF for Drupal&amp;rft.subject=Planet Drupal&amp;rft.subject=Semantic Web&amp;rft.subject=Structured Dynamics&amp;rft.source=Frederick Giasson&#8217;s Weblog&amp;rft.date=2014-04-23&amp;rft.type=blogPost&amp;rft.format=text&amp;rft.identifier=http://fgiasson.com/blog/index.php/2014/04/23/exporting-entities-using-osf-for-drupal-screencast/&amp;rft.language=English"></span>
<p>This screencast will introduce you to the <a href="https://drupal.org/project/osf"><code>OSF for Drupal</code></a> features that let you export <code>Drupal Entities</code> in one of the following supported serializations:</p>
<ul>
<li><a class="external text" href="http://www.w3.org/TR/REC-rdf-syntax/" rel="nofollow">RDF+XML</a> (RDF in XML)</li>
<li><a class="external text" href="http://www.w3.org/TeamSubmission/n3/" rel="nofollow">RDF+N3</a> (RDF in N3)</li>
<li><a title="StructJSON" href="http://wiki.opensemanticframework.org/index.php/StructJSON">structJSON</a> (Internal OSF RDF serialization in JSON)</li>
<li><a title="StructXML" href="http://wiki.opensemanticframework.org/index.php/StructXML">structXML</a> (Internal OSF RDF serialization in XML)</li>
<li><a title="Instance Record and Object Notation (irON) Specification" href="http://wiki.opensemanticframework.org/index.php/Instance_Record_and_Object_Notation_%28irON%29_Specification#SUB-PART_2:_irJSON_PROFILE">ironJSON</a> (irON serialization in JSON)</li>
<li><a title="Instance Record and Object Notation (irON) Specification" href="http://wiki.opensemanticframework.org/index.php/Instance_Record_and_Object_Notation_%28irON%29_Specification#SUB-PART_3:_commON_PROFILE">commON</a> (CSV serialization to be used in spreadsheet applications)</li>
</ul>
<p>I will show you how you can use <code>OSF for Drupal</code> to export entire <a href="http://wiki.opensemanticframework.org/index.php/Category:OSF_for_Drupal_User_Manual#Exporting_a_Dataset">datasets of <code>Entities</code></a>, or how to export <a href="http://wiki.opensemanticframework.org/index.php/Category:OSF_for_Drupal_User_Manual#Exporting_Resources"><code>Entities</code> individually</a>. You will see how you can configure Drupal such that different users roles get access to these functionalities.</p>
<p>I will also briefly discuss how you can create new converters to support more data formats.</p>
<p>Finally, I will show you how Drupal can be used as a <code><a href="http://en.wikipedia.org/wiki/Linked_data">linked data</a></code> platform with a feature that makes every Drupal <code>Entities</code> <a href="http://en.wikipedia.org/wiki/Dereferenceable_Uniform_Resource_Identifier"><code>dereferencable</code></a> on the Web<sup class='footnote'><a href='#fn-2408-1' id='fnref-2408-1' onclick='return fdfootnote_show(2408)'>1</a></sup>. You will see how you can use <a href="http://curl.haxx.se/">cURL</a> to export the <code>Entities</code>&#8216; descriptions using their URI in one of the 6 supported serialization formats.</p>
<p><center><br />
<a href="https://www.youtube.com/watch?v=KI7uIbXQIbE"><img class="aligncenter size-full wp-image-2414" src="http://fgiasson.com/blog/wp-content/uploads/2014/04/tut_11_blog_400.png" alt="tut_11_blog_400" width="400" height="225" /></a></center>&nbsp;</p>
<div class='footnotes' id='footnotes-2408'>
<div class='footnotedivider'></div>
<ol>
<li id='fn-2408-1'>OSF for Drupal follows the<a href="http://www.w3.org/TR/cooluris/"> Cool URIs for the Semantic Web</a> W3C&#8217;s interest group notes <span class='footnotereverse'><a href='#fnref-2408-1'>&#8617;</a></span></li>
</ol>
</div>
]]></content:encoded>
	</item>
<item rdf:about="http://fgiasson.com/blog/index.php/2014/04/14/the-open-semantic-framework-academy/">
	<title>The Open Semantic Framework Academy</title>
	<link>http://fgiasson.com/blog/index.php/2014/04/14/the-open-semantic-framework-academy/</link>
	<dc:date>2014-04-14T14:17:33Z</dc:date>
	<dc:creator><![CDATA[Frederick Giasson]]></dc:creator>
			<dc:subject><![CDATA[Open Semantic Framework]]></dc:subject>
		<dc:subject><![CDATA[OSF Academy]]></dc:subject>
		<dc:subject><![CDATA[OSF for Drupal]]></dc:subject>
		<dc:subject><![CDATA[OSF Web Services]]></dc:subject>
		<dc:subject><![CDATA[Semantic Web]]></dc:subject>
		<dc:subject><![CDATA[Structured Dynamics]]></dc:subject>
	<description><![CDATA[	
	<span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Adc&amp;rfr_id=info%3Asid%2Focoins.info%3Agenerator&amp;rft.title=The Open Semantic Framework Academy&amp;rft.aulast=Giasson&amp;rft.aufirst=Frederick&amp;rft.subject=Open Semantic Framework&amp;rft.subject=OSF Academy&amp;rft.subject=OSF for Drupal&amp;rft.subject=OSF Web Services&amp;rft.subject=Semantic Web&amp;rft.subject=Structured Dynamics&amp;rft.source=Frederick Giasson&#8217;s Weblog&amp;rft.date=2014-04-14&amp;rft.type=blogPost&amp;rft.format=text&amp;rft.identifier=http://fgiasson.com/blog/index.php/2014/04/14/the-open-semantic-framework-academy/&amp;rft.language=English"></span>
The Open Semantic Framework Academy YouTube channel has just been released this morning. The Open Semantic Framework Academy is a dedicated channel for instructional screencasts on OSF. Via its growing library of videos, the OSF Academy is your one-stop resource for how to deploy, manage and use the Open Semantic Framework. OSF is a complete, [&#8230;]]]></description>
	<content:encoded><![CDATA[	
	<span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Adc&amp;rfr_id=info%3Asid%2Focoins.info%3Agenerator&amp;rft.title=The Open Semantic Framework Academy&amp;rft.aulast=Giasson&amp;rft.aufirst=Frederick&amp;rft.subject=Open Semantic Framework&amp;rft.subject=OSF Academy&amp;rft.subject=OSF for Drupal&amp;rft.subject=OSF Web Services&amp;rft.subject=Semantic Web&amp;rft.subject=Structured Dynamics&amp;rft.source=Frederick Giasson&#8217;s Weblog&amp;rft.date=2014-04-14&amp;rft.type=blogPost&amp;rft.format=text&amp;rft.identifier=http://fgiasson.com/blog/index.php/2014/04/14/the-open-semantic-framework-academy/&amp;rft.language=English"></span>
<p><a href="http://fgiasson.com/blog/wp-content/uploads/2014/04/osf_academy_logo_pillars.png"><div style="margin:10px;overflow:hidden;display:table;line-height:0;text-align:center;width:101px;" class="alignright"><img class="wp-image-2309  shadow_curl" alt="osf_academy_logo_pillars" src="http://fgiasson.com/blog/wp-content/uploads/2014/04/osf_academy_logo_pillars.png" width="101" height="88"  style="padding:0 !important; margin:0 !important; max-width:100% !important;"><br/><img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="shadow_img" style="margin:0 !important;height:10px;width:100%;"></div></a>The <a title="Open Semantic Framework Academy" href="https://www.youtube.com/user/osfacademy">Open Semantic Framework Academy YouTube channel</a> has just been released this morning.</p>
<p>The Open Semantic Framework Academy is a dedicated channel for instructional screencasts on OSF. Via its growing library of videos, the OSF Academy is your one-stop resource for how to deploy, manage and use the Open Semantic Framework. OSF is a complete, turnkey stack of semantic technologies and methods for enterprises of all sizes.</p>
<p>All the aspects and features of the Open Semantic Framework will be covered in this series of screencasts. Dozens of such screencasts will be published in the following month or two. They are a supplement to the <a href="http://wiki.opensemanticframework.org">OSF Wiki documentation</a>, but they are not mean to be a replacement.</p>
<h3>Intro to the Open Semantic Framework (OSF)</h3>
<p>This kick-off video to the OSF Academy overviews the <a href="http://opensemanticframework.org">Open Semantic Framework platform</a> and describes it in terms of the 5 Ws (welcome, why, what, when, where) and the 1 H (how).<br />
<center><a href="https://www.youtube.com/watch?v=8PAuJqRc1R4"><div style="margin:10px;overflow:hidden;display:table;line-height:0;text-align:center;width:400px;" class="aligncenter"><img class="shadow_curl  size-full wp-image-2361" alt="tut_1_blog_400" src="http://fgiasson.com/blog/wp-content/uploads/2014/04/tut_1_blog_400.png" width="400" height="220"  style="padding:0 !important; margin:0 !important; max-width:100% !important;"><br/><img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="shadow_img" style="margin:0 !important;height:10px;width:100%;"></div></a></center></p>
<h3>Installing Core OSF (Open Semantic Framework)</h3>
<p>This screencast Introduce you to the Open Semantic Framework. Then it will show you how to install OSF using the <a href="https://github.com/structureddynamics/Open-Semantic-Framework-Installer">OSF Installer</a> script on a Ubuntu server. Finally it will introduce you to the system integration tests using the <a href="https://github.com/structureddynamics/OSF-Tests-Suites">OSF Tests Suites</a>.<br />
<center><a href="https://www.youtube.com/watch?v=Tfs7Qrlt_-0"><div style="margin:10px;overflow:hidden;display:table;line-height:0;text-align:center;width:400px;" class="aligncenter"><img class="shadow_curl  size-full wp-image-2357" alt="tut_2_blog_400" src="http://fgiasson.com/blog/wp-content/uploads/2014/04/tut_2_blog_400.png" width="400" height="214"  style="padding:0 !important; margin:0 !important; max-width:100% !important;"><br/><img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="shadow_img" style="margin:0 !important;height:10px;width:100%;"></div></a></center></p>
<h3>Open Semantic Framework Web Resources</h3>
<p>This screencast will show you all the web sites that exists to help you learning about the Open Semantic Framework. Such websites are the<a href="http://opensemanticframework.org"> OSF main site</a>, the <a href="http://wiki.opensemanticframework.org">OSF Wiki</a>, <a href="http://mkbergman.com">Mike Bergman</a> and <a href="http://fgiasson.com/blog/">Fred Giasson</a>&#8216;s blogs, demo portals such as <a href="http://citizen-dan.org">Citizen DAN</a>, <a href="http://now.winnipeg.ca">NOW</a>, <a href="http://www.mypeg.ca">MyPeg</a>, <a href="http://www.healthdirect.gov.au/">HealthDirect</a> and <a href="http://pregnancybirthbaby.org.au/">Pregnancy Birth and Babies</a>.<br />
<center><a href="https://www.youtube.com/watch?v=qgS3DgOKtf0"><div style="margin:10px;overflow:hidden;display:table;line-height:0;text-align:center;width:400px;" class="aligncenter"><img class="shadow_curl  size-full wp-image-2358" alt="tut_3_blog_400" src="http://fgiasson.com/blog/wp-content/uploads/2014/04/tut_3_blog_400.png" width="400" height="215"  style="padding:0 !important; margin:0 !important; max-width:100% !important;"><br/><img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="shadow_img" style="margin:0 !important;height:10px;width:100%;"></div></a></center></p>
]]></content:encoded>
	</item>
<item rdf:about="http://fgiasson.com/blog/index.php/2014/01/23/3-5-million-dbpedia-entities-in-drupal-7/">
	<title>3.5 Million DBpedia Entities in Drupal 7</title>
	<link>http://fgiasson.com/blog/index.php/2014/01/23/3-5-million-dbpedia-entities-in-drupal-7/</link>
	<dc:date>2014-01-23T20:47:41Z</dc:date>
	<dc:creator><![CDATA[Frederick Giasson]]></dc:creator>
			<dc:subject><![CDATA[Open Semantic Framework]]></dc:subject>
		<dc:subject><![CDATA[OSF for Drupal]]></dc:subject>
		<dc:subject><![CDATA[OSF Web Services]]></dc:subject>
		<dc:subject><![CDATA[OSF Widgets]]></dc:subject>
		<dc:subject><![CDATA[Planet Drupal]]></dc:subject>
		<dc:subject><![CDATA[Semantic Web]]></dc:subject>
		<dc:subject><![CDATA[Structured Dynamics]]></dc:subject>
		<dc:subject><![CDATA[#data]]></dc:subject>
		<dc:subject><![CDATA[#dbpedia]]></dc:subject>
		<dc:subject><![CDATA[#osf]]></dc:subject>
		<dc:subject><![CDATA[#rdf]]></dc:subject>
		<dc:subject><![CDATA[#semanticweb]]></dc:subject>
		<dc:subject><![CDATA[#webservice]]></dc:subject>
	<description><![CDATA[	
	<span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Adc&amp;rfr_id=info%3Asid%2Focoins.info%3Agenerator&amp;rft.title=3.5 Million DBpedia Entities in Drupal 7&amp;rft.aulast=Giasson&amp;rft.aufirst=Frederick&amp;rft.subject=Open Semantic Framework&amp;rft.subject=OSF for Drupal&amp;rft.subject=OSF Web Services&amp;rft.subject=OSF Widgets&amp;rft.subject=Planet Drupal&amp;rft.subject=Semantic Web&amp;rft.subject=Structured Dynamics&amp;rft.source=Frederick Giasson&#8217;s Weblog&amp;rft.date=2014-01-23&amp;rft.type=blogPost&amp;rft.format=text&amp;rft.identifier=http://fgiasson.com/blog/index.php/2014/01/23/3-5-million-dbpedia-entities-in-drupal-7/&amp;rft.language=English"></span>
In the previous article Loading DBpedia into the Open Semantic Framework, we explained how we could load the 3.5 million DBpedia entities into a Open Semantic Framework instance. In this article, we will show how these million of entities can be used in Drupal for searching, browsing, mapping and templating these DBpedia entities. Installing and [&#8230;]]]></description>
	<content:encoded><![CDATA[	
	<span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Adc&amp;rfr_id=info%3Asid%2Focoins.info%3Agenerator&amp;rft.title=3.5 Million DBpedia Entities in Drupal 7&amp;rft.aulast=Giasson&amp;rft.aufirst=Frederick&amp;rft.subject=Open Semantic Framework&amp;rft.subject=OSF for Drupal&amp;rft.subject=OSF Web Services&amp;rft.subject=OSF Widgets&amp;rft.subject=Planet Drupal&amp;rft.subject=Semantic Web&amp;rft.subject=Structured Dynamics&amp;rft.source=Frederick Giasson&#8217;s Weblog&amp;rft.date=2014-01-23&amp;rft.type=blogPost&amp;rft.format=text&amp;rft.identifier=http://fgiasson.com/blog/index.php/2014/01/23/3-5-million-dbpedia-entities-in-drupal-7/&amp;rft.language=English"></span>
<p>In the previous article <a title="Permanent Link to &quot;Loading DBpedia into the Open Semantic Framework&quot;" href="http://fgiasson.com/blog/index.php/2014/01/22/loading-dbpedia-into-the-open-semantic-framework/" rel="bookmark">Loading DBpedia into the Open Semantic Framework</a>, we explained how we could load the 3.5 million <a title="DBpedia" href="http://dbpedia.org">DBpedia</a> entities into a Open Semantic Framework instance. In this article, we will show how these million of entities can be used in Drupal for searching, browsing, mapping and templating these DBpedia entities.</p>
<h3>Installing and Configuring OSF for Drupal</h3>
<p>This article doesn&#8217;t cover how <a title="OSF for Drupal" href="https://drupal.org/project/osf">OSF for Drupal</a> can be installed and configured. If you want to properly install and configure OSF for Drupal, you should install it using the <a title="OSF Installer" href="http://wiki.opensemanticframework.org/index.php/OSF_Installer">OSF Installer</a> by running this command:</p>
<div style="overflow:hidden;; " class="alignnone">
<div class="shadow_curl" style="margin:0 !important; max-width:100% !important;"><div class="codecolorer-container bash railscasts" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:435px;"><div class="bash codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap">&nbsp; .<span style="color: #000000; font-weight: bold;">/</span>osf-installer <span style="color: #660033;">--install-osf-drupal</span></div></div>
<img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="aligncenter shadow_img" style="margin:0 !important;height:10px;width:100%;"></div>
</div>
<p>Then you should configure it using the <a href="http://wiki.opensemanticframework.org/index.php/Category:OSF_for_Drupal_User_Manual#Initial_Configuration">first section of the OSF for Drupal user manual</a>.</p>
<p>Once this is done, the only thing you will have to do is to register the OSF instance that hosts the DBpedia dataset. Then to register the DBpedia data into the Drupal instance. The only thing you will have to do is to make sure that the Drupal&#8217;s administator role has access to the DBpedia dataset. It can be done by using the <a title="Permissions Management Tool" href="http://wiki.opensemanticframework.org/index.php/Permissions_Management_Tool">PMT</a> (Permissions Management Tool) by running the following command:</p>
<div style="overflow:hidden;; " class="alignnone">
<div class="shadow_curl" style="margin:0 !important; max-width:100% !important;"><div class="codecolorer-container bash railscasts" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:435px;"><div class="bash codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap">&nbsp; pmt <span style="color: #660033;">--create-access</span> <span style="color: #660033;">--access-dataset</span>=<span style="color: #ff0000;">&quot;http://dbpedia.org&quot;</span> <span style="color: #660033;">--access-group</span>=<span style="color: #ff0000;">&quot;http://YOU-DRUPAL-DOMAIN/role/3/administrator&quot;</span> <span style="color: #660033;">--access-perm-create</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #660033;">--access-perm-read</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #660033;">--access-perm-delete</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #660033;">--access-perm-update</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #660033;">--access-all-ws</span></div></div>
<img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="aligncenter shadow_img" style="margin:0 !important;height:10px;width:100%;"></div>
</div>
<h3>Searching Entities using the Search API</h3>
<p>All the DBpedia entities are searchable via the <a title="SearchAPI" href="https://drupal.org/project/search_api">SearchAPI</a>. This is possible because of the OSF SearchAPI connector module that interface the SearchAPI with OSF.</p>
<p>Here is an example of such a SearchAPI search query. Each of these result come from the <a href="http://wiki.opensemanticframework.org/index.php/Search">OSF Search endpoint</a>. Each of the result is templated using the generic search result template, or other entity type search templates.</p>
<p>What is interesting is that depending on the type of the entity to display in the results, its display can be different. So instead of having a endless list of results with titles and descriptions, we can have different displays depending on the type of the record, and the information we have about that record.</p>
<p><a href="http://fgiasson.com/blog/wp-content/uploads/2014/01/dbpedia_search_3.png"><img class="aligncenter  wp-image-2285" alt="dbpedia_search_3" src="http://fgiasson.com/blog/wp-content/uploads/2014/01/dbpedia_search_3.png" width="481" height="523" /></a></p>
<p>In this example, only the generic search template got used to display these results. Here is the generic search results template code:</p>
<!-- Missing Gist ID -->
<h3>Manipulating Entities using the Entity API</h3>
<p>The Entity API is a powerful Drupal API that let developers and designers loading and manipulating entities that are indexed in the data store (in this case, OSF). The full <a href="https://drupal.org/project/entity">Entity API</a> is operational on the DBpedia entities because of the OSF Entities connector module.</p>
<p>As you can see in the template above (and in the other templates to follow), we can easily use the Entity API to load DBpedia entities. In these templates examples, what we are doing is to use this API to load the entities referenced by an entity. In this case, we do this to get their labels. Once we loaded the entity, we end-up with an Entity object that we can use like any other Drupal entities:</p>
<!-- Missing Gist ID -->
<h3>Mapping Entities using the sWebMap OSF Widget</h3>
<p>Because a big number of DBpedia entities does have geolocation data, we wanted to test the <a href="http://wiki.opensemanticframework.org/index.php/SWebMap">sWebMap OSF Widget</a> to be able to search, browse and locate all the geolocalized entities. What we did is to create a new Content Type. Then we created a new template for that content type that implements the sWebMap widget. The simple template we created for this purpose is available here:</p>
<!-- Missing Gist ID -->
<p>Then, once we load a page of that Content Type, we can see the sWebMap widget populated with the geolocalized DBpedia entities. In the example below, we see the top 20 records in that region (USA):</p>
<p style="text-align: left;"><a href="http://fgiasson.com/blog/wp-content/uploads/2014/01/dbpeida_swebmap_2.png"><img class="aligncenter  wp-image-2281" alt="dbpeida_swebmap_2" src="http://fgiasson.com/blog/wp-content/uploads/2014/01/dbpeida_swebmap_2.png" width="370" height="456" /></a></p>
<p style="text-align: left;">Then what we do is to filter these entities by type and attribute/values. In the following example, we filtered by <code>RadioStation</code>, and then we are selecting a filter to define the type of radio station we are looking for:</p>
<p style="text-align: left;"><a href="http://fgiasson.com/blog/wp-content/uploads/2014/01/dbpeida_swebmap_3.png"><img class="aligncenter  wp-image-2282" alt="dbpeida_swebmap_3" src="http://fgiasson.com/blog/wp-content/uploads/2014/01/dbpeida_swebmap_3.png" width="443" height="490" /></a></p>
<p style="text-align: left;">Finally we add even more filtering options to drill-down the geolocalized information we are looking for.</p>
<p style="text-align: center;"><a href="http://fgiasson.com/blog/wp-content/uploads/2014/01/dbpeida_swebmap_4.png"><img class="aligncenter  wp-image-2283" alt="dbpeida_swebmap_4" src="http://fgiasson.com/blog/wp-content/uploads/2014/01/dbpeida_swebmap_4.png" width="438" height="494" /></a></p>
<p style="text-align: left;">We end-up with all the classical radio station that broadcast in the region of Pittsburgh.</p>
<p style="text-align: center;"><a href="http://fgiasson.com/blog/wp-content/uploads/2014/01/dbpeida_swebmap_5.png"><img class="aligncenter  wp-image-2284" alt="dbpeida_swebmap_5" src="http://fgiasson.com/blog/wp-content/uploads/2014/01/dbpeida_swebmap_5.png" width="370" height="451" /></a></p>
<h3>Templating Entities using Drupal&#8217;s Templating Engine</h3>
<p>Another thing we get out of the box with Drupal and OSF for Drupal, is the possibility to template the entities view pages and the search resultsets. In any case, the selection of the template is done depending on the type of the entity to display.</p>
<p>With OSF for Drupal, we created a template selection mechanism that uses the ontologies&#8217; structure to select the proper templates. For example, if we have a <code>Broadcaster</code> template, then it could be used to template information about a <code>RadioStation</code> or a <code>TelevisionStation</code>, even if these templates are not existing.</p>
<p>Here is an example of a search resultset that displays information about different type of entities:</p>
<p><a href="http://fgiasson.com/blog/wp-content/uploads/2014/01/dbpedia_search_2.png"><img class="aligncenter" alt="dbpedia_search_2" src="http://fgiasson.com/blog/wp-content/uploads/2014/01/dbpedia_search_2.png" width="482" height="443" /></a></p>
<p>The first entity is an organization that has an image. It uses the generic template. The second one is a person which also use the generic template, but it has no image. Both are using the generic template because none of the <code>Organization</code> nor the <code>Person</code> templates have been created. However, the third result uses a different template. The third result is a <code>RadioStation</code>. However, it uses the <code>Broadcaster</code> template since the <code>RadioStation</code> class is a sub-class-of <code>Broadcaster</code> and because the <code>Broadcaster</code> template exists in the Drupal instance.</p>
<p>Here is the code of the <code>Broadcaster</code> search result template:</p>
<!-- Missing Gist ID -->
<p>Now let&#8217;s take a look at the template that displays information about a specific Entity type:</p>
<p style="text-align: center;"><a href="http://fgiasson.com/blog/wp-content/uploads/2014/01/dbpedia_entity_view.png"><img class="aligncenter  wp-image-2298" alt="dbpedia_entity_view" src="http://fgiasson.com/blog/wp-content/uploads/2014/01/dbpedia_entity_view.png" width="485" height="287" /></a></p>
<p style="text-align: left;">This minimal records displays some information about this radio station. The code of this template is:</p>
<p style="text-align: left;"><!-- Missing Gist ID --></p>
<h3>Building Complex Search Queries using the OSF Query Builder</h3>
<p>A system administrator can also use the <a title="OSF Query Builder" href="http://wiki.opensemanticframework.org/index.php/Using_the_OSF_Query_Builder">OSF Query Builder</a> to create more complex search queries. In the following query, we are doing a search for the keyword &#8220;<code>radio</code>&#8220;, we are filtering by type <code>RadioStation</code>, and we are boosting the scoring value of all the results that have the word &#8220;<code>life</code>&#8221; in their <code>slogan</code>.</p>
<p style="text-align: center;"><a href="http://fgiasson.com/blog/wp-content/uploads/2014/01/dbpeida_querybuilder_1.png"><img class="aligncenter  wp-image-2286" alt="dbpeida_querybuilder_1" src="http://fgiasson.com/blog/wp-content/uploads/2014/01/dbpeida_querybuilder_1.png" width="502" height="553" /></a></p>
<p style="text-align: left;">The top result is a radio station of Moscow that has &#8220;Life in Motion!&#8221; as its slogan. We can also see the impact of the scoring booster on the score of that result.</p>
<h3 style="text-align: left;">Conclusion</h3>
<p>As we can see with these two articles, it is relatively easy and fast to import the DBpedia dataset into a OSF instance. By doing so, we end-up with a series of tools to access, manage and publish this information. Then we can leverage the OSF platform to create all kind of web portals or other web services. All the tools are there, out-of-the-box.</p>
<p>This being said, this is not where lies the challenge. The thing is that there is more than 500 classes and 2000 properties that describes all the content present in the DBpedia Ontology. This means that more than 2000 filters may exists for the Search API, the sWebMap widget, etc. This also means that more than 500 Drupal bundles can be created with hundred of fields, etc.</p>
<p>All this need to be properly configured and managed by the Drupal site developer. However, there are mechanisms that have been developed to help them managing this amount of information such as the entity template selection mechanism that uses the ontologies&#8217; structure to select the display templates to use. For example, you could focus on the entity <code>Broadcaster</code>, and create a single template for it. Automatically, this template could be used by sub-classes such as <code>BroadcastNetwork</code>, <code>RadioStation</code>, <code>TelevisionStation</code> and many others.</p>
<p>The <a title="Open Semantic Framework" href="http://opensemanticframework.org">Open Semantic Framework</a> is really flexible and powerful as you may have noticed with this series of two articles. However, the challenge and most of the work lies into creating and configuring the portal that will use this information. The work lies into creating the search and entities templates. To properly define and manage the bundles and fields, etc.</p>
]]></content:encoded>
	</item>
<item rdf:about="http://fgiasson.com/blog/index.php/2014/01/22/loading-dbpedia-into-the-open-semantic-framework/">
	<title>Loading DBpedia into the Open Semantic Framework</title>
	<link>http://fgiasson.com/blog/index.php/2014/01/22/loading-dbpedia-into-the-open-semantic-framework/</link>
	<dc:date>2014-01-22T19:03:34Z</dc:date>
	<dc:creator><![CDATA[Frederick Giasson]]></dc:creator>
			<dc:subject><![CDATA[Open Semantic Framework]]></dc:subject>
		<dc:subject><![CDATA[OSF for Drupal]]></dc:subject>
		<dc:subject><![CDATA[OSF Web Services]]></dc:subject>
		<dc:subject><![CDATA[OSF Widgets]]></dc:subject>
		<dc:subject><![CDATA[Semantic Web]]></dc:subject>
		<dc:subject><![CDATA[Structured Dynamics]]></dc:subject>
		<dc:subject><![CDATA[#dbpedia]]></dc:subject>
		<dc:subject><![CDATA[#drupal]]></dc:subject>
		<dc:subject><![CDATA[#osf]]></dc:subject>
		<dc:subject><![CDATA[#rdf]]></dc:subject>
		<dc:subject><![CDATA[#semanticweb]]></dc:subject>
		<dc:subject><![CDATA[#webservice]]></dc:subject>
	<description><![CDATA[	
	<span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Adc&amp;rfr_id=info%3Asid%2Focoins.info%3Agenerator&amp;rft.title=Loading DBpedia into the Open Semantic Framework&amp;rft.aulast=Giasson&amp;rft.aufirst=Frederick&amp;rft.subject=Open Semantic Framework&amp;rft.subject=OSF for Drupal&amp;rft.subject=OSF Web Services&amp;rft.subject=OSF Widgets&amp;rft.subject=Semantic Web&amp;rft.subject=Structured Dynamics&amp;rft.source=Frederick Giasson&#8217;s Weblog&amp;rft.date=2014-01-22&amp;rft.type=blogPost&amp;rft.format=text&amp;rft.identifier=http://fgiasson.com/blog/index.php/2014/01/22/loading-dbpedia-into-the-open-semantic-framework/&amp;rft.language=English"></span>
This first article or a series of two will show you how to load DBpedia into a Open Semantic Framework instance. A second article will be published that will show you how the 3.5 million entities present in DBpedia can be accessible from a Drupal 7 installation. All the entities will be searchable, templatable, viewable, [&#8230;]]]></description>
	<content:encoded><![CDATA[	
	<span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Adc&amp;rfr_id=info%3Asid%2Focoins.info%3Agenerator&amp;rft.title=Loading DBpedia into the Open Semantic Framework&amp;rft.aulast=Giasson&amp;rft.aufirst=Frederick&amp;rft.subject=Open Semantic Framework&amp;rft.subject=OSF for Drupal&amp;rft.subject=OSF Web Services&amp;rft.subject=OSF Widgets&amp;rft.subject=Semantic Web&amp;rft.subject=Structured Dynamics&amp;rft.source=Frederick Giasson&#8217;s Weblog&amp;rft.date=2014-01-22&amp;rft.type=blogPost&amp;rft.format=text&amp;rft.identifier=http://fgiasson.com/blog/index.php/2014/01/22/loading-dbpedia-into-the-open-semantic-framework/&amp;rft.language=English"></span>
<p><img class="size-full wp-image-2251 alignright" alt="dbpedia_osf" src="http://fgiasson.com/blog/wp-content/uploads/2014/01/dbpedia_osf.png" width="248" height="200" /></p>
<div>This first article or a series of two will show you how to load <a title="DBpedia" href="http://dbpedia.org">DBpedia</a> into a <a title="Open Semantic Framework" href="http://opensemanticframework.org">Open Semantic Framework</a> instance. A second article will be published that will show you how the 3.5 million entities present in DBpedia can be accessible from a <a title="Drupal" href="http://drupal.org">Drupal 7</a> installation. All the entities will be searchable, templatable, viewable, mappable, editabled and revisionable directly within Drupal.</div>
<div></div>
<div>
<div>Loading DBPedia into a OSF instance is not overly complex. Someone can easily manage to do it using this tutorial, and ending up with a OSF instance loaded with the full DBpedia dataset.</div>
<div></div>
<h3>Creating a Open Semantic Framework Instance</h3>
<div>The first step is to create a OSF instance. This tutorial uses the AWS EC2 OSF image. However, you can easily perform the same steps except that you should use the <a title="OSF Installer" href="http://wiki.opensemanticframework.org/index.php/OSF_Installer">OSF Installer</a> to install OSF on your own Ubuntu 12.10 server.</div>
<div></div>
<div>To create the OSF instance we will use to load DBpedia, we use one of the following OSF 3.0 AMI:</div>
<div></div>
</div>
<table border="1" cellspacing="0" cellpadding="5">
<thead>
<tr>
<td class="tableHighlightYellow" style="text-align: center;"><strong>Region</strong></td>
<td class="tableHighlightYellow" style="text-align: center;"><strong>arch</strong></td>
<td class="tableHighlightYellow" style="text-align: center;"><strong>root store</strong></td>
<td class="tableHighlightYellow" style="text-align: center;"><strong>AMI</strong></td>
</tr>
</thead>
<tbody>
<tr>
<td style="padding: 4px;">us-east-1</td>
<td style="padding: 4px;">64-bit</td>
<td style="padding: 4px;">EBS</td>
<td style="padding: 4px;"><b>ami-afe4d1c6</b></td>
</tr>
<tr>
<td style="padding: 4px;">us-west-1</td>
<td style="padding: 4px;">64-bit</td>
<td style="padding: 4px;">EBS</td>
<td style="padding: 4px;"><b>ami-d01b2895</b></td>
</tr>
<tr>
<td style="padding: 4px;">us-west-2</td>
<td style="padding: 4px;">64-bit</td>
<td style="padding: 4px;">EBS</td>
<td style="padding: 4px;"><b>ami-c6f691f6</b></td>
</tr>
<tr>
<td style="padding: 4px;">eu-west-1</td>
<td style="padding: 4px;">64-bit</td>
<td style="padding: 4px;">EBS</td>
<td style="padding: 4px;"><b>ami-883fd4ff</b></td>
</tr>
<tr>
<td style="padding: 4px;">sa-east-1</td>
<td style="padding: 4px;">64-bit</td>
<td style="padding: 4px;">EBS</td>
<td style="padding: 4px;"><b>ami-6515b478</b></td>
</tr>
<tr>
<td style="padding: 4px;">ap-southeast-2</td>
<td style="padding: 4px;">64-bit</td>
<td style="padding: 4px;">EBS</td>
<td style="padding: 4px;"><b>ami-4734ab7d</b></td>
</tr>
<tr>
<td style="padding: 4px;">ap-southeast-1</td>
<td style="padding: 4px;">64-bit</td>
<td style="padding: 4px;">EBS</td>
<td style="padding: 4px;"><b>ami-364d1a64</b></td>
</tr>
<tr>
<td style="padding: 4px;">ap-northeast-1</td>
<td style="padding: 4px;">64-bit</td>
<td style="padding: 4px;">EBS</td>
<td style="padding: 4px;"><b>ami-476a0646</b></td>
</tr>
</tbody>
</table>
<p>Then to make things faster, we used a EC2 <strong><code>c3.4xlarge</code></strong> server with <strong><code>75G</code></strong> of disk space.</p>
<p>In this tutorial, we are not re-configuring any passwords or settings for this vanilla instance. However, if you are to create an instance of your own, you should read the <a href="http://wiki.opensemanticframework.org/index.php/Creating_and_Configuring_an_Amazon_EC2_AMI_OSF_Instance">Creating and Configuring an Amazon EC2 AMI OSF Instance</a> manual to configure it for you own purpose and to make it secure.</p>
<p>Note that most of the steps to load DBpedia into Virtuoso come from <a href="http://joernhees.de/blog/2010/10/31/setting-up-a-local-dbpedia-mirror-with-virtuoso/">Jorn Hees&#8217; article</a> about this subject.</p>
<p>Also note that you should make sure to path the files in the following 3 commits. These issues have been found while writing this blog post, and haven&#8217;t (yet) made it into the AMI we use here: <a href="https://github.com/structureddynamics/OSF-Datasets-Management-Tool/commit/88d6f1a782744a62bf83d52eceff695e0fee773b">88d6f1a782744a62bf83d52eceff695e0fee773b</a>, <a href="https://github.com/structureddynamics/OSF-Datasets-Management-Tool/commit/1389744b7dbf8f755a1bb9be468b3c51df75d6d8">1389744b7dbf8f755a1bb9be468b3c51df75d6d8</a> and <a href="https://github.com/structureddynamics/OSF-Web-Services/commit/719b4a776d43345e73847e6c785a4e9964b83a1c">719b4a776d43345e73847e6c785a4e9964b83a1c</a></p>
<h3>Downloading DBpedia</h3>
<p>The second step is to download all the DBpedia files that you want to use in your OSF instance. For this tutorial, we focus on the files where we can get the titles, abstracts, descriptions, all the mapped properties, the geolocalization of the entities, etc. You can download all these files by running the following commands:</p>
<div style="overflow:hidden;; " class="alignnone">
<div class="shadow_curl" style="margin:0 !important; max-width:100% !important;"><div class="codecolorer-container bash railscasts" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:435px;"><div class="bash codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap">&nbsp; <span style="color: #c20cb9; font-weight: bold;">mkdir</span> <span style="color: #660033;">-p</span> <span style="color: #000000; font-weight: bold;">/</span>usr<span style="color: #000000; font-weight: bold;">/</span>local<span style="color: #000000; font-weight: bold;">/</span>data<span style="color: #000000; font-weight: bold;">/</span>dbpedia<span style="color: #000000; font-weight: bold;">/</span><span style="color: #000000;">3.9</span><span style="color: #000000; font-weight: bold;">/</span>en<br />
<br />
&nbsp; <span style="color: #7a0874; font-weight: bold;">cd</span> <span style="color: #000000; font-weight: bold;">/</span>usr<span style="color: #000000; font-weight: bold;">/</span>local<span style="color: #000000; font-weight: bold;">/</span>data<span style="color: #000000; font-weight: bold;">/</span>dbpedia<span style="color: #000000; font-weight: bold;">/</span><span style="color: #000000;">3.9</span><span style="color: #000000; font-weight: bold;">/</span>en<br />
<br />
&nbsp; <span style="color: #c20cb9; font-weight: bold;">wget</span> http:<span style="color: #000000; font-weight: bold;">//</span>downloads.dbpedia.org<span style="color: #000000; font-weight: bold;">/</span><span style="color: #000000;">3.9</span><span style="color: #000000; font-weight: bold;">/</span>en<span style="color: #000000; font-weight: bold;">/</span>instance_types_en.nt.bz2<br />
&nbsp; <span style="color: #c20cb9; font-weight: bold;">wget</span> http:<span style="color: #000000; font-weight: bold;">//</span>downloads.dbpedia.org<span style="color: #000000; font-weight: bold;">/</span><span style="color: #000000;">3.9</span><span style="color: #000000; font-weight: bold;">/</span>en<span style="color: #000000; font-weight: bold;">/</span>mappingbased_properties_en.nt.bz2<br />
&nbsp; <span style="color: #c20cb9; font-weight: bold;">wget</span> http:<span style="color: #000000; font-weight: bold;">//</span>downloads.dbpedia.org<span style="color: #000000; font-weight: bold;">/</span><span style="color: #000000;">3.9</span><span style="color: #000000; font-weight: bold;">/</span>en<span style="color: #000000; font-weight: bold;">/</span>labels_en.nt.bz2<br />
&nbsp; <span style="color: #c20cb9; font-weight: bold;">wget</span> http:<span style="color: #000000; font-weight: bold;">//</span>downloads.dbpedia.org<span style="color: #000000; font-weight: bold;">/</span><span style="color: #000000;">3.9</span><span style="color: #000000; font-weight: bold;">/</span>en<span style="color: #000000; font-weight: bold;">/</span>short_abstracts_en.nt.bz2<br />
&nbsp; <span style="color: #c20cb9; font-weight: bold;">wget</span> http:<span style="color: #000000; font-weight: bold;">//</span>downloads.dbpedia.org<span style="color: #000000; font-weight: bold;">/</span><span style="color: #000000;">3.9</span><span style="color: #000000; font-weight: bold;">/</span>en<span style="color: #000000; font-weight: bold;">/</span>long_abstracts_en.nt.bz2<br />
&nbsp; <span style="color: #c20cb9; font-weight: bold;">wget</span> http:<span style="color: #000000; font-weight: bold;">//</span>downloads.dbpedia.org<span style="color: #000000; font-weight: bold;">/</span><span style="color: #000000;">3.9</span><span style="color: #000000; font-weight: bold;">/</span>en<span style="color: #000000; font-weight: bold;">/</span>images_en.nt.bz2<br />
&nbsp; <span style="color: #c20cb9; font-weight: bold;">wget</span> http:<span style="color: #000000; font-weight: bold;">//</span>downloads.dbpedia.org<span style="color: #000000; font-weight: bold;">/</span><span style="color: #000000;">3.9</span><span style="color: #000000; font-weight: bold;">/</span>en<span style="color: #000000; font-weight: bold;">/</span>geo_coordinates_en.nt.bz2<br />
<br />
&nbsp; <span style="color: #c20cb9; font-weight: bold;">bzip2</span> <span style="color: #660033;">-d</span> <span style="color: #000000; font-weight: bold;">*</span></div></div>
<img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="aligncenter shadow_img" style="margin:0 !important;height:10px;width:100%;"></div>
</div>
<h3>Loading DBpedia into Virtuoso</h3>
<p>The next step is to use the Virtuoso&#8217;s <a title="RDF Bulk Loader" href="http://virtuoso.openlinksw.com/dataspace/doc/dav/wiki/Main/VirtBulkRDFLoader">RDF Bulk Loader</a> to load all the DBpedia triples into Virtuoso. To do so, the first step we have to do is to create a new OSF dataset where the DBpedia entities will be indexed. To create the new dataset, we use the <a title="Datasets Management Tool" href="http://wiki.opensemanticframework.org/index.php/Datasets_Management_Tool">DMT</a> (Datasets Management Tool) to create it. <em>Note that the DMT is already installed on that OSF AMI 3.0</em>.</p>
<div style="overflow:hidden;; " class="alignnone">
<div class="shadow_curl" style="margin:0 !important; max-width:100% !important;"><div class="codecolorer-container bash railscasts" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:435px;"><div class="bash codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap">&nbsp; dmt <span style="color: #660033;">-n</span> <span style="color: #660033;">--osf-web-services</span>=<span style="color: #ff0000;">&quot;http://localhost/ws/&quot;</span> <span style="color: #660033;">--uri</span>=<span style="color: #ff0000;">&quot;http://dbpedia.org&quot;</span> <span style="color: #660033;">--creator</span>=<span style="color: #ff0000;">&quot;http://localhost/wsf/users/admin&quot;</span> <span style="color: #660033;">--title</span>=<span style="color: #ff0000;">&quot;DBpedia 3.9&quot;</span> <span style="color: #660033;">--group</span>=<span style="color: #ff0000;">&quot;http://localhost/wsf/groups/administrators&quot;</span></div></div>
<img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="aligncenter shadow_img" style="margin:0 !important;height:10px;width:100%;"></div>
</div>
<p>Then we have to create and configure the RDF Bulk Loader. The first step is to create the procedure file that will be used to import the tables and procedures into Virtuoso:</p>
<div style="overflow:hidden;; " class="alignnone">
<div class="shadow_curl" style="margin:0 !important; max-width:100% !important;"><div class="codecolorer-container bash railscasts" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:435px;"><div class="bash codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap">&nbsp; <span style="color: #7a0874; font-weight: bold;">cd</span> <span style="color: #000000; font-weight: bold;">/</span>tmp<span style="color: #000000; font-weight: bold;">/</span></div></div>
<img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="aligncenter shadow_img" style="margin:0 !important;height:10px;width:100%;"></div>
</div>
<p>Then create a file called <code>VirtBulkRDFLoaderScript.vsql</code> and add the following code in that new file:</p>
<div style="overflow:hidden;; " class="alignnone">
<div class="shadow_curl" style="margin:0 !important; max-width:100% !important;"><div class="codecolorer-container sql railscasts" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:435px;height:300px;"><div class="sql codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap">&nbsp; <span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">TABLE</span> load_list <span style="color: #66cc66;">&#40;</span><br />
&nbsp; &nbsp; ll_file &nbsp; &nbsp; &nbsp;<span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">,</span><br />
&nbsp; &nbsp; ll_graph &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">,</span><br />
&nbsp; &nbsp; ll_state &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">INT</span> <span style="color: #993333; font-weight: bold;">DEFAULT</span> <span style="color: #cc66cc;">0</span><span style="color: #66cc66;">,</span> <span style="color: #808080; font-style: italic;">-- 0 not started, 1 going, 2 done</span><br />
&nbsp; &nbsp; ll_started &nbsp; DATETIME<span style="color: #66cc66;">,</span><br />
&nbsp; &nbsp; ll_done &nbsp; &nbsp; &nbsp;DATETIME<span style="color: #66cc66;">,</span><br />
&nbsp; &nbsp; ll_host &nbsp; &nbsp; &nbsp;<span style="color: #993333; font-weight: bold;">INT</span><span style="color: #66cc66;">,</span><br />
&nbsp; &nbsp; ll_work_time <span style="color: #993333; font-weight: bold;">INTEGER</span><span style="color: #66cc66;">,</span><br />
&nbsp; &nbsp; ll_error &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">,</span><br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">PRIMARY</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #66cc66;">&#40;</span>ll_file<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; <span style="color: #993333; font-weight: bold;">ALTER</span> <span style="color: #993333; font-weight: bold;">INDEX</span> load_list <span style="color: #993333; font-weight: bold;">ON</span> load_list PARTITION <span style="color: #66cc66;">&#40;</span>ll_file <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; ;<br />
<br />
&nbsp; <span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">INDEX</span> ll_state <span style="color: #993333; font-weight: bold;">ON</span> load_list <span style="color: #66cc66;">&#40;</span>ll_state<span style="color: #66cc66;">,</span> ll_file<span style="color: #66cc66;">,</span> ll_graph<span style="color: #66cc66;">&#41;</span> PARTITION <span style="color: #66cc66;">&#40;</span>ll_state <span style="color: #993333; font-weight: bold;">INT</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; ;<br />
<br />
<br />
&nbsp; <span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">TABLE</span> ldlock <span style="color: #66cc66;">&#40;</span>id <span style="color: #993333; font-weight: bold;">INT</span> <span style="color: #993333; font-weight: bold;">PRIMARY</span> <span style="color: #993333; font-weight: bold;">KEY</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">ALTER</span> <span style="color: #993333; font-weight: bold;">INDEX</span> ldlock <span style="color: #993333; font-weight: bold;">ON</span> ldlock PARTITION <span style="color: #66cc66;">&#40;</span>id <span style="color: #993333; font-weight: bold;">INT</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; ;<br />
<br />
&nbsp; <span style="color: #993333; font-weight: bold;">INSERT</span> <span style="color: #993333; font-weight: bold;">INTO</span> ldlock <span style="color: #993333; font-weight: bold;">VALUES</span> <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span>;<br />
<br />
<br />
&nbsp; <span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">PROCEDURE</span><br />
&nbsp; ld_dir <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">IN</span> path <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">IN</span> mask <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">IN</span> graph <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DECLARE</span> ls ANY;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DECLARE</span> inx <span style="color: #993333; font-weight: bold;">INT</span>;<br />
&nbsp; &nbsp; ls :<span style="color: #66cc66;">=</span> sys_dirlist <span style="color: #66cc66;">&#40;</span>path<span style="color: #66cc66;">,</span> <span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">FOR</span> <span style="color: #66cc66;">&#40;</span>inx :<span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span>; inx <span style="color: #66cc66;">&lt;</span> <span style="color: #993333; font-weight: bold;">LENGTH</span> <span style="color: #66cc66;">&#40;</span>ls<span style="color: #66cc66;">&#41;</span>; inx :<span style="color: #66cc66;">=</span> inx <span style="color: #66cc66;">+</span> <span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span>ls<span style="color: #66cc66;">&#91;</span>inx<span style="color: #66cc66;">&#93;</span> <span style="color: #993333; font-weight: bold;">LIKE</span> mask<span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">SET</span> ISOLATION <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'serializable'</span>;<br />
<br />
&nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">EXISTS</span> <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">SELECT</span> <span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">FROM</span> DB<span style="color: #66cc66;">.</span>DBA<span style="color: #66cc66;">.</span>LOAD_LIST <span style="color: #993333; font-weight: bold;">WHERE</span> LL_FILE <span style="color: #66cc66;">=</span> path <span style="color: #66cc66;">||</span> <span style="color: #ff0000;">'/'</span> <span style="color: #66cc66;">||</span> ls<span style="color: #66cc66;">&#91;</span>inx<span style="color: #66cc66;">&#93;</span> <span style="color: #993333; font-weight: bold;">FOR</span> <span style="color: #993333; font-weight: bold;">UPDATE</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DECLARE</span> gfile<span style="color: #66cc66;">,</span> cgfile<span style="color: #66cc66;">,</span> ngraph <span style="color: #993333; font-weight: bold;">VARCHAR</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gfile :<span style="color: #66cc66;">=</span> path <span style="color: #66cc66;">||</span> <span style="color: #ff0000;">'/'</span> <span style="color: #66cc66;">||</span> <span style="color: #993333; font-weight: bold;">REPLACE</span> <span style="color: #66cc66;">&#40;</span>ls<span style="color: #66cc66;">&#91;</span>inx<span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">,</span> <span style="color: #ff0000;">'.gz'</span><span style="color: #66cc66;">,</span> <span style="color: #ff0000;">''</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">||</span> <span style="color: #ff0000;">'.graph'</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cgfile :<span style="color: #66cc66;">=</span> path <span style="color: #66cc66;">||</span> <span style="color: #ff0000;">'/'</span> <span style="color: #66cc66;">||</span> regexp_replace <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">REPLACE</span> <span style="color: #66cc66;">&#40;</span>ls<span style="color: #66cc66;">&#91;</span>inx<span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">,</span> <span style="color: #ff0000;">'.gz'</span><span style="color: #66cc66;">,</span> <span style="color: #ff0000;">''</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #ff0000;">'<span style="color: #000099; font-weight: bold;">\\</span>-[0-9]+<span style="color: #000099; font-weight: bold;">\\</span>.n'</span><span style="color: #66cc66;">,</span> <span style="color: #ff0000;">'.n'</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">||</span> <span style="color: #ff0000;">'.graph'</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span>file_stat <span style="color: #66cc66;">&#40;</span>gfile<span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&lt;&gt;</span> <span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; ngraph :<span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">TRIM</span> <span style="color: #66cc66;">&#40;</span>file_to_string <span style="color: #66cc66;">&#40;</span>gfile<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #ff0000;">' <span style="color: #000099; font-weight: bold;">\r</span><span style="color: #000099; font-weight: bold;">\n</span>'</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">ELSE</span> <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span>file_stat <span style="color: #66cc66;">&#40;</span>cgfile<span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&lt;&gt;</span> <span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; ngraph :<span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">TRIM</span> <span style="color: #66cc66;">&#40;</span>file_to_string <span style="color: #66cc66;">&#40;</span>cgfile<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #ff0000;">' <span style="color: #000099; font-weight: bold;">\r</span><span style="color: #000099; font-weight: bold;">\n</span>'</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">ELSE</span> <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span>file_stat <span style="color: #66cc66;">&#40;</span>path <span style="color: #66cc66;">||</span> <span style="color: #ff0000;">'/'</span> <span style="color: #66cc66;">||</span> <span style="color: #ff0000;">'global.graph'</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&lt;&gt;</span> <span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; ngraph :<span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">TRIM</span> <span style="color: #66cc66;">&#40;</span>file_to_string <span style="color: #66cc66;">&#40;</span>path <span style="color: #66cc66;">||</span> <span style="color: #ff0000;">'/'</span> <span style="color: #66cc66;">||</span> <span style="color: #ff0000;">'global.graph'</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #ff0000;">' <span style="color: #000099; font-weight: bold;">\r</span><span style="color: #000099; font-weight: bold;">\n</span>'</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">ELSE</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ngraph :<span style="color: #66cc66;">=</span> graph;&nbsp; <br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span>ngraph <span style="color: #993333; font-weight: bold;">IS</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#123;</span> &nbsp; <br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">INSERT</span> <span style="color: #993333; font-weight: bold;">INTO</span> DB<span style="color: #66cc66;">.</span>DBA<span style="color: #66cc66;">.</span>LOAD_LIST <span style="color: #66cc66;">&#40;</span>ll_file<span style="color: #66cc66;">,</span> ll_graph<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">VALUES</span> <span style="color: #66cc66;">&#40;</span>path <span style="color: #66cc66;">||</span> <span style="color: #ff0000;">'/'</span> <span style="color: #66cc66;">||</span> ls<span style="color: #66cc66;">&#91;</span>inx<span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">,</span> ngraph<span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#125;</span><br />
<br />
&nbsp; &nbsp; &nbsp; COMMIT <span style="color: #993333; font-weight: bold;">WORK</span>;<br />
&nbsp; &nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; ;<br />
<br />
<br />
&nbsp; <span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">PROCEDURE</span><br />
&nbsp; rdf_read_dir <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">IN</span> path <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">IN</span> mask <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">IN</span> graph <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; ld_dirr <span style="color: #66cc66;">&#40;</span>path<span style="color: #66cc66;">,</span> mask<span style="color: #66cc66;">,</span> graph<span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; ;<br />
<br />
&nbsp; <span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">PROCEDURE</span> <br />
&nbsp; ld_dir_all <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">IN</span> path <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">IN</span> mask <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">IN</span> graph <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DECLARE</span> ls ANY;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DECLARE</span> inx <span style="color: #993333; font-weight: bold;">INT</span>;<br />
&nbsp; &nbsp; ls :<span style="color: #66cc66;">=</span> sys_dirlist <span style="color: #66cc66;">&#40;</span>path<span style="color: #66cc66;">,</span> <span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; ld_dir <span style="color: #66cc66;">&#40;</span>path<span style="color: #66cc66;">,</span> mask<span style="color: #66cc66;">,</span> graph<span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">FOR</span> <span style="color: #66cc66;">&#40;</span>inx :<span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span>; inx <span style="color: #66cc66;">&lt;</span> <span style="color: #993333; font-weight: bold;">LENGTH</span> <span style="color: #66cc66;">&#40;</span>ls<span style="color: #66cc66;">&#41;</span>; inx :<span style="color: #66cc66;">=</span> inx <span style="color: #66cc66;">+</span> <span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span>ls<span style="color: #66cc66;">&#91;</span>inx<span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">&lt;&gt;</span> <span style="color: #ff0000;">'.'</span> <span style="color: #993333; font-weight: bold;">AND</span> ls<span style="color: #66cc66;">&#91;</span>inx<span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">&lt;&gt;</span> <span style="color: #ff0000;">'..'</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; &nbsp; ld_dir_all <span style="color: #66cc66;">&#40;</span>path<span style="color: #66cc66;">||</span><span style="color: #ff0000;">'/'</span><span style="color: #66cc66;">||</span>ls<span style="color: #66cc66;">&#91;</span>inx<span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">,</span> mask<span style="color: #66cc66;">,</span> graph<span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; ;<br />
<br />
&nbsp; <span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">PROCEDURE</span><br />
&nbsp; ld_add <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">IN</span> _fname <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">IN</span> _graph <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; <span style="color: #808080; font-style: italic;">--log_message (sprintf ('ld_add: %s, %s', _fname, _graph));</span><br />
<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">SET</span> ISOLATION <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'serializable'</span>;<br />
<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">EXISTS</span> <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">SELECT</span> <span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">FROM</span> DB<span style="color: #66cc66;">.</span>DBA<span style="color: #66cc66;">.</span>LOAD_LIST <span style="color: #993333; font-weight: bold;">WHERE</span> LL_FILE <span style="color: #66cc66;">=</span> _fname <span style="color: #993333; font-weight: bold;">FOR</span> <span style="color: #993333; font-weight: bold;">UPDATE</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">INSERT</span> <span style="color: #993333; font-weight: bold;">INTO</span> DB<span style="color: #66cc66;">.</span>DBA<span style="color: #66cc66;">.</span>LOAD_LIST <span style="color: #66cc66;">&#40;</span>LL_FILE<span style="color: #66cc66;">,</span> LL_GRAPH<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">VALUES</span> <span style="color: #66cc66;">&#40;</span>_fname<span style="color: #66cc66;">,</span> _graph<span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; &nbsp; COMMIT <span style="color: #993333; font-weight: bold;">WORK</span>;<br />
&nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; ;<br />
<br />
&nbsp; <span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">PROCEDURE</span> <br />
&nbsp; ld_ttlp_flags <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">IN</span> fname <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span>fname <span style="color: #993333; font-weight: bold;">LIKE</span> <span style="color: #ff0000;">'%/btc-2009%'</span> <span style="color: #993333; font-weight: bold;">OR</span> fname <span style="color: #993333; font-weight: bold;">LIKE</span> <span style="color: #ff0000;">'%.nq%'</span> <span style="color: #993333; font-weight: bold;">OR</span> fname <span style="color: #993333; font-weight: bold;">LIKE</span> <span style="color: #ff0000;">'%.n4'</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">RETURN</span> <span style="color: #cc66cc;">255</span> <span style="color: #66cc66;">+</span> <span style="color: #cc66cc;">512</span>;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">RETURN</span> <span style="color: #cc66cc;">255</span>;<br />
&nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; ;<br />
<br />
&nbsp; <span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">PROCEDURE</span><br />
&nbsp; ld_file <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">IN</span> f <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">IN</span> graph <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DECLARE</span> gzip_name <span style="color: #993333; font-weight: bold;">VARCHAR</span>;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DECLARE</span> exit handler <span style="color: #993333; font-weight: bold;">FOR</span> sqlstate <span style="color: #ff0000;">'*'</span> <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">ROLLBACK</span> <span style="color: #993333; font-weight: bold;">WORK</span>;<br />
&nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">UPDATE</span> DB<span style="color: #66cc66;">.</span>DBA<span style="color: #66cc66;">.</span>LOAD_LIST<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">SET</span> LL_STATE <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">2</span><span style="color: #66cc66;">,</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LL_DONE <span style="color: #66cc66;">=</span> CURDATETIME <span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LL_ERROR <span style="color: #66cc66;">=</span> __sql_state <span style="color: #66cc66;">||</span> <span style="color: #ff0000;">' '</span> <span style="color: #66cc66;">||</span> __sql_message<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">WHERE</span> LL_FILE <span style="color: #66cc66;">=</span> f;<br />
&nbsp; &nbsp; &nbsp; COMMIT <span style="color: #993333; font-weight: bold;">WORK</span>;<br />
<br />
&nbsp; &nbsp; &nbsp; log_message <span style="color: #66cc66;">&#40;</span>sprintf <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">' File %s error %s %s'</span><span style="color: #66cc66;">,</span> f<span style="color: #66cc66;">,</span> __sql_state<span style="color: #66cc66;">,</span> __sql_message<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">RETURN</span>;<br />
&nbsp; &nbsp; <span style="color: #66cc66;">&#125;</span>;<br />
<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span>f <span style="color: #993333; font-weight: bold;">LIKE</span> <span style="color: #ff0000;">'%.grdf'</span> <span style="color: #993333; font-weight: bold;">OR</span> f <span style="color: #993333; font-weight: bold;">LIKE</span> <span style="color: #ff0000;">'%.grdf.gz'</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; load_grdf <span style="color: #66cc66;">&#40;</span>f<span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">ELSE</span> <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span>f <span style="color: #993333; font-weight: bold;">LIKE</span> <span style="color: #ff0000;">'%.gz'</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; gzip_name :<span style="color: #66cc66;">=</span> regexp_replace <span style="color: #66cc66;">&#40;</span>f<span style="color: #66cc66;">,</span> <span style="color: #ff0000;">'<span style="color: #000099; font-weight: bold;">\.</span>gz<span style="color: #000099; font-weight: bold;">\x</span>24'</span><span style="color: #66cc66;">,</span> <span style="color: #ff0000;">''</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span>gzip_name <span style="color: #993333; font-weight: bold;">LIKE</span> <span style="color: #ff0000;">'%.xml'</span> <span style="color: #993333; font-weight: bold;">OR</span> gzip_name <span style="color: #993333; font-weight: bold;">LIKE</span> <span style="color: #ff0000;">'%.owl'</span> <span style="color: #993333; font-weight: bold;">OR</span> gzip_name <span style="color: #993333; font-weight: bold;">LIKE</span> <span style="color: #ff0000;">'%.rdf'</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; DB<span style="color: #66cc66;">.</span>DBA<span style="color: #66cc66;">.</span>RDF_LOAD_RDFXML <span style="color: #66cc66;">&#40;</span>gz_file_open <span style="color: #66cc66;">&#40;</span>f<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> graph<span style="color: #66cc66;">,</span> graph<span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">ELSE</span><br />
&nbsp; &nbsp; TTLP <span style="color: #66cc66;">&#40;</span>gz_file_open <span style="color: #66cc66;">&#40;</span>f<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> graph<span style="color: #66cc66;">,</span> graph<span style="color: #66cc66;">,</span> ld_ttlp_flags <span style="color: #66cc66;">&#40;</span>gzip_name<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">ELSE</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span>f <span style="color: #993333; font-weight: bold;">LIKE</span> <span style="color: #ff0000;">'%.xml'</span> <span style="color: #993333; font-weight: bold;">OR</span> f <span style="color: #993333; font-weight: bold;">LIKE</span> <span style="color: #ff0000;">'%.owl'</span> <span style="color: #993333; font-weight: bold;">OR</span> f <span style="color: #993333; font-weight: bold;">LIKE</span> <span style="color: #ff0000;">'%.rdf'</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; DB<span style="color: #66cc66;">.</span>DBA<span style="color: #66cc66;">.</span>RDF_LOAD_RDFXML <span style="color: #66cc66;">&#40;</span>file_open <span style="color: #66cc66;">&#40;</span>f<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> graph<span style="color: #66cc66;">,</span> graph<span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">ELSE</span><br />
&nbsp; &nbsp; TTLP <span style="color: #66cc66;">&#40;</span>file_open <span style="color: #66cc66;">&#40;</span>f<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> graph<span style="color: #66cc66;">,</span> graph<span style="color: #66cc66;">,</span> ld_ttlp_flags <span style="color: #66cc66;">&#40;</span>f<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#125;</span><br />
<br />
&nbsp; &nbsp; <span style="color: #808080; font-style: italic;">--log_message (sprintf ('loaded %s', f));</span><br />
&nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; ;<br />
<br />
&nbsp; <span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">PROCEDURE</span><br />
&nbsp; rdf_load_dir <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">IN</span> path <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">,</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IN</span> mask <span style="color: #993333; font-weight: bold;">VARCHAR</span> :<span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'%.nt'</span><span style="color: #66cc66;">,</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IN</span> graph <span style="color: #993333; font-weight: bold;">VARCHAR</span> :<span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'http://dbpedia.org'</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; <span style="color: #66cc66;">&#123;</span><br />
<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DELETE</span> <span style="color: #993333; font-weight: bold;">FROM</span> DB<span style="color: #66cc66;">.</span>DBA<span style="color: #66cc66;">.</span>LOAD_LIST <span style="color: #993333; font-weight: bold;">WHERE</span> LL_FILE <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'##stop'</span>;<br />
&nbsp; &nbsp; COMMIT <span style="color: #993333; font-weight: bold;">WORK</span>;<br />
<br />
&nbsp; &nbsp; ld_dir <span style="color: #66cc66;">&#40;</span>path<span style="color: #66cc66;">,</span> mask<span style="color: #66cc66;">,</span> graph<span style="color: #66cc66;">&#41;</span>;<br />
<br />
&nbsp; &nbsp; rdf_loader_run <span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; ;<br />
<br />
<br />
&nbsp; <span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">PROCEDURE</span> <br />
&nbsp; ld_array <span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DECLARE</span> <span style="color: #993333; font-weight: bold;">FIRST</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">LAST</span><span style="color: #66cc66;">,</span> arr<span style="color: #66cc66;">,</span> len<span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">LOCAL</span> ANY;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DECLARE</span> cr CURSOR <span style="color: #993333; font-weight: bold;">FOR</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">SELECT</span> TOP <span style="color: #cc66cc;">100</span> LL_FILE<span style="color: #66cc66;">,</span> LL_GRAPH<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">FROM</span> DB<span style="color: #66cc66;">.</span>DBA<span style="color: #66cc66;">.</span>LOAD_LIST <span style="color: #993333; font-weight: bold;">TABLE</span> <span style="color: #993333; font-weight: bold;">OPTION</span> <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">INDEX</span> ll_state<span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">WHERE</span> LL_STATE <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span><br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">FOR</span> <span style="color: #993333; font-weight: bold;">UPDATE</span>;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DECLARE</span> fill <span style="color: #993333; font-weight: bold;">INT</span>;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DECLARE</span> f<span style="color: #66cc66;">,</span> g <span style="color: #993333; font-weight: bold;">VARCHAR</span>;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DECLARE</span> r ANY;<br />
&nbsp; &nbsp; WHENEVER <span style="color: #993333; font-weight: bold;">NOT</span> FOUND <span style="color: #993333; font-weight: bold;">GOTO</span> done;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">FIRST</span> :<span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span>;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">LAST</span> :<span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span>;<br />
&nbsp; &nbsp;arr :<span style="color: #66cc66;">=</span> make_array <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">100</span><span style="color: #66cc66;">,</span> <span style="color: #ff0000;">'any'</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; fill :<span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span>;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">OPEN</span> cr;<br />
&nbsp; &nbsp; len :<span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span>;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">FOR</span> <span style="color: #66cc66;">&#40;</span>;;<span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; FETCH cr <span style="color: #993333; font-weight: bold;">INTO</span> f<span style="color: #66cc66;">,</span> g;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">FIRST</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">FIRST</span> :<span style="color: #66cc66;">=</span> f;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">LAST</span> :<span style="color: #66cc66;">=</span> f;<br />
&nbsp; &nbsp; &nbsp; &nbsp; arr<span style="color: #66cc66;">&#91;</span>fill<span style="color: #66cc66;">&#93;</span> :<span style="color: #66cc66;">=</span> VECTOR <span style="color: #66cc66;">&#40;</span>f<span style="color: #66cc66;">,</span> g<span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; len :<span style="color: #66cc66;">=</span> len <span style="color: #66cc66;">+</span> <span style="color: #993333; font-weight: bold;">CAST</span> <span style="color: #66cc66;">&#40;</span>file_stat <span style="color: #66cc66;">&#40;</span>f<span style="color: #66cc66;">,</span> <span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">AS</span> <span style="color: #993333; font-weight: bold;">INT</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; fill :<span style="color: #66cc66;">=</span> fill <span style="color: #66cc66;">+</span> <span style="color: #cc66cc;">1</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span>len <span style="color: #66cc66;">&gt;</span> <span style="color: #cc66cc;">2000000</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">GOTO</span> done;<br />
&nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; &nbsp;done:<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">FIRST</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">RETURN</span> <span style="color: #cc66cc;">0</span>;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">&lt;&gt;</span> sys_stat <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'cl_run_local_only'</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span> <br />
&nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">LOCAL</span> :<span style="color: #66cc66;">=</span> sys_stat <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'cl_this_host'</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">UPDATE</span> load_list <span style="color: #993333; font-weight: bold;">SET</span> ll_state <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">1</span><span style="color: #66cc66;">,</span> ll_started <span style="color: #66cc66;">=</span> CURDATETIME <span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> LL_HOST <span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">LOCAL</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">WHERE</span> ll_file <span style="color: #66cc66;">&gt;=</span> <span style="color: #993333; font-weight: bold;">FIRST</span> <span style="color: #993333; font-weight: bold;">AND</span> ll_file <span style="color: #66cc66;">&lt;=</span> <span style="color: #993333; font-weight: bold;">LAST</span>;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">RETURN</span> arr;<br />
&nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; ;<br />
<br />
&nbsp; <span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">PROCEDURE</span><br />
&nbsp; rdf_loader_run <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">IN</span> max_files <span style="color: #993333; font-weight: bold;">INTEGER</span> :<span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">IN</span> log_enable <span style="color: #993333; font-weight: bold;">INT</span> :<span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">2</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DECLARE</span> sec_delay <span style="color: #993333; font-weight: bold;">FLOAT</span>;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DECLARE</span> _f<span style="color: #66cc66;">,</span> _graph <span style="color: #993333; font-weight: bold;">VARCHAR</span>;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DECLARE</span> arr ANY;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DECLARE</span> xx<span style="color: #66cc66;">,</span> inx<span style="color: #66cc66;">,</span> tx_mode<span style="color: #66cc66;">,</span> ld_mode <span style="color: #993333; font-weight: bold;">INT</span>;<br />
&nbsp; &nbsp; ld_mode :<span style="color: #66cc66;">=</span> log_enable;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">=</span> sys_stat <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'cl_run_local_only'</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span>log_enable <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">2</span> <span style="color: #993333; font-weight: bold;">AND</span> cl_this_host <span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; &nbsp; cl_exec <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'checkpoint_interval (0)'</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; cl_exec <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'__dbf_set ('</span><span style="color: #ff0000;">'cl_non_logged_write_mode'</span><span style="color: #ff0000;">', 1)'</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span>cl_this_host <span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; cl_exec<span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'__dbf_set('</span><span style="color: #ff0000;">'cl_max_keep_alives_missed'</span><span style="color: #ff0000;">',3000)'</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; &nbsp; tx_mode :<span style="color: #66cc66;">=</span> bit_and <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">,</span> log_enable<span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; log_message <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'Loader started'</span><span style="color: #66cc66;">&#41;</span>;<br />
<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DELETE</span> <span style="color: #993333; font-weight: bold;">FROM</span> DB<span style="color: #66cc66;">.</span>DBA<span style="color: #66cc66;">.</span>LOAD_LIST <span style="color: #993333; font-weight: bold;">WHERE</span> LL_FILE <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'##stop'</span>;<br />
&nbsp; &nbsp; COMMIT <span style="color: #993333; font-weight: bold;">WORK</span>;<br />
<br />
&nbsp; &nbsp; WHILE <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">SET</span> ISOLATION <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'repeatable'</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DECLARE</span> exit handler <span style="color: #993333; font-weight: bold;">FOR</span> sqlstate <span style="color: #ff0000;">'40001'</span> <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">ROLLBACK</span> <span style="color: #993333; font-weight: bold;">WORK</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sec_delay :<span style="color: #66cc66;">=</span> RND<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1000</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">*</span><span style="color: #cc66cc;">0.001</span>;<br />
&nbsp; &nbsp; log_message<span style="color: #66cc66;">&#40;</span>sprintf<span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'deadlock in loader, waiting %d milliseconds'</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">CAST</span> <span style="color: #66cc66;">&#40;</span>sec_delay <span style="color: #66cc66;">*</span> <span style="color: #cc66cc;">1000</span> <span style="color: #993333; font-weight: bold;">AS</span> <span style="color: #993333; font-weight: bold;">INTEGER</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; delay<span style="color: #66cc66;">&#40;</span>sec_delay<span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">GOTO</span> again;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#125;</span>;<br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp;again:;<br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">EXISTS</span> <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">SELECT</span> <span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">FROM</span> DB<span style="color: #66cc66;">.</span>DBA<span style="color: #66cc66;">.</span>LOAD_LIST <span style="color: #993333; font-weight: bold;">WHERE</span> LL_FILE <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'##stop'</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; &nbsp; log_message <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'File load stopped by rdf_load_stop.'</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">RETURN</span>;<br />
&nbsp; &nbsp; <span style="color: #66cc66;">&#125;</span><br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; log_enable <span style="color: #66cc66;">&#40;</span>tx_mode<span style="color: #66cc66;">,</span> <span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>;<br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span>max_files <span style="color: #993333; font-weight: bold;">IS</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span> <span style="color: #993333; font-weight: bold;">AND</span> max_files <span style="color: #66cc66;">&lt;=</span> <span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; &nbsp; COMMIT <span style="color: #993333; font-weight: bold;">WORK</span>;<br />
&nbsp; &nbsp; &nbsp; log_message <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'Max_files reached. Finishing.'</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">RETURN</span>;<br />
&nbsp; &nbsp; <span style="color: #66cc66;">&#125;</span><br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; WHENEVER <span style="color: #993333; font-weight: bold;">NOT</span> FOUND <span style="color: #993333; font-weight: bold;">GOTO</span> looks_empty;<br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #808080; font-style: italic;">-- &nbsp; &nbsp; &nbsp;log_message ('Getting next file.');</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">SET</span> ISOLATION <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'serializable'</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">SELECT</span> id <span style="color: #993333; font-weight: bold;">INTO</span> xx <span style="color: #993333; font-weight: bold;">FROM</span> ldlock <span style="color: #993333; font-weight: bold;">WHERE</span> id <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span> <span style="color: #993333; font-weight: bold;">FOR</span> <span style="color: #993333; font-weight: bold;">UPDATE</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; arr :<span style="color: #66cc66;">=</span> ld_array <span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; COMMIT <span style="color: #993333; font-weight: bold;">WORK</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">=</span> arr<span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">GOTO</span> looks_empty;<br />
&nbsp; &nbsp; &nbsp; &nbsp; log_enable <span style="color: #66cc66;">&#40;</span>ld_mode<span style="color: #66cc66;">,</span> <span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>;<br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">FOR</span> <span style="color: #66cc66;">&#40;</span>inx :<span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span>; inx <span style="color: #66cc66;">&lt;</span> <span style="color: #cc66cc;">100</span>; inx :<span style="color: #66cc66;">=</span> inx <span style="color: #66cc66;">+</span> <span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">=</span> arr<span style="color: #66cc66;">&#91;</span>inx<span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">GOTO</span> arr_done;<br />
&nbsp; &nbsp; &nbsp; ld_file <span style="color: #66cc66;">&#40;</span>arr<span style="color: #66cc66;">&#91;</span>inx<span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">,</span> arr<span style="color: #66cc66;">&#91;</span>inx<span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">UPDATE</span> DB<span style="color: #66cc66;">.</span>DBA<span style="color: #66cc66;">.</span>LOAD_LIST <span style="color: #993333; font-weight: bold;">SET</span> LL_STATE <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">2</span><span style="color: #66cc66;">,</span> LL_DONE <span style="color: #66cc66;">=</span> CURDATETIME <span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">WHERE</span> LL_FILE <span style="color: #66cc66;">=</span> arr<span style="color: #66cc66;">&#91;</span>inx<span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#93;</span>;<br />
&nbsp; &nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; &nbsp; &nbsp; arr_done:<br />
&nbsp; &nbsp; &nbsp; &nbsp; log_enable <span style="color: #66cc66;">&#40;</span>tx_mode<span style="color: #66cc66;">,</span> <span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>;<br />
<br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span>max_files <span style="color: #993333; font-weight: bold;">IS</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">&#41;</span> max_files :<span style="color: #66cc66;">=</span> max_files <span style="color: #66cc66;">-</span> <span style="color: #cc66cc;">100</span>;<br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; COMMIT <span style="color: #993333; font-weight: bold;">WORK</span>;<br />
&nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#125;</span><br />
<br />
&nbsp; &nbsp;looks_empty:<br />
&nbsp; &nbsp; COMMIT <span style="color: #993333; font-weight: bold;">WORK</span>;<br />
&nbsp; &nbsp; log_message <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'No more files to load. Loader has finished,'</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">RETURN</span>;<br />
<br />
&nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; ;<br />
<br />
&nbsp; <span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">PROCEDURE</span> <br />
&nbsp; rdf_load_stop <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">IN</span> force <span style="color: #993333; font-weight: bold;">INT</span> :<span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">INSERT</span> <span style="color: #993333; font-weight: bold;">INTO</span> DB<span style="color: #66cc66;">.</span>DBA<span style="color: #66cc66;">.</span>LOAD_LIST <span style="color: #66cc66;">&#40;</span>LL_FILE<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">VALUES</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'##stop'</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; COMMIT <span style="color: #993333; font-weight: bold;">WORK</span>;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span>force<span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; cl_exec <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'txn_killall (1)'</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; ;<br />
<br />
<br />
&nbsp; <span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">PROCEDURE</span> <br />
&nbsp; RDF_LOADER_RUN_1 <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">IN</span> x <span style="color: #993333; font-weight: bold;">INT</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">IN</span> y <span style="color: #993333; font-weight: bold;">INT</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; rdf_loader_run <span style="color: #66cc66;">&#40;</span>x<span style="color: #66cc66;">,</span> y<span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; ;<br />
<br />
&nbsp; <span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">PROCEDURE</span> <br />
&nbsp; rdf_ld_srv <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">IN</span> log_enable <span style="color: #993333; font-weight: bold;">INT</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DECLARE</span> aq ANY;<br />
&nbsp; &nbsp; aq :<span style="color: #66cc66;">=</span> async_queue <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; aq_request <span style="color: #66cc66;">&#40;</span>aq<span style="color: #66cc66;">,</span> <span style="color: #ff0000;">'DB.DBA.RDF_LOADER_RUN_1'</span><span style="color: #66cc66;">,</span> VECTOR <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span> log_enable<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; aq_wait_all <span style="color: #66cc66;">&#40;</span>aq<span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; ;<br />
<br />
<br />
&nbsp; <span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">PROCEDURE</span> <br />
&nbsp; load_grdf <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">IN</span> f <span style="color: #993333; font-weight: bold;">VARCHAR</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; <span style="color: #66cc66;">&#123;</span><br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DECLARE</span> line ANY;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DECLARE</span> inx <span style="color: #993333; font-weight: bold;">INT</span>;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DECLARE</span> ses ANY;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">DECLARE</span> gr <span style="color: #993333; font-weight: bold;">VARCHAR</span>;<br />
<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span>f <span style="color: #993333; font-weight: bold;">LIKE</span> <span style="color: #ff0000;">'%.gz'</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; ses :<span style="color: #66cc66;">=</span> gz_file_open <span style="color: #66cc66;">&#40;</span>f<span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">ELSE</span><br />
&nbsp; &nbsp; &nbsp; ses :<span style="color: #66cc66;">=</span> file_open <span style="color: #66cc66;">&#40;</span>f<span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; inx :<span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span>;<br />
&nbsp; &nbsp; line :<span style="color: #66cc66;">=</span> <span style="color: #ff0000;">''</span>;<br />
&nbsp; &nbsp; WHILE <span style="color: #66cc66;">&#40;</span>line <span style="color: #66cc66;">&lt;&gt;</span> <span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#123;</span> <br />
&nbsp; &nbsp; &nbsp; &nbsp; gr :<span style="color: #66cc66;">=</span> ses_read_line <span style="color: #66cc66;">&#40;</span>ses<span style="color: #66cc66;">,</span> <span style="color: #cc66cc;">0</span><span style="color: #66cc66;">,</span> <span style="color: #cc66cc;">0</span><span style="color: #66cc66;">,</span> <span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span>gr <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">RETURN</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; line :<span style="color: #66cc66;">=</span> ses_read_line <span style="color: #66cc66;">&#40;</span>ses<span style="color: #66cc66;">,</span> <span style="color: #cc66cc;">0</span><span style="color: #66cc66;">,</span> <span style="color: #cc66cc;">0</span><span style="color: #66cc66;">,</span> <span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #66cc66;">&#40;</span>line <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">RETURN</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; DB<span style="color: #66cc66;">.</span>DBA<span style="color: #66cc66;">.</span>RDF_LOAD_RDFXML <span style="color: #66cc66;">&#40;</span>line<span style="color: #66cc66;">,</span> gr<span style="color: #66cc66;">,</span> gr<span style="color: #66cc66;">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; inx :<span style="color: #66cc66;">=</span> inx <span style="color: #66cc66;">+</span> <span style="color: #cc66cc;">1</span>;<br />
&nbsp; &nbsp; &nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; <span style="color: #66cc66;">&#125;</span><br />
&nbsp; ;<br />
<br />
&nbsp; <span style="color: #808080; font-style: italic;">-- cl_exec ('set lock_escalation_pct = 110');</span><br />
&nbsp; <span style="color: #808080; font-style: italic;">-- cl_exec ('DB.DBA.RDF_LD_SRV (1)') &amp;</span><br />
&nbsp; <span style="color: #808080; font-style: italic;">-- cl_exec ('DB.DBA.RDF_LD_SRV (2)') &amp;</span></div></div>
<img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="aligncenter shadow_img" style="margin:0 !important;height:10px;width:100%;"></div>
</div>
<p>Then we have to load it into Virtuoso using the following command:</p>
<div style="overflow:hidden;; " class="alignnone">
<div class="shadow_curl" style="margin:0 !important; max-width:100% !important;"><div class="codecolorer-container bash railscasts" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:435px;"><div class="bash codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap">&nbsp; <span style="color: #000000; font-weight: bold;">/</span>usr<span style="color: #000000; font-weight: bold;">/</span>bin<span style="color: #000000; font-weight: bold;">/</span>isql-vt localhost dba dba VirtBulkRDFLoaderScript.vsql</div></div>
<img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="aligncenter shadow_img" style="margin:0 !important;height:10px;width:100%;"></div>
</div>
<p>Then we have to configure the RDF Bulk Loader. First enter in the <code>isql</code> interface:</p>
<div style="overflow:hidden;; " class="alignnone">
<div class="shadow_curl" style="margin:0 !important; max-width:100% !important;"><div class="codecolorer-container bash railscasts" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:435px;"><div class="bash codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap">&nbsp; <span style="color: #000000; font-weight: bold;">/</span>usr<span style="color: #000000; font-weight: bold;">/</span>bin<span style="color: #000000; font-weight: bold;">/</span>isql-vt</div></div>
<img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="aligncenter shadow_img" style="margin:0 !important;height:10px;width:100%;"></div>
</div>
<p>Then copy/paste the following SQL code into the <code>isql</code> interface:</p>
<div style="overflow:hidden;; " class="alignnone">
<div class="shadow_curl" style="margin:0 !important; max-width:100% !important;"><div class="codecolorer-container sql railscasts" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:435px;"><div class="sql codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap">&nbsp; <span style="color: #808080; font-style: italic;">-- load the files to bulk-load</span><br />
&nbsp; ld_dir_all<span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'/usr/local/data/dbpedia/3.9'</span><span style="color: #66cc66;">,</span> <span style="color: #ff0000;">'*.*'</span><span style="color: #66cc66;">,</span> <span style="color: #ff0000;">'http://dbpedia.org'</span><span style="color: #66cc66;">&#41;</span>;<br />
<br />
&nbsp; <span style="color: #808080; font-style: italic;">-- list all the files that will be loaded</span><br />
&nbsp; <span style="color: #993333; font-weight: bold;">SELECT</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">FROM</span> DB<span style="color: #66cc66;">.</span>DBA<span style="color: #66cc66;">.</span>LOAD_LIST;<br />
<br />
&nbsp; <span style="color: #808080; font-style: italic;">-- if unsatisfied use:</span><br />
&nbsp; <span style="color: #808080; font-style: italic;">-- delete from DB.DBA.LOAD_LIST and redo;</span><br />
&nbsp; EXIT;</div></div>
<img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="aligncenter shadow_img" style="margin:0 !important;height:10px;width:100%;"></div>
</div>
<p>Then enter the <code>isql</code> interface again:</p>
<div style="overflow:hidden;; " class="alignnone">
<div class="shadow_curl" style="margin:0 !important; max-width:100% !important;"><div class="codecolorer-container bash railscasts" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:435px;"><div class="bash codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap">&nbsp; <span style="color: #000000; font-weight: bold;">/</span>usr<span style="color: #000000; font-weight: bold;">/</span>bin<span style="color: #000000; font-weight: bold;">/</span>isql-vt</div></div>
<img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="aligncenter shadow_img" style="margin:0 !important;height:10px;width:100%;"></div>
</div>
<p>And copy/paste the following SQL lines:</p>
<div style="overflow:hidden;; " class="alignnone">
<div class="shadow_curl" style="margin:0 !important; max-width:100% !important;"><div class="codecolorer-container sql railscasts" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:435px;"><div class="sql codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap">&nbsp; rdf_loader_run<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span>;<br />
<br />
&nbsp; <span style="color: #808080; font-style: italic;">-- will take approx. 2 hours with that EC2 server</span><br />
<br />
&nbsp; checkpoint;<br />
&nbsp; commit <span style="color: #993333; font-weight: bold;">WORK</span>;<br />
&nbsp; checkpoint;<br />
&nbsp; EXIT;</div></div>
<img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="aligncenter shadow_img" style="margin:0 !important;height:10px;width:100%;"></div>
</div>
<h3>Configure the Datasets Management Tool</h3>
<p>The next step is to properly configure the DMT to bulk load all the DBpedia entities into OSF.</p>
<p>Let&#8217;s step back, and explain what we are doing here. What we did with the steps above, is to use a fast method to import all the 3.5 million DBpedia records into Virtuoso. What we are doing now is to take these records, and to index them in the other underlying OSF systems (namely, the Solr full text search &amp; faceting server). What the following steps will be doing is to load all these entities into the Solr index using the CRUD: Create web service endpoint. Once this step is finished, it means that all the DBpedia entities will be searchable and facetable using the <a title="OSF Search Web Service API" href="http://wiki.opensemanticframework.org/index.php/Search">OSF Search endpoint</a>.</p>
<p>The first step is to edit the dmt.ini file to add information about the dataset to update:</p>
<div style="overflow:hidden;; " class="alignnone">
<div class="shadow_curl" style="margin:0 !important; max-width:100% !important;"><div class="codecolorer-container bash railscasts" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:435px;"><div class="bash codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap">&nbsp; <span style="color: #c20cb9; font-weight: bold;">vim</span> <span style="color: #000000; font-weight: bold;">/</span>usr<span style="color: #000000; font-weight: bold;">/</span>share<span style="color: #000000; font-weight: bold;">/</span>datasets-management-tool<span style="color: #000000; font-weight: bold;">/</span>dmt.ini</div></div>
<img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="aligncenter shadow_img" style="margin:0 !important;height:10px;width:100%;"></div>
</div>
<p>Then add the following section at the end of the file:</p>
<div style="overflow:hidden;; " class="alignnone">
<div class="shadow_curl" style="margin:0 !important; max-width:100% !important;"><div class="codecolorer-container ini railscasts" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:435px;"><div class="ini codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap">&nbsp; <span style="color: #000066; font-weight:bold;"><span style="">&#91;</span>DBpedia<span style="">&#93;</span></span><br />
&nbsp; <span style="color: #000099;">datasetURI</span> <span style="color: #000066; font-weight:bold;">=</span> <span style="color: #933;">&quot;http://dbpedia.org&quot;</span><br />
&nbsp; <span style="color: #000099;">baseURI</span> <span style="color: #000066; font-weight:bold;">=</span> <span style="color: #933;">&quot;http://dbpedia.org/&quot;</span><br />
&nbsp; <span style="color: #000099;">datasetLocalPath</span> <span style="color: #000066; font-weight:bold;">=</span> <span style="color: #933;">&quot;/usr/local/data/dbpedia/3.9/en/&quot;</span><br />
&nbsp; <span style="color: #000099;">converterPath</span> <span style="color: #000066; font-weight:bold;">=</span> <span style="color: #933;">&quot;/usr/share/datasets-management-tool/converters/default/&quot;</span><br />
&nbsp; <span style="color: #000099;">converterScript</span> <span style="color: #000066; font-weight:bold;">=</span> <span style="color: #933;">&quot;defaultConverter.php&quot;</span><br />
&nbsp; <span style="color: #000099;">converterFunctionName</span> <span style="color: #000066; font-weight:bold;">=</span> <span style="color: #933;">&quot;defaultConverter&quot;</span><br />
&nbsp; <span style="color: #000099;">baseOntologyURI</span> <span style="color: #000066; font-weight:bold;">=</span> <span style="color: #933;">&quot;http://dbpedia.org/ontology/&quot;</span><br />
&nbsp; <span style="color: #000099;">sliceSize</span> <span style="color: #000066; font-weight:bold;">=</span> <span style="color: #933;">&quot;500&quot;</span><br />
&nbsp; <span style="color: #000099;">targetOSFWebServices</span> <span style="color: #000066; font-weight:bold;">=</span> <span style="color: #933;">&quot;http://localhost/ws/&quot;</span><br />
&nbsp; <span style="color: #000099;">filteredFiles</span> <span style="color: #000066; font-weight:bold;">=</span> <span style="color: #933;">&quot;instance_types_en.nt&quot;</span><br />
&nbsp; <span style="color: #000099;">forceReloadSolrIndex</span> <span style="color: #000066; font-weight:bold;">=</span> <span style="color: #933;">&quot;true&quot;</span></div></div>
<img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="aligncenter shadow_img" style="margin:0 !important;height:10px;width:100%;"></div>
</div>
<h3>Other Configurations to Speed-Up the Process</h3>
<p>Now we will cover a few more configurations that can be performed in order to improve the speed of the indexation into OSF. You can skip these additional configuration steps, but if you do so, do not index more than 200 records per slice.</p>
<p>First search and edit the <code>virtuoso.ini</code> file. Then find the <code>ResultSetMaxRows</code> setting and configure it for <code>1000000</code> rows.</p>
<p>Then we have to increase the maximum memory allocated for the <a title="OSF CRUD: Create web service endpoint API" href="http://wiki.opensemanticframework.org/index.php/CRUD:_Read">CRUD: Create</a> web service endpoint. You have to edit the <code>index.php</code> file:</p>
<div style="overflow:hidden;; " class="alignnone">
<div class="shadow_curl" style="margin:0 !important; max-width:100% !important;"><div class="codecolorer-container bash railscasts" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:435px;"><div class="bash codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap">&nbsp; <span style="color: #c20cb9; font-weight: bold;">vim</span> <span style="color: #000000; font-weight: bold;">/</span>usr<span style="color: #000000; font-weight: bold;">/</span>share<span style="color: #000000; font-weight: bold;">/</span>osf<span style="color: #000000; font-weight: bold;">/</span>StructuredDynamics<span style="color: #000000; font-weight: bold;">/</span>osf<span style="color: #000000; font-weight: bold;">/</span>ws<span style="color: #000000; font-weight: bold;">/</span>crud<span style="color: #000000; font-weight: bold;">/</span>create<span style="color: #000000; font-weight: bold;">/</span>index.php</div></div>
<img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="aligncenter shadow_img" style="margin:0 !important;height:10px;width:100%;"></div>
</div>
<p>Then check around line #17 and increase the memory (<code>memory_limit</code>) to <code>1000M</code>.</p>
<p>Then we have to change the maximum number of URIs that the <a title="OSF CRUD: Read web service endpoint API" href="http://wiki.opensemanticframework.org/index.php/CRUD:_Read">CRUD: Read</a> web service endpoint can get as input. By default it is 64, we will ramp it up to 500.</p>
<div style="overflow:hidden;; " class="alignnone">
<div class="shadow_curl" style="margin:0 !important; max-width:100% !important;"><div class="codecolorer-container bash railscasts" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:435px;"><div class="bash codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap">&nbsp; <span style="color: #c20cb9; font-weight: bold;">vim</span> <span style="color: #000000; font-weight: bold;">/</span>usr<span style="color: #000000; font-weight: bold;">/</span>share<span style="color: #000000; font-weight: bold;">/</span>osf<span style="color: #000000; font-weight: bold;">/</span>StructuredDynamics<span style="color: #000000; font-weight: bold;">/</span>osf<span style="color: #000000; font-weight: bold;">/</span>ws<span style="color: #000000; font-weight: bold;">/</span>crud<span style="color: #000000; font-weight: bold;">/</span>read<span style="color: #000000; font-weight: bold;">/</span>interfaces <span style="color: #000000; font-weight: bold;">/</span>DefaultSourceInterface.php</div></div>
<img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="aligncenter shadow_img" style="margin:0 !important;height:10px;width:100%;"></div>
</div>
<p>Then change <code>64</code> to <code>500</code> at line #25</p>
<h3>Importing the DBpedia Ontology</h3>
<p>before we start the process of importing the DBpedia dataset into OSF, we have to import the <a title="DBpedia Ontology" href="http://wiki.dbpedia.org/Ontology">DBpedia Ontology</a> into OSF such that it uses what is defined in the ontology to optimally index the content into the Solr index. To import the ontology, we use the <a title="OSF Ontologies Management Tool" href="http://wiki.opensemanticframework.org/index.php/Ontologies_Management_Tool">OMT</a> (Ontologies Management Tool).</p>
<div style="overflow:hidden;; " class="alignnone">
<div class="shadow_curl" style="margin:0 !important; max-width:100% !important;"><div class="codecolorer-container bash railscasts" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:435px;"><div class="bash codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap">&nbsp; <span style="color: #7a0874; font-weight: bold;">cd</span> <span style="color: #000000; font-weight: bold;">/</span>data<span style="color: #000000; font-weight: bold;">/</span>ontologies<span style="color: #000000; font-weight: bold;">/</span>files<span style="color: #000000; font-weight: bold;">/</span><br />
&nbsp; <br />
&nbsp; <span style="color: #c20cb9; font-weight: bold;">wget</span> http:<span style="color: #000000; font-weight: bold;">//</span>downloads.dbpedia.org<span style="color: #000000; font-weight: bold;">/</span><span style="color: #000000;">3.9</span><span style="color: #000000; font-weight: bold;">/</span>dbpedia_3.9.owl.bz2<br />
<br />
&nbsp; <span style="color: #c20cb9; font-weight: bold;">bzip2</span> <span style="color: #660033;">-d</span> dbpedia_3.9.owl.bz2<br />
<br />
&nbsp; <span style="color: #666666; font-style: italic;"># Load the DBpedia Ontology</span><br />
&nbsp; omt <span style="color: #660033;">--load</span>=<span style="color: #ff0000;">&quot;file://localhost/data/ontologies/files/dbpedia_3.9.owl&quot;</span> <span style="color: #660033;">--osf-web-services</span>=<span style="color: #ff0000;">&quot;http://localhost/ws/&quot;</span><br />
<br />
&nbsp; <span style="color: #666666; font-style: italic;"># Create the permissions access record for the administrator group to access this ontology</span><br />
&nbsp; pmt <span style="color: #660033;">--create-access</span> <span style="color: #660033;">--access-dataset</span>=<span style="color: #ff0000;">&quot;file://localhost/data/ontologies/files/dbpedia_3.9.owl&quot;</span> <span style="color: #660033;">--access-group</span>=<span style="color: #ff0000;">&quot;http://localhost/wsf/groups/administrators&quot;</span> <span style="color: #660033;">--access-perm-create</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #660033;">--access-perm-read</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #660033;">--access-perm-delete</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #660033;">--access-perm-update</span>=<span style="color: #ff0000;">&quot;true&quot;</span> <span style="color: #660033;">--access-all-ws</span><br />
<br />
&nbsp; <span style="color: #666666; font-style: italic;"># Regenerate the underlying ontological structures</span><br />
&nbsp; omt <span style="color: #660033;">--generate-structures</span>=<span style="color: #ff0000;">&quot;/data/ontologies/structure/&quot;</span> <span style="color: #660033;">--osf-web-services</span>=<span style="color: #ff0000;">&quot;http://localhost/ws/&quot;</span></div></div>
<img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="aligncenter shadow_img" style="margin:0 !important;height:10px;width:100%;"></div>
</div>
<h3>Import DBpedia Into OSF</h3>
<p>This is the final step: importing the DBpedia dataset into the OSF full text search index (Solr). To do so, we will use the DMT (Datasets Management Tool) that we previously configured to fully index the DBpedia entities into OSF:</p>
<div style="overflow:hidden;; " class="alignnone">
<div class="shadow_curl" style="margin:0 !important; max-width:100% !important;"><div class="codecolorer-container bash railscasts" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:435px;"><div class="bash codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap">&nbsp; dmt <span style="color: #660033;">-s</span> <span style="color: #660033;">-c</span> dmt.ini <span style="color: #660033;">--config-id</span>=<span style="color: #ff0000;">&quot;DBpedia&quot;</span></div></div>
<img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="aligncenter shadow_img" style="margin:0 !important;height:10px;width:100%;"></div>
</div>
<p>This process should take up to 24h with that kind of server.</p>
<h3>Conclusion</h3>
<p>At that point, the DBpedia dataset, composed of 3.5 million entities, is fully indexed into OSF. What that means is that all the <a href="http://wiki.opensemanticframework.org/index.php/Introduction_to_OSF_Web_Services">27 OSF web service endpoints</a> can be used to query, manipulate and use these millions of entities.</p>
<p>However, there is even much more that come out-of-the-box by having DBpedia loaded into OSF. In fact, as we will see in the next article, this means that DBpedia becomes readily available to Drupal 7 if the <a title="OSF for Drupal" href="https://drupal.org/project/osf">OSF for Drupal</a> module is installed on that Drupal 7 instance.</p>
<p>What that means is that the 3.5 million DBpedia entities can be searched via the <a href="https://drupal.org/project/search_api">Search API</a>, can be manipulated via the <a href="https://drupal.org/project/entity">Entity API</a>, can be templated using the <a href="https://drupal.org/phptemplate">Drupal templating engine</a>, etc. Then they can be searched and faceted directly on a map using the <a href="http://wiki.opensemanticframework.org/index.php/SWebMap">sWebMap OSF Widget</a>. Then will be queriable via the <a href="http://wiki.opensemanticframework.org/index.php/Using_the_OSF_Query_Builder">OSF QueryBuilder</a> that can be used to create all kind of complex search queries. Etc.</p>
<p>All this out-of-the-box.</p>
]]></content:encoded>
	</item>
<item rdf:about="http://fgiasson.com/blog/index.php/2014/01/20/open-semantic-framework-version-3-0-released/">
	<title>Open Semantic Framework version 3.0 Released!</title>
	<link>http://fgiasson.com/blog/index.php/2014/01/20/open-semantic-framework-version-3-0-released/</link>
	<dc:date>2014-01-20T15:34:27Z</dc:date>
	<dc:creator><![CDATA[Frederick Giasson]]></dc:creator>
			<dc:subject><![CDATA[Citizen Dan]]></dc:subject>
		<dc:subject><![CDATA[Open Semantic Framework]]></dc:subject>
		<dc:subject><![CDATA[OSF for Drupal]]></dc:subject>
		<dc:subject><![CDATA[OSF Web Services]]></dc:subject>
		<dc:subject><![CDATA[OSF Widgets]]></dc:subject>
		<dc:subject><![CDATA[Semantic Web]]></dc:subject>
		<dc:subject><![CDATA[Structured Dynamics]]></dc:subject>
		<dc:subject><![CDATA[#data]]></dc:subject>
		<dc:subject><![CDATA[#drupal]]></dc:subject>
		<dc:subject><![CDATA[#drupal7]]></dc:subject>
		<dc:subject><![CDATA[#osf]]></dc:subject>
		<dc:subject><![CDATA[#rdf]]></dc:subject>
		<dc:subject><![CDATA[#semanticweb]]></dc:subject>
		<dc:subject><![CDATA[#webservice]]></dc:subject>
	<description><![CDATA[	
	<span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Adc&amp;rfr_id=info%3Asid%2Focoins.info%3Agenerator&amp;rft.title=Open Semantic Framework version 3.0 Released!&amp;rft.aulast=Giasson&amp;rft.aufirst=Frederick&amp;rft.subject=Citizen Dan&amp;rft.subject=Open Semantic Framework&amp;rft.subject=OSF for Drupal&amp;rft.subject=OSF Web Services&amp;rft.subject=OSF Widgets&amp;rft.subject=Semantic Web&amp;rft.subject=Structured Dynamics&amp;rft.source=Frederick Giasson&#8217;s Weblog&amp;rft.date=2014-01-20&amp;rft.type=blogPost&amp;rft.format=text&amp;rft.identifier=http://fgiasson.com/blog/index.php/2014/01/20/open-semantic-framework-version-3-0-released/&amp;rft.language=English"></span>
I am really proud to announce the release of the Open Semantic Framework version 3.0. This is a major milestone for the OSF platform and it includes important new features and improvements. The updated platform has just emerged from more than a year and a half of full-time development sponsored by one of Structured Dynamics&#8216; [&#8230;]]]></description>
	<content:encoded><![CDATA[	
	<span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Adc&amp;rfr_id=info%3Asid%2Focoins.info%3Agenerator&amp;rft.title=Open Semantic Framework version 3.0 Released!&amp;rft.aulast=Giasson&amp;rft.aufirst=Frederick&amp;rft.subject=Citizen Dan&amp;rft.subject=Open Semantic Framework&amp;rft.subject=OSF for Drupal&amp;rft.subject=OSF Web Services&amp;rft.subject=OSF Widgets&amp;rft.subject=Semantic Web&amp;rft.subject=Structured Dynamics&amp;rft.source=Frederick Giasson&#8217;s Weblog&amp;rft.date=2014-01-20&amp;rft.type=blogPost&amp;rft.format=text&amp;rft.identifier=http://fgiasson.com/blog/index.php/2014/01/20/open-semantic-framework-version-3-0-released/&amp;rft.language=English"></span>
<table>
<tbody>
<tr>
<td>I am really proud to announce the release of the <a title="Open Semantic Framework Wiki" href="http://wiki.opensemanticframework.org/index.php/Main_Page">Open Semantic Framework</a> version 3.0. This is a major milestone for the OSF platform and it includes important new features and improvements.</td>
<td><a href="http://fgiasson.com/blog/wp-content/uploads/2009/06/triple_902.png"><img class="aligncenter size-full wp-image-939" alt="triple_902" src="http://fgiasson.com/blog/wp-content/uploads/2009/06/triple_902.png" width="90" height="90" /></a></td>
</tr>
</tbody>
</table>
<p>The updated platform has just emerged from more than a year and a half of full-time development sponsored by one of <a title="Structured Dynamics" href="http://structureddynamics.com">Structured Dynamics</a>&#8216; clients: <a href="http://www.healthdirect.org.au/">Healthdirect Australia</a>. OSF&#8217;s development as been highly influenced by the big enterprise requirements of the HDA sponsor, resulting in two portals to be fully operated by OSF: <a href="http://healthinsite.gov.au/">health<em>insite</em></a> and <a href="http://www.pregnancybirthbaby.org.au/">Pregnancy, Birth and Baby</a>. OSF 3.0 is already in production with these two portals, but it will continue to constantly evolve in the coming months and years.</p>
<p>The OSF release is major in a number of ways. The first thing you will notice is that we re-branded the entire project, which includes all of its moving parts, around the OSF name. The <a title="OSF for Drupal" href="https://drupal.org/project/osf">OSF for Drupal</a> (previously known as conStruct) was migrated to Drupal 7 and about 80% of its code was re-written. Seven new <a title="Introduction to OSF Web Services" href="http://wiki.opensemanticframework.org/index.php/Introduction_to_OSF_Web_Services">OSF Web Services</a> (previously known as structWSF) were created. The old IP based security layer was completely replaced by a new <a title="OSF Web Services Datasets &amp; Access Permissions" href="http://wiki.opensemanticframework.org/index.php/OSF_Web_Services_Datasets_%26_Access_Permissions">key based security layer</a>. A new <a title="OSF Revisioning Design" href="http://wiki.opensemanticframework.org/index.php/OSF_Revisioning_Design">revisioning system</a> has been put in place to revision every record has it changes. A new caching layer has been added to the OSF Web Services to improve its performance and decrease the load on the other pieces of the OSF stack (about 80% of the non-search queries will hit the cache). A set of <a title="OSF Management Tools" href="http://wiki.opensemanticframework.org/index.php/Category:OSF_Management_Tools">command line tools</a> has been developed to help system administrators to manage and automate tasks on OSF instances. A <a title="OSF Test Suites" href="http://wiki.opensemanticframework.org/index.php/OSF_Test_Suites">set of system integration tests,</a> which is composed of 746 tests and 4139 assertions, tests all of the functionalities of the system to make sure it is properly deployed on a server. The <a title="Open Semantic Framework Wiki" href="http://wiki.opensemanticframework.org/index.php/Category:OSF_Management_Tools">OSF Wiki</a> has been completely rewritten and re-organized to help users and developers to find answers to their questions.</p>
<p>You can check the list of <a href="http://wiki.opensemanticframework.org/index.php/OSF_Features">all the OSF 3.0 features</a>, and the list of <a href="http://wiki.opensemanticframework.org/index.php/New_Features_in_OSF_3.0">all the new features to OSF 3.0</a>. Now let&#8217;s see what this new release is really all about.</p>

<h3>The OSF (Open Semantic Framework) Brand</h3>
<p>The first thing you will notice with this new OSF 3.0 release is that the whole project got re-branded around the OSF terminology. The Open Semantic Framework (OSF) stack is now composed of:</p>
<ul>
<li><a title="OSF Web Services" href="https://github.com/structureddynamics/OSF-Web-Services">OSF Web Services</a> (formerly structWSF)</li>
<li><a title="OSF for Drupal" href="https://drupal.org/project/osf">OSF for Drupal</a> (formerly conStruct)</li>
<li><a title="OSF Widgets" href="https://github.com/structureddynamics/OSF-Widgets">OSF Widgets</a> (formerly Semantic Components)</li>
<li><a title="OSF Web Services PHP API" href="https://github.com/structureddynamics/OSF-Web-Services-PHP-API">OSF Web Services PHP API</a></li>
<li><a title="OSF Installer" href="https://github.com/structureddynamics/Open-Semantic-Framework-Installer">OSF Installer</a></li>
<li><a title="OSF Tests Suites" href="https://github.com/structureddynamics/OSF-Tests-Suites">OSF Tests Suites</a></li>
<li><a title="OSF Ontologies Management Tool" href="https://github.com/structureddynamics/OSF-Ontologies-Management-Tool">OSF Ontologies Management Tool</a></li>
<li><a title="OSF Datasets Management Tool" href="https://github.com/structureddynamics/OSF-Datasets-Management-Tool">OSF Datasets Management Tool</a></li>
<li><a title="OSF Permissions Management Tool" href="https://github.com/structureddynamics/OSF-Permissions-Management-Tool">OSF Permissions Management Tool</a></li>
<li><a title="OSF Data Validator Tool" href="https://github.com/structureddynamics/OSF-Data-Validator-Tool">OSF Data Validator Tool</a></li>
</ul>
<h3>OSF Web Services</h3>
<p>The <a title="OSF web services" href="http://wiki.opensemanticframework.org/index.php/OSF_Web_Services">OSF Web Services</a> changed drastically since version 1.1. Most of its code got re-written, a new structure has been put in place, new features and new web service endpoints got created, etc. In this section, we will cover what changed in the OSF Web Services and what are these new features.</p>
<h4>New Security Layer</h4>
<p>Initially, we created a simple and effective security layer for the OSF Web Services. It was based on the IP of the requester, nothing more, nothing less. That was five years ago. This simple security layer was quite effective, but it was a nightmare to manage.</p>
<p>What we did for OSF 3.0 is to ditch this old security layer, and to replace it by something secure and much easier to manage.</p>
<p>The new <a href="http://wiki.opensemanticframework.org/index.php/OSF_Web_Services_Datasets_%26_Access_Permissions">security layer</a> does two things:</p>
<ol>
<li>Validates the web service call</li>
<li>Validates the data access of the user</li>
</ol>
<p>To validate the web service call, the new security system uses a secret keys authentication system. Every HTTP query that is sent to any web service endpoint needs to comply with the <a href="http://wiki.opensemanticframework.org/index.php/OSF_Web_Services_Datasets_%26_Access_Permissions">security protocol</a>. If it doesn&#8217;t, then the requests will be refused.</p>
<p>Then if the call is authenticated, the web service endpoint will make sure that the requesting user has proper access to the datasets that are being queried. This second authentication step makes sure that the user can only access the data to which he has access rights.</p>
<p>The real improvement of the new security layer is how the users are managed. In the past, we were managing individual IP addresses. <a href="http://wiki.opensemanticframework.org/index.php/OSF_Web_Services_Datasets_%26_Access_Permissions#Groups_Management">Now, we are managing groups of users</a>. All dataset access permissions to records are related to a group. Each group is composed of one or multiple users. Then, when a web service endpoint checks if a requesting user does have access to the content of a certain dataset, it checks if the requesting users belong to a group that has access to the content of that dataset.</p>
<p>It is now much easier to manage groups of users at the level of the dataset than individual IP addresses.</p>
<h4>New Revisioning System</h4>
<p>A new <a href="http://wiki.opensemanticframework.org/index.php/OSF_Revisioning_Design">records revisioning system</a> is now available in OSF. If required, every change to a record can be revisioned. This means that if someone makes an error when editing a record, all changes can be roll-backed at anytime using the new revisioning system.</p>
<p>A new set of web service endpoints has been created to manage the revisions. You can <a title="Revision: Lister" href="http://wiki.opensemanticframework.org/index.php/Revision:_Lister">list</a>, <a title="Revision: Read" href="http://wiki.opensemanticframework.org/index.php/Revision:_Read">read</a>, <a title="Revision: Update" href="http://wiki.opensemanticframework.org/index.php/Revision:_Update">update</a>, <a title="Revision: Delete" href="http://wiki.opensemanticframework.org/index.php/Revision:_Delete">delete</a>, and <a title="Revision: Diff" href="http://wiki.opensemanticframework.org/index.php/Revision:_Delete">compare</a> revisions with these new endpoints.</p>
<h4>New Web Service Endpoints</h4>
<p>A series of new web service endpoints have been created:</p>
<ul>
<li><a title="Revision: Lister" href="http://wiki.opensemanticframework.org/index.php/Revision:_Lister">Revision: Lister</a></li>
<li><a title="Revision: Diff" href="http://wiki.opensemanticframework.org/index.php/Revision:_Diff">Revision: Diff</a></li>
<li><a title="Revision: Read" href="http://wiki.opensemanticframework.org/index.php/Revision:_Read">Revision: Read</a></li>
<li><a title="Revision: Update" href="http://wiki.opensemanticframework.org/index.php/Revision:_Update">Revision: Update</a></li>
<li><a title="Revision: Delete" href="http://wiki.opensemanticframework.org/index.php/Revision:_Delete">Revision: Delete</a></li>
<li><a title="Auth Registrar: Group" href="http://wiki.opensemanticframework.org/index.php/Auth_Registrar:_Group">Auth Registrar: Group</a></li>
<li><a title="Auth Registrar: User" href="http://wiki.opensemanticframework.org/index.php/Auth_Registrar:_Group">Auth Registrar: User</a></li>
</ul>
<h4>Multi-Language Support</h4>
<p>All of the web services that create, update or read data from OSF now have <a title="Multiple Language Capabilities of the Open Semantic Framework" href="http://wiki.opensemanticframework.org/index.php/Multiple_Language_Capabilities_of_the_Open_Semantic_Framework">multi-lingual capabilities</a>. If you are creating data, the only thing you have to do is to specify the language for each literal you are defining in the RDF documents you are indexing in OSF. If you are reading or searching data, you only have to specify the language you want to use for each web service query you are creating.</p>
<h4>New Caching Layer</h4>
<p>OSF is a stack that includes a multitude of underlying systems such as <a title="Virtuoso Open Source" href="http://virtuoso.openlinksw.com/dataspace/doc/dav/wiki/Main/">Virtuoso</a>, <a title="Solr Search Engine" href="http://lucene.apache.org/solr/">Solr</a>, <a title="OWLAPI" href="http://owlapi.sourceforge.net/">OWLAPI</a>, <a title="Gate Natual Language Processing Framework" href="http://gate.ac.uk/">GATE</a>, etc. Depending on the web service endpoints that are used, and depending on how they are used, the same query can be requested again and again, and each of these background services may be queried again and again too.</p>
<p>To improve the performances of each of the OSF Web Services, and to minimize the usage of these underlying systems as much as possible, we added a caching layer at the level of the web service endpoints. The result is that every OSF Web Services query is being cached into the caching layer. This means that every time that the same query is being requested twice, the second time the results will come from the caching layer.</p>
<p>The caching system that is used by OSF is <a title="Memcached" href="http://memcached.org/">Memcached</a>. <a title="OSF Caching" href="http://wiki.opensemanticframework.org/index.php/OSF_Caching">More information about the OSF Cache can be read on the OSF Wiki</a>.</p>
<h4>Improved Search</h4>
<p>The <a href="http://wiki.opensemanticframework.org/index.php/Search">Search web service endpoint</a>, which is by far the most used OSF web service endpoint, also improved quite a lot in developing this new version.</p>
<p>First, the Search endpoint is now using the <a href="http://wiki.apache.org/solr/ExtendedDisMax">eDisMax query parser</a>. In itself, this changes everything in the endpoint and leads to the creation of multiple new search functionalities.</p>
<p>It is now possible to change the ranking of the search results by boosting the scoring of the results based on different things such as their dataset provenance, their types or any of their attribute/values. This enables the possibility to improve the quality of the results returned on a OSF web portal depending on the context of a search and the semantics of the records being searched.</p>
<p>It is also now possible to add restrictions to the search queries. This means that search keywords will be restricted to a set of attributes. Then it is also possible to boost the scoring of the returned results depending on where the search keywords appeared.</p>
<p>There is a new spell-checker function for the search queries. This means that if no results are returned for a specific search query, then the system will return a series of possible keywords that the user may want to use to re-initiate the search query.</p>
<p>Finally, an extended search query syntax is now supported by the Search endpoint. This enables more complex search queries to be sent to the Search endpoint, opening the door to the creation of more complex <a title="OSF Search Profiles" href="http://wiki.opensemanticframework.org/index.php/Using_Search_Profiles">contextual search profiles queries</a>.</p>
<h4>New Interfacing Mechanism</h4>
<p>A new <em>interface</em> mechanism as been put in place for the OSF Web Services. An <em>interface</em> is a the code that is run by the web service endpoint for a given query.</p>
<p>An interface cocorresponds to a specific version of a web service endpoint. Two different interfaces, for the same endpoint, may comply to different versions of its API. However, these two interfaces can work side-by-side using the same data.</p>
<p>If two interfaces comply to the same endpoint API, it means that their processing of the query will be different (like querying Solr 4.0 instead of 3.6). If two interfaces don&#8217;t comply to the same endpoint API version, then it means that each interface supports different versions of the endpoint.</p>
<p>This new interfacing mechanism becomes handy to support more than one triple store, or when the same OSF instance needs to use different Solr query parsers, or when some of the endpoints have to be backward compatible for some portals/users that still need to be supported by the OSF instance, etc.</p>
<p>The new interfacing mechanism gives the flexibility to be able to run different code or support different web service API version on the same OSF instance.</p>
<h3>OSF for Drupal</h3>
<p><a title="OSF for Drupal" href="https://drupal.org/project/osf">OSF for Drupal</a> now runs on Drupal 7. About 80% of the Drupal-related code got rewritten and we can now state that OSF is fully integrated into Drupal.</p>
<h4>Drupal Connectors</h4>
<p>A series of OSF connectors have been developed in the last year and a half that basically let Drupal&#8217;s core features use OSF instead of MySQL: <a title="Entity API" href="https://drupal.org/project/entity">Entity &amp; Entity API</a>, <a title="Field API" href="https://api.drupal.org/api/drupal/modules!field!field.module/group/field/7">FieldAPI &amp; FieldStorage</a> and the <a title="SearchAPI" href="https://drupal.org/project/search_api">SearchAPI</a>. These connectors mean that if OSF for Drupal is installed and configured on a Drupal 7 instance, developers will be able to use these core APIs to query registered decentralized OSF instances instead of local MySQL/Solr instances.</p>
<h5>OSF Entities</h5>
<p>The <a title="OSF Entities" href="http://wiki.opensemanticframework.org/index.php/Resources_Entities">OSF Entities connector module</a> implements the Drupal Entity API. This means that if OSF for Drupal is properly installed and configured on a Drupal instance, that the Entity API can be used to read, create, update and delete content from registered external OSF Web Services networks. Under this scenario, no information about these Drupal entities will be local to the Drupal instance. All of the content will be hosted externally on a dedicated OSF instance. All of the data manipulated by the Entity API is RDF data. What that means is that the Entity API now may interface with an RDF data management system, with communications with it via web service endpoint queries.</p>
<p>In short, this connector makes OSF records visible to Drupal via the Entity API.</p>
<h5>OSF FieldStorage</h5>
<p>The <a href="http://wiki.opensemanticframework.org/index.php/Saving_Local_Content_in_OSF">OSF FieldStorage connector module</a> creates a new FieldStorage type that enables Drupal users to save Drupal content into an OSF instance instead of saving the content in the default storage system (namely MySQL). This means that if someone starts using OSF instead as the backend of a Drupal portal, then all the Drupal content that will be created will be available via the OSF web service endpoints. This means that other external applications that know how to talk to OSF web service endpoints are now able to leverage the content that has been created from the Drupal instance. Also, all of the content will be available as RDF.</p>
<p>What this connector does at the end is to save Drupal entities into OSF instead of in the default storage system (MySQL).</p>
<h5>OSF SearchAPI</h5>
<p>The <a href="http://wiki.opensemanticframework.org/index.php/Category:OSF_for_Drupal_User_Manual#Using_the_SearchAPI">OSF SearchAPI connector module</a> creates a new service for the SearchAPI module. It enables the SearchAPI to send search queries to an OSF Search web service endpoint instead of the default search service. This means that the Drupal search engine is now fully powered by the OSF Search endpoint, and gives access to all the datasets hosted on one, or multiple, remote OSF instances.</p>
<h4>Better Configuration &amp; Management</h4>
<p>Registering, configuring and managing <a href="http://wiki.opensemanticframework.org/index.php/Category:OSF_for_Drupal_User_Manual#Managing_Web_Service_Endpoints">OSF instances</a> and <a href="http://wiki.opensemanticframework.org/index.php/Category:OSF_for_Drupal_User_Manual#Managing_Datasets">datasets</a> into Drupal has never been easier. The new OSF Configure module is a new module that centralizes all of the features and options that are required to register, configure and maintain OSF instances and datasets.</p>
<h4>QueryBuilder &amp; Search Profiles</h4>
<p>A new kind of tool has been developed in OSF for Drupal 3.x: <a href="http://wiki.opensemanticframework.org/index.php/Using_Search_Profiles">OSF Search Profiles</a>. A search profile is a predefined search query where its search results are displayed in a block positioned on some Drupal pages. These search profiles are normally used to display lists of information that match a search query. Search profiles are also to some extent aware of their context. For example, if the main topic of a page is about <code>cancer</code> and if we have a search profile that displays a list of events, then when the search profile is used in the context of that page about cancer, then cancer related events should be displayed. That is one of the core purposes of the search profiles.</p>
<p>The search profiles&#8217; underlying search queries are being created using the new <a href="http://wiki.opensemanticframework.org/index.php/Using_Search_Profiles#Using_the_Query_Builder">OSF Query Builder</a> module. This powerful user interface enables site administrators to create complex search queries that will be used within a search profile.</p>
<h3>OSF Web Services PHP API</h3>
<p>In prior versions, knowing how to query the OSF web services was not an easy task. It is the reason why the <a href="http://wiki.opensemanticframework.org/index.php/OSF_Web_Service_PHP_API">OSF Web Services PHP API</a> was developed: to help developers to easily query OSF web service endpoints. This PHP API is a set of classes where each of them has a series of methods that can be used to query a particular web service endpoint. Let&#8217;s take this example of some OSF WS PHP API code that does send a query to the OSF Search web service endpoint:</p>
<div style="overflow:hidden;; " class="alignnone">
<div class="shadow_curl" style="margin:0 !important; max-width:100% !important;"><div class="codecolorer-container php railscasts" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:435px;height:300px;"><div class="php codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap">&nbsp; <span style="color: #666666; font-style: italic;">//</span><br />
&nbsp; <span style="color: #666666; font-style: italic;">// Step #1: Instantiate the class of the web service then want to query</span><br />
&nbsp; <span style="color: #666666; font-style: italic;">//</span><br />
<br />
&nbsp; <span style="color: #666666; font-style: italic;">// Create the SearchQuery object</span><br />
&nbsp; <span style="color: #000088;">$search</span> <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> SearchQuery<span style="color: #009900;">&#40;</span><span style="color: #0000ff;">'http://localhost/ws/'</span><span style="color: #339933;">,</span> <span style="color: #0000ff;">'some-app-id'</span><span style="color: #339933;">,</span> <span style="color: #0000ff;">'some-api-key'</span><span style="color: #339933;">,</span> <span style="color: #0000ff;">'http://localhost/users/foo'</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span><br />
<br />
&nbsp; <span style="color: #666666; font-style: italic;">//</span><br />
&nbsp; <span style="color: #666666; font-style: italic;">// Step #2: Define all the parameters/features/behaviors of the web service by invoking different methods of the class</span><br />
&nbsp; <span style="color: #666666; font-style: italic;">//</span><br />
<br />
&nbsp; <span style="color: #000088;">$resultset</span> <span style="color: #339933;">=</span> <span style="color: #000088;">$search</span><span style="color: #339933;">-&gt;</span><span style="color: #004000;">enableInference</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #339933;">-&gt;</span><span style="color: #004000;">excludeAggregates</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #339933;">-&gt;</span><span style="color: #004000;">items</span><span style="color: #009900;">&#40;</span><span style="color: #cc66cc;">20</span><span style="color: #009900;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #339933;">-&gt;</span><span style="color: #004000;">page</span><span style="color: #009900;">&#40;</span><span style="color: #cc66cc;">40</span><span style="color: #009900;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #339933;">-&gt;</span><span style="color: #004000;">query</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;forest&quot;</span><span style="color: #009900;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #339933;">-&gt;</span><span style="color: #004000;">send</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #339933;">-&gt;</span><span style="color: #004000;">getResultset</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span><br />
<br />
&nbsp; <span style="color: #666666; font-style: italic;">// Print the PHP array serialization for that resultset</span><br />
&nbsp; <span style="color: #990000;">print_r</span><span style="color: #009900;">&#40;</span><span style="color: #000088;">$resultset</span><span style="color: #339933;">-&gt;</span><span style="color: #004000;">getResultset</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span></div></div>
<img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="aligncenter shadow_img" style="margin:0 !important;height:10px;width:100%;"></div>
</div>
<h3>OSF Management Tools</h3>
<p>A new set of command line tools have been developed for OSF version 3.0. These tools&#8217; focus has been to help OSF instance administrators by giving them command line tools that they could use in their scripts, Cron jobs, or any other middleware toolings that may perform different tasks on a OSF instance.</p>
<h4>Datasets Management Tool</h4>
<p>The <a href="http://wiki.opensemanticframework.org/index.php/Datasets_Management_Tool">Datasets Management Tool</a> (DMT) is a command line tool used to manage datasets of a OSF instance. With this tool, you may create, delete, update, import and export datasets directly from the command line.</p>
<h4>Ontologies Management Tool</h4>
<p>The <a href="http://wiki.opensemanticframework.org/index.php/Ontologies_Management_Tool">Ontologies Management Tool</a> (OMT) is a command line tool used to manage ontologies of a OSF Web Services network instance. It can be used to list the ontologies of a OSF Web Services instance, to manage those ontologies, to create/import new ones, to delete existing ones, and to generate underlying ontological structures.</p>
<h4>Permissions Management Tool</h4>
<p>The <a href="http://wiki.opensemanticframework.org/index.php/Permissions_Management_Tool">Permissions Management Tool</a> (PMT) is a command line tool used to manage <a href="http://wiki.opensemanticframework.org/index.php/OSF_Web_Services_Permissions">access permissions</a> on a OSF Web Services network instance. This tool is used to list, create and delete access permissions, groups and users.</p>
<h4>Data Validator Tool</h4>
<p>The <a href="http://wiki.opensemanticframework.org/index.php/Data_Validator_Tool">Data Validator Tool</a> (DVT) is a command line tool used to perform a series of post-indexation data validation tests. What this tool does is to run a series of pre-configured tests, and return validation errors if any are found.</p>
<h3>OSF Widgets</h3>
<p>All the <a href="https://github.com/structureddynamics/OSF-Widgets">OSF Widgets</a> (formerly the Semantic Components) have been updated to work with OSF 3.0. The big difference with this update is that all of the OSF Widgets now have access to an OSF for Drupal proxy. This proxy enables them to communicate with a OSF Web Services instance without having to authenticate themselves to the endpoints.</p>
<h3>OSF Wiki</h3>
<p>The <a title="Open Semanitc Framework Wiki" href="http://wiki.opensemanticframework.org">OSF Wiki</a> has been completely rewritten and re-organized. It is the go-to place to find more information about the Open Semantic Framework project, and all pieces of the stack.</p>
<h3>Installing and Configuring OSF</h3>
<h4>OSF Installer</h4>
<p>Installing and configuring OSF has never been easier to do. The <a href="http://wiki.opensemanticframework.org/index.php/OSF_Installer">OSF Installer</a> utility has been improved to ease the deployment of OSF on a new Ubuntu 12.10 server. The installation tool will install and configure all the pieces required by the OSF stack. Once everything is installed and configured, it will run the OSF Tests Suites to make sure that all the OSF functionalities are fully operational on the new server.</p>
<p>Then, once the OSF stack is installed, the user is then able to use the OSF Installer tool to install, deploy and configure Drupal 7 with <a href="http://wiki.opensemanticframework.org/index.php/Initial_OSF_for_Drupal_Configuration">OSF for Drupal</a>.</p>
<h4>OSF EC2</h4>
<p>Additionally, we created a new public Amazon AWS EC2 image that includes the full OSF stack version 3.0. This new public image is available in all the zones:</p>
<table border="1" cellspacing="0" cellpadding="5">
<thead>
<tr>
<td class="tableHighlightYellow" style="text-align: center;"><strong>Region</strong></td>
<td class="tableHighlightYellow" style="text-align: center;"><strong>arch</strong></td>
<td class="tableHighlightYellow" style="text-align: center;"><strong>root store</strong></td>
<td class="tableHighlightYellow" style="text-align: center;"><strong>AMI</strong></td>
</tr>
</thead>
<tbody>
<tr>
<td style="padding: 4px;">us-east-1</td>
<td style="padding: 4px;">64-bit</td>
<td style="padding: 4px;">EBS</td>
<td style="padding: 4px;"><b>ami-afe4d1c6</b></td>
</tr>
<tr>
<td style="padding: 4px;">us-west-1</td>
<td style="padding: 4px;">64-bit</td>
<td style="padding: 4px;">EBS</td>
<td style="padding: 4px;"><b>ami-d01b2895</b></td>
</tr>
<tr>
<td style="padding: 4px;">us-west-2</td>
<td style="padding: 4px;">64-bit</td>
<td style="padding: 4px;">EBS</td>
<td style="padding: 4px;"><b>ami-c6f691f6</b></td>
</tr>
<tr>
<td style="padding: 4px;">eu-west-1</td>
<td style="padding: 4px;">64-bit</td>
<td style="padding: 4px;">EBS</td>
<td style="padding: 4px;"><b>ami-883fd4ff</b></td>
</tr>
<tr>
<td style="padding: 4px;">sa-east-1</td>
<td style="padding: 4px;">64-bit</td>
<td style="padding: 4px;">EBS</td>
<td style="padding: 4px;"><b>ami-6515b478</b></td>
</tr>
<tr>
<td style="padding: 4px;">ap-southeast-2</td>
<td style="padding: 4px;">64-bit</td>
<td style="padding: 4px;">EBS</td>
<td style="padding: 4px;"><b>ami-4734ab7d</b></td>
</tr>
<tr>
<td style="padding: 4px;">ap-southeast-1</td>
<td style="padding: 4px;">64-bit</td>
<td style="padding: 4px;">EBS</td>
<td style="padding: 4px;"><b>ami-364d1a64</b></td>
</tr>
<tr>
<td style="padding: 4px;">ap-northeast-1</td>
<td style="padding: 4px;">64-bit</td>
<td style="padding: 4px;">EBS</td>
<td style="padding: 4px;"><b>ami-476a0646</b></td>
</tr>
</tbody>
</table>
<p>Once you create a new instance from that image, you will have to properly configure it to make it secure and fully operational. The only thing you have to do is to follow the steps outlined in the <a href="http://wiki.opensemanticframework.org/index.php/Creating_and_Configuring_an_Amazon_EC2_AMI_OSF_Instance">Creating and Configuring an Amazon EC2 AMI OSF Instance</a> manual.</p>
<h3>System Integration Tests</h3>
<p>A <a title="OSF Tests Suites" href="http://wiki.opensemanticframework.org/index.php/OSF_Test_Suites">complete suite of integration tests</a> has been created for OSF 3.0. The tests suites are composed of 746 tests and 4139 assertions. These integration tests make sure that all of the functionality of an OSF instance is working. These tests are run every time an OSF instance is deployed using the OSF Installer script. Then, they can be re-run anytime thereafter. Normally, every time an update is made on an OSF instance, the tests should be run as well to make sure that the update didn&#8217;t break anything.</p>
<p>These tests are testing:</p>
<ul>
<li>All of the input parameters of each endpoint</li>
<li>All of the combinations of all the input parameters of each endpoint</li>
<li>All of the mime types supported by each endpoint</li>
<li>All of the expected error returned by each endpoint.</li>
</ul>
<h3>Conclusion</h3>
<p>We have been working on this new Open Semantic Framework version 3.0 for almost two full years now. We have been quiet during that time since we had no more time other than coding, documenting, testing and deploying the code that we are releasing today.</p>
<p>This new version is a major leap forward for the Open Semantic Framework open source project. Five years ago, <a title="Mike Bergman's Blog" href="http://mkbergman.com">Mike</a> and I set as a goal to have a complete OSF stack in place that could be leveraged by anybody to fulfill the requirement of any kind of projects. I think that with this OSF version 3.0, we reached the middle term goal that we fixed for ourselves 5 years ago.</p>
]]></content:encoded>
	</item>
<item rdf:about="http://fgiasson.com/blog/index.php/2013/06/10/structfieldstorage-a-new-field-storage-system-for-drupal-7/">
	<title>structFieldStorage: A New Field Storage System for Drupal 7</title>
	<link>http://fgiasson.com/blog/index.php/2013/06/10/structfieldstorage-a-new-field-storage-system-for-drupal-7/</link>
	<dc:date>2013-06-11T03:41:04Z</dc:date>
	<dc:creator><![CDATA[Frederick Giasson]]></dc:creator>
			<dc:subject><![CDATA[Open Semantic Framework]]></dc:subject>
		<dc:subject><![CDATA[OSF for Drupal]]></dc:subject>
		<dc:subject><![CDATA[Planet Drupal]]></dc:subject>
		<dc:subject><![CDATA[Semantic Web]]></dc:subject>
		<dc:subject><![CDATA[Structured Dynamics]]></dc:subject>
		<dc:subject><![CDATA[#construct]]></dc:subject>
		<dc:subject><![CDATA[#developer]]></dc:subject>
		<dc:subject><![CDATA[#drupal]]></dc:subject>
		<dc:subject><![CDATA[#open semantic framework]]></dc:subject>
		<dc:subject><![CDATA[#rdf]]></dc:subject>
		<dc:subject><![CDATA[#semantic web]]></dc:subject>
		<dc:subject><![CDATA[#structwsf]]></dc:subject>
		<dc:subject><![CDATA[#web services]]></dc:subject>
	<description><![CDATA[	
	<span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Adc&amp;rfr_id=info%3Asid%2Focoins.info%3Agenerator&amp;rft.title=structFieldStorage: A New Field Storage System for Drupal 7&amp;rft.aulast=Giasson&amp;rft.aufirst=Frederick&amp;rft.subject=Open Semantic Framework&amp;rft.subject=OSF for Drupal&amp;rft.subject=Planet Drupal&amp;rft.subject=Semantic Web&amp;rft.subject=Structured Dynamics&amp;rft.source=Frederick Giasson&#8217;s Weblog&amp;rft.date=2013-06-10&amp;rft.type=blogPost&amp;rft.format=text&amp;rft.identifier=http://fgiasson.com/blog/index.php/2013/06/10/structfieldstorage-a-new-field-storage-system-for-drupal-7/&amp;rft.language=English"></span>
Structured Dynamics has been working with Drupal for quite some time. This week marks our third anniversary of posting code to the contributed conStruct modules in Drupal. But, what I&#8217;m able to share today is our most exciting interaction with Drupal to date. In essence, we now can run Drupal directly from an RDF triplestore [&#8230;]]]></description>
	<content:encoded><![CDATA[	
	<span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Adc&amp;rfr_id=info%3Asid%2Focoins.info%3Agenerator&amp;rft.title=structFieldStorage: A New Field Storage System for Drupal 7&amp;rft.aulast=Giasson&amp;rft.aufirst=Frederick&amp;rft.subject=Open Semantic Framework&amp;rft.subject=OSF for Drupal&amp;rft.subject=Planet Drupal&amp;rft.subject=Semantic Web&amp;rft.subject=Structured Dynamics&amp;rft.source=Frederick Giasson&#8217;s Weblog&amp;rft.date=2013-06-10&amp;rft.type=blogPost&amp;rft.format=text&amp;rft.identifier=http://fgiasson.com/blog/index.php/2013/06/10/structfieldstorage-a-new-field-storage-system-for-drupal-7/&amp;rft.language=English"></span>
<p>Structured Dynamics has been working with Drupal for quite some time. This week marks our third anniversary of posting code to the contributed <a title="conStruct Drupal Modules" href="https://drupal.org/project/construct">conStruct modules</a> in Drupal. But, what I&#8217;m able to share today is our most exciting interaction with Drupal to date. In essence, we now can run Drupal directly from an RDF triplestore and take full advantage of our broader <a title="Open Semantic Framework" href="http://openstructs.org">Open Semantic Framework</a> (OSF) stack. Massively cool!</p>
<p>On a vanilla Drupal 7 instance, everything ends up being saved into Drupal&#8217;s default storage system. This blog post introduces a new way to save (local) Content Type entities: the <code>structfieldstorage</code> field storage system. This new field storage system gives the possibility to Drupal administrators to choose to save specific (or all) fields and their values into a remote <a title="structWSF" href="https://github.com/structureddynamics/structWSF-Open-Semantic-Framework">structWSF</a> instance. This option replaces Drupal&#8217;s default storage system (often MySQL) for the content types and their fields chosen.</p>
<p>By using this new field storage system, all of the <em>local</em> Drupal 7 content can be queried via any of structWSF&#8217;s web service endpoints (which includes a SPARQL endpoint). This means that all Drupal 7 content (using this new storage system) gets converted and indexed as RDF data. This means that all of the Drupal <em>local</em> content gets indexed in a <em>semantic web service framework</em>.</p>
<h3>Fields and Bundles</h3>
<p>There are multiple core concepts in <a href="https://drupal.org/">Drupal</a>, two of which are Bundles and Fields. A Field is basically an attribute/value tuple that describes an entity. A Bundle is a set (an aggregation) of fields. The main topic of this blog post is a special feature of the field: their storage system.</p>
<p>In Drupal, each field instance does have its own <em>field storage system</em> associated to it. A <em>field storage system</em> is a system that manages the field/value tuples of each entity that has been defined as a Drupal instance. The default storage system of any field is the <em>field_sql_storage,</em> which is normally a MySQL server or database.</p>
<p>The field storage system allows a bundle to have multiple field instances, each of which may have a different field storage target. This means that the data that describes an entity can be saved in multiple different data stores. Though it may appear odd at first as to why such flexibility has merit, but we will see that this design is quite clever, and probably essential.</p>
<p>There are currently a few other field storage systems that have been developed for Drupal 7 so far. The most cited one is probably the <a href="http://www.prometsource.com/blog/using-mongodb-field-storage-drupal">MongoDB module</a>, and there is also <a href="http://drupal.org/project/riak_field_storage">Riak</a>. What I am discussing in this blog post is a new field storage system for Drupal 7 which uses <a href="https://github.com/structureddynamics/structWSF-Open-Semantic-Framework">structWSF</a> as the data store. This new module is called the <a href="http://drupalcode.org/project/construct.git/tree/refs/heads/7.x-1.x-structfieldstorage:/modules/structfieldstorage">structFieldStorage</a> module and it is part of <a href="http://drupal.org/project/construct">conStruct</a>.</p>
<h3>Flexibility of the Field Storage API design</h3>
<p>The design of having one field storage system per field is really flexible and probably essential. By default, all of the field widgets and all the modules have been created using the <em>field_sql_storage</em> system. This means that a few things here and there have been coded with the specificities of that field storage system. The result is that even if the <a href="https://api.drupal.org/api/drupal/modules!field!field.attach.inc/group/field_storage/7">Field Storage API</a> has been designed and developed such that we can create new field storage systems, the reality is that once you do it, multiple existing field widgets and modules can break from the new field storage systems.</p>
<p>What the field storage system developer has to do is to test all the existing (core) field widgets and modules and make sure to handle all the specifics of these widgets and modules within the field storage system. If it cannot handle a specific widget or module, it should restrict their usage and warn the user.</p>
<p>However, there are situations where someone may require the use of a specific field widget that won&#8217;t work with that new field storage system. Because of the flexibility of the design, we can always substitute the <em>field_sql_storage</em> system for the given field dependent on that special widget. Under this circumstance, the values of that field widget would be saved in the <em>field_sql_storageÃÂ </em>system (MySQL) while the other fields would save their value in a structWSF instance. Other circumstances may also warrant this flexibility.</p>
<h3>structFieldStorage Architecture</h3>
<p>Here is the general architecture for the <code>structFieldStorage</code> module. The following schema shows how the Drupal Field Storage API Works, and shows the flexibility that resides into the fields, and how multiple fields, all part of the same bundle, can use different storage systems:</p>
<p style="text-align: left;"><a href="http://fgiasson.com/blog/wp-content/uploads/2013/06/bundles_fields_field_storage_api_outline.png"><img class="aligncenter size-full wp-image-2115" alt="bundles_fields_field_storage_api_outline" src="http://fgiasson.com/blog/wp-content/uploads/2013/06/bundles_fields_field_storage_api_outline-e1370448964575.png" width="450" height="226" /></a></p>
<p style="text-align: left;">By default, on a vanilla Drupal instance, all the fields use the <code>field_sql_storage</code> field storage system:</p>
<p style="text-align: left;"><a href="http://fgiasson.com/blog/wp-content/uploads/2013/06/default_field_storage_system_interaction.png"><img class="aligncenter size-full wp-image-2117" alt="default_field_storage_system_interaction" src="http://fgiasson.com/blog/wp-content/uploads/2013/06/default_field_storage_system_interaction-e1370449047772.png" width="450" height="130" /></a></p>
<p style="text-align: left;">Here is what that same bundle looks like when all fields use the <code>structfieldstorage</code> field storage system:</p>
<p style="text-align: left;"><a href="http://fgiasson.com/blog/wp-content/uploads/2013/06/ccr_field_storage_system_interaction.png"><img class="aligncenter size-full wp-image-2116" alt="ccr_field_storage_system_interaction" src="http://fgiasson.com/blog/wp-content/uploads/2013/06/ccr_field_storage_system_interaction-e1370449025501.png" width="450" height="130" /></a></p>
<p style="text-align: left;">Finally here is another schema that shows the interaction between Drupal&#8217;s core API, structFieldStorage and the structWSF web service endpoints:</p>
<p style="text-align: left;"><a href="http://fgiasson.com/blog/wp-content/uploads/2013/06/structFieldStorage.png"><img class="aligncenter size-full wp-image-2118" alt="structFieldStorage" src="http://fgiasson.com/blog/wp-content/uploads/2013/06/structFieldStorage-e1370449062389.png" width="450" height="294" /></a></p>
<h3>Synchronization</h3>
<p><a href="http://api.drupal.org/api/drupal/modules%21field%21field.crud.inc/group/field_purge/7" rel="nofollow">Similar to the default MySQL <code>field_sql_storage</code> system</a>, we have to take into account a few synchronization use cases when dealing with the <code>structfieldstorage</code> storage system for the Drupal content types.</p>
<p>Synchronization with structFieldStorage occurs when fields and field instances that use the <code>structfieldstorage</code> storage system get deleted from a bundle or when an RDF mapping changes. These situations don&#8217;t appear often once a portal is developed and properly configured. However, since things evolve all the time, the synchronization mechanism is always available to handle deleted content or changed schema.</p>
<p>The synchronization workflow answers the following questions:</p>
<ul>
<li>What happens when a field get deleted in a content type?</li>
<li>What happens when a field&#8217;s RDF mapping changes for a new property?</li>
<li>What happens when a bundle&#8217;s type RDF mapping changes for a new one?</li>
</ul>
<p>Additionally, if new field instances are being created in a bundle, no synchronization of any kind is required. Since this is a new field, there is necessarily no data for this field in the OSF, so we just wait until people start using this new field to commit new data in the OSF.</p>
<p>The current synchronization heuristics follow the following steps:</p>
<ol>
<li>Read the <code>structfieldstorage_pending_opts_fields</code> table and get all the un-executed synchronization change operations
<ol>
<li>For each un-executed change:
<ol>
<li>Get 20 records within the local content dataset from the Search endpoint. Filter the results to get all the entities that would be affected by the current change
<ol>
<li>Do until the Search query returns 0 results
<ol>
<li>For each record within that list
<ol>
<li>Apply the current change to the entities</li>
<li>Save that modified entities into the OSF using the <code>CRUD: Update</code> web service endpoint</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li>When the Search query returns 0 results, it means that this change got fully applied to the OSF. The state of this change record then get marked as <em>executed</em>.</li>
</ol>
</li>
</ol>
</li>
<li>Read the <code>structfieldstorage_pending_opts_bundles</code> table and get all the un-executed synchronization change operations
<ol>
<li>For each un-executed change:
<ol>
<li>Get 20 records within the local content dataset from the Search endpoint. Filter the results to get only the ones that would be affected by the current change
<ol>
<li>Do until the Search query returns 0 results
<ol>
<li>For each record within that list
<ol>
<li>Apply the current change to the entities</li>
<li>Save that changed record into the OSF using the <code>CRUD: Update</code> web service endpoint</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li>When the Search query returns 0 results, it means that this change got fully applied to the OSF. The state of this change record then get marked as <em>executed</em>.</li>
</ol>
</li>
</ol>
</li>
</ol>
<p>The synchronization process is triggered by a Drupal cron job. Eventually this may be changed to have a setting option that would let you use cron synchronization or to trigger it by hand using some kind of button.</p>
<h3>Compatibility</h3>
<p>The structFieldStorage module is already compatible with multiple field widgets and external contributed Drupal 7 modules. However, because of Drupal&#8217;s nature, other field widgets and contributed modules that are not listed in this section may be working with this new field storage system, but tests will be required by the Drupal system administrator.</p>
<h4>Field Widgets</h4>
<p>Here is a list of all the core Field Widgets that are normally used by Drupal users. This list tells you which field widget is fully operational or disabled with the <em>structfieldstorage</em> field storage system.</p>
<p>Note that if a field is marked as disabled, it only means that it is not currently implemented for working with this new field storage system. It may be re-enabled in the future if it become required.</p>
<table>
<tbody>
<tr>
<th>Field Type</th>
<th>Field Widget</th>
<th>Operational?</th>
</tr>
<tr>
<td>Text</td>
<td>Text Field</td>
<td><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td></td>
<td>Autocomplete for predefined suggestions</td>
<td><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1"></td>
<td colspan="1">Struct Lookup</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1"></td>
<td colspan="1">Struct Lookup with suggestion</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td></td>
<td>Autocomplete for existing field data</td>
<td><span style="color: #f78e77;"><strong><code><strong><code>Disabled</code></strong></code></strong></span></td>
</tr>
<tr>
<td></td>
<td>Autocomplete for existing field data and some node titles</td>
<td><span style="color: #f78e77;"><strong><code><strong><code><strong><code>Disabled</code></strong></code></strong></code></strong></span></td>
</tr>
<tr>
<td colspan="1">Term Reference</td>
<td colspan="1">Autocomplete term widget (tagging)</td>
<td colspan="1"><span style="color: #f78e77;"><strong><code><strong><code>Disabled</code></strong></code></strong></span></td>
</tr>
<tr>
<td colspan="1"></td>
<td colspan="1">Select list</td>
<td colspan="1"><span style="color: #f78e77;"><strong><code><strong><code>Disabled</code></strong></code></strong></span></td>
</tr>
<tr>
<td colspan="1"></td>
<td colspan="1">Check boxes/radio buttons</td>
<td colspan="1"><span style="color: #f78e77;"><strong><code><strong><code>Disabled</code></strong></code></strong></span></td>
</tr>
<tr>
<td colspan="1">Long text and summary</td>
<td colspan="1">Text area with a summary</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1">Long text</td>
<td colspan="1">Text area (multiple rows)</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1">List (text)</td>
<td colspan="1">Select list</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1"></td>
<td colspan="1">Check boxes/radio buttons</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td></td>
<td>Autocomplete for allowed values list</td>
<td><span style="color: #f78e77;"><strong><code><strong><code><strong><code>Disabled</code></strong></code></strong></code></strong></span></td>
</tr>
<tr>
<td colspan="1">List (integer)</td>
<td colspan="1">Select list</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1"></td>
<td colspan="1">Check boxes/radio buttons</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td></td>
<td>Autocomplete for allowed values list</td>
<td><span style="color: #f78e77;"><strong><code><strong><code><strong><code>Disabled</code></strong></code></strong></code></strong></span></td>
</tr>
<tr>
<td colspan="1">List (float)</td>
<td colspan="1">Select list</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1"></td>
<td colspan="1">Check boxes/radio buttons</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td></td>
<td>Autocomplete for allowed values list</td>
<td><span style="color: #f78e77;"><strong><code><strong><code><strong><code>Disabled</code></strong></code></strong></code></strong></span></td>
</tr>
<tr>
<td colspan="1">Link</td>
<td colspan="1">Link</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1">Integer</td>
<td colspan="1">Text field</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1">Float</td>
<td colspan="1">Text field</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1">Image</td>
<td colspan="1">Image</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1">File</td>
<td colspan="1">File</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1">Entity Reference</td>
<td colspan="1">Select list</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1"></td>
<td colspan="1">Check boxes/radio buttons</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1"></td>
<td colspan="1">Autocomplete</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1"></td>
<td colspan="1">Autocomplete (Tags style)</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1">Decimal</td>
<td colspan="1">Text field</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1">Date (Unix timestamp)</td>
<td colspan="1">Text field</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1"></td>
<td colspan="1">Select list</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1"></td>
<td colspan="1">Pop-up calendar</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1">Date (ISO format)</td>
<td colspan="1">Text field</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1"></td>
<td colspan="1">Select list</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1"></td>
<td colspan="1">Pop-up calendar</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1">Date</td>
<td colspan="1">Text field</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1"></td>
<td colspan="1">Select list</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1"></td>
<td colspan="1">Pop-up calendar</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1">Boolean</td>
<td colspan="1">Check boxes/radio buttons</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
<tr>
<td colspan="1"></td>
<td colspan="1">Single on/off checkbox</td>
<td colspan="1"><span style="color: #99cc00;"><strong><code>Fully operational</code></strong></span></td>
</tr>
</tbody>
</table>
<h4>Core &amp; Popular Modules</h4>
<h5>Revisioning</h5>
<p>The <a href="https://drupal.org/project/revisioning">Revisioning</a> module is fully operational with the <code>structfieldstorage</code> field storage system. All the operations exposed in the UI have been handled and implemented in the <code>hook_revisionapi()</code> hook.</p>
<h5>Diff</h5>
<p>The <a href="https://drupal.org/project/diff">Diff</a> module is fully operational. Since it compares entity class instances, there is no additional Diff API implementation to do. Each time revisions get compared, then <code>structfieldstorage_field_storage_load()</code> gets called to load the specific entity instances. Then the comparison is done on these entity descriptions.</p>
<h5>Taxonomy</h5>
<p>The Taxonomy module is not currently supported by the <em>structfieldstorage</em> field storage system. The reason is that the Taxonomy module is relying on the design of the <em>field_sql_storage</em> field storage system, which means that it has been tailored to use that specific field storage system. In some places it can be used, such as with the <em>entity reference</em> field widget, but its core functionality, the <em>term reference</em> field widget, is currently disabled.</p>
<h5>Views</h5>
<p><a title="structViews" href="http://drupalcode.org/project/construct.git/tree/refs/heads/7.x-1.x:/modules/structviews">structViews</a> is a <a href="https://drupal.org/project/Views">Views</a> query plugin for querying an OSF backend. It interfaces the Views 3 UI and generates OSF Search queries for searching and filtering all the content it contains. However, Views 3 is intimately tied with the <code>field_sql_storage</code> field storage system, which means that Views 3 itself cannot use the <code>structfieldstorage</code> storage system off the shelf. However, Views 3 design has been created such that a new Views querying engine could be implemented, and used, with the Views 3 user interface. This is no different than how the Field Storage API works for example. This is exactly what structViews is, and this is exactly how we can use Views on all the fields that uses theÃÂ <code>structfieldstorage</code> field storage system.</p>
<p>This is not different than what is required for the <code>mongodb</code> Drupal module. The mongodb Field Storage API implementation is not working with the default Views 3 functionality either, as shown by this old, and very minimal, <a href="http://drupalcode.org/project/field.git/tree/041ac36140ccff4b236b06dd6772411e093ddfd3:/mongodb_views" rel="nofollow">mongodb Views 3 integration module</a>.</p>
<p>structViews is already working because all of the information defined in fields that use the <code>structfieldstorage</code> storage system is indexed into the OSF. What structViews does is just to expose this OSF information via the Views 3 user interface. All the fields that define the local content can be added to a structViews view, all the fields can participate into filter criteria, etc.</p>
<p>What our design means is that the structFieldStorage module <strong>doesn&#8217;t</strong> break the Views 3 module. It does not because structViews takes care to expose that entity storage system to Views 3, via the re-implmented API.</p>
<h5>efq_views</h5>
<p><a href="http://drupal.org/project/efq_views" rel="nofollow"><code>efq_views</code></a> is another contributed module that exposes the EntityFieldQuery API to Views 3. What that means is that all of the Field Storage Systems that implement the EntityFieldQuery API should be able to interface with Views 3 via this <code>efq_views</code> Views 3 querying engine.</p>
<p>Right now, the structFieldStorage module <strong>does not</strong> implement the EntityFieldQueryAPI. However, it could implement it by implementing the <a href="http://api.drupal.org/api/drupal/modules%21field%21field.api.php/function/hook_field_storage_query/7" rel="nofollow"><code>hook_field_storage_query()</code></a> hook. (This was not required by our current client.)</p>
<h3>A Better Revisioning System</h3>
<p>There is a problem with the core functionality of Drupal&#8217;s current revisioning system. The problem is that if a field or a field instance gets deleted from a bundle, then all of the values of those fields, within all of the revisions of the entities that use this bundle, get deleted at the same time.</p>
<p>This means that there is no way to delete a field without deleting the values of that field in existing entities revisions. This is a big issue since there is no way to keep that information, at least for archiving purposes. This is probably working that way because core Drupal developers didn&#8217;t want <em></em>break the feature that enables people to revert an entity to one of its past revisions. This would have meant that data for fields that no longer existed would have to be re-created (creating its own set of issues).</p>
<p>However, for all the fields that uses the <code>structfieldstorage</code> field storage system, this issue is non-existing. Even if fields or fields instances are being deleted, all the <em>past</em> information about these fields remains in the revisions of the entities.</p>
<h3>Conclusion</h3>
<p>This blog post exposes the internal mechanism of this new <code>structfieldstorage </code>backend to Drupal. The next blog post will focus on the user interface of this new module. It will explain how it can be configured and used. And it will explain the different Drupal backend user interface changes that are needed to expose the new functionality related to this new module.</p>
]]></content:encoded>
	</item>
<item rdf:about="http://fgiasson.com/blog/index.php/2013/06/06/construct-for-drupal-7/">
	<title>conStruct for Drupal 7</title>
	<link>http://fgiasson.com/blog/index.php/2013/06/06/construct-for-drupal-7/</link>
	<dc:date>2013-06-06T19:43:11Z</dc:date>
	<dc:creator><![CDATA[Frederick Giasson]]></dc:creator>
			<dc:subject><![CDATA[Open Semantic Framework]]></dc:subject>
		<dc:subject><![CDATA[OSF for Drupal]]></dc:subject>
		<dc:subject><![CDATA[OSF Web Services]]></dc:subject>
		<dc:subject><![CDATA[Planet Drupal]]></dc:subject>
		<dc:subject><![CDATA[Semantic Web]]></dc:subject>
		<dc:subject><![CDATA[Structured Dynamics]]></dc:subject>
		<dc:subject><![CDATA[#construct]]></dc:subject>
		<dc:subject><![CDATA[#drupal]]></dc:subject>
		<dc:subject><![CDATA[#open semantic framework]]></dc:subject>
		<dc:subject><![CDATA[#rdf]]></dc:subject>
		<dc:subject><![CDATA[#semantic web]]></dc:subject>
		<dc:subject><![CDATA[#structwsf]]></dc:subject>
		<dc:subject><![CDATA[#web services]]></dc:subject>
	<description><![CDATA[	
	<span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Adc&amp;rfr_id=info%3Asid%2Focoins.info%3Agenerator&amp;rft.title=conStruct for Drupal 7&amp;rft.aulast=Giasson&amp;rft.aufirst=Frederick&amp;rft.subject=Open Semantic Framework&amp;rft.subject=OSF for Drupal&amp;rft.subject=OSF Web Services&amp;rft.subject=Planet Drupal&amp;rft.subject=Semantic Web&amp;rft.subject=Structured Dynamics&amp;rft.source=Frederick Giasson&#8217;s Weblog&amp;rft.date=2013-06-06&amp;rft.type=blogPost&amp;rft.format=text&amp;rft.identifier=http://fgiasson.com/blog/index.php/2013/06/06/construct-for-drupal-7/&amp;rft.language=English"></span>
For more than a year we have been developing a completely new version of conStruct for Drupal 7 for one of our clients. conStruct for Drupal 6 is really decoupled from Drupal and all the other contributed modules; in a word, it was not playing nice with Drupal. The goal of this new version has [&#8230;]]]></description>
	<content:encoded><![CDATA[	
	<span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Adc&amp;rfr_id=info%3Asid%2Focoins.info%3Agenerator&amp;rft.title=conStruct for Drupal 7&amp;rft.aulast=Giasson&amp;rft.aufirst=Frederick&amp;rft.subject=Open Semantic Framework&amp;rft.subject=OSF for Drupal&amp;rft.subject=OSF Web Services&amp;rft.subject=Planet Drupal&amp;rft.subject=Semantic Web&amp;rft.subject=Structured Dynamics&amp;rft.source=Frederick Giasson&#8217;s Weblog&amp;rft.date=2013-06-06&amp;rft.type=blogPost&amp;rft.format=text&amp;rft.identifier=http://fgiasson.com/blog/index.php/2013/06/06/construct-for-drupal-7/&amp;rft.language=English"></span>
<p><a href="http://fgiasson.com/blog/wp-content/uploads/2009/06/construct_logo_120.png"><img class="size-full wp-image-942 alignright" alt="construct_logo_120" src="http://fgiasson.com/blog/wp-content/uploads/2009/06/construct_logo_120.png" width="120" height="120" /></a>For more than a year we have been developing a completely new version of <a title="conStruct for Drupal 7" href="http://drupalcode.org/project/construct.git/shortlog/refs/heads/7.x-1.x">conStruct for Drupal 7</a> for one of our clients.</p>
<p><a title="conStruct for Drupal 6" href="http://drupalcode.org/project/construct.git/shortlog/refs/heads/6.x-1.x">conStruct for Drupal 6</a> is really decoupled from Drupal and all the other contributed modules; in a word, it was not playing nice with Drupal. The goal of this new version has been to change that situation. The focus of this completely new conStruct module has been to create a series of <code>connector</code> modules that bridge most of Drupal&#8217;s core functionalities with remote <a title="structWSF" href="https://github.com/structureddynamics/structWSF-Open-Semantic-Framework">structWSF</a> instances.</p>
<p>We wanted to make sure that Drupal developers could manipulate content, within Drupal, that is hosted in structWSF instance(s). The best way to start aiming for that goal was to make sure that all of the core Drupal APIs commonly used by Drupal developers could be used to manipulate structWSF data like if it was native in Drupal. This is what these connectors are about.</p>
<p>The development of conStruct for Drupal 7 is not finished, but it is available in the Git repository. There is still refactoring and improvements required, mainly to make it easier to use and understand, but all of the code is working properly and is already used on production sites.</p>
<h3>conStruct As a Large Scale Drupal Implementation</h3>
<p>Those who follow the evolution of conStruct know that conStruct&#8217;s main goal is to use Drupal as a user interface for structWSF for administrative purposes, or for creating complete portals like the <a title="NOW (Neighbourhoods Of Winnipeg)" href="http://now.winnipeg.ca">NOW</a> portal. However, in our initial versions, Structured Dynamics&#8217; purpose was to <strong>not</strong> tightly integrate with Drupal. Over time, though, we have seen broad acceptance for the Drupal front end and Drupal itself is evolving in ways compatible with semantic technologies.</p>
<p>What is changing with conStruct for Drupal 7, with all these connectors, is that we are now using conStruct to bridge Drupal with structWSF server instances. We supercharge Drupal 7&#8242;s capabilities with structWSF. Our evolution to a tighter Drupal coupling means the ability to manage, query, search, data mine, million of entities; to have vocabularies of tens of thousands of concepts; and to enable the querying of all of these entities and their content from any kind of devices or systems via a family of web services endpoints.</p>
<p>This is the initial version of what is (or should be) <a title="Large-scale Drupal (LSD)" href="http://buytaert.net/announcing-acquia-large-scale-drupal-program">Drupal LSD</a> for Structured Dynamics: A semantic web service framework backend system for Drupal.</p>
<h3>conStruct&#8217;s Drupal Connectors</h3>
<p>Here is the initial list of the <code>connectors</code> that exists:</p>
<ul>
<li><a href="http://drupalcode.org/project/construct.git/tree/refs/heads/7.x-1.x-structfieldstorage:/modules/structfieldstorage"><code>structFieldStorage</code></a>: this module creates a new <code>structfieldstorage</code> field storage system that can be used by Drupal fields to save the fields&#8217; data into a remote structWSF instance. This is used to enable the Content Type entities to be saved into a structWSF instance. It is an extension of the Drupal field storage system</li>
<li><a href="drupalcode.org/project/construct.git/tree/refs/heads/7.x-1.x:/modules/structentities"><code>structEntities</code></a>: this module creates a new Entity Type called the Resource Type that is used to see all the structWSF indexed records as native Entities in Drupal. This means that the Entity API can be used to manipulate any content in structWSF</li>
<li><a href="http://drupalcode.org/project/construct.git/tree/refs/heads/7.x-1.x:/modules/structviews"><code>structViews</code></a>: this module creates a new data source for Views 3. This means that the Views 3 user interface is used to generate structWSF Search endpoint queries instead of SQL queries</li>
<li><a href="http://drupalcode.org/project/construct.git/tree/refs/heads/7.x-1.x:/modules/structsearchapi"><code>structSearchAPI</code></a>: this module exposes new search indexes to the Search API. This means that the Search API can be used to query a structWSF instance.</li>
</ul>
<p>I will write about all these connectors individually in upcoming blog posts. I will cover their design, architecture and usage.</p>
<p>&nbsp;</p>
]]></content:encoded>
	</item>
<item rdf:about="http://fgiasson.com/blog/index.php/2013/05/21/neighbourhoods-of-winnipeg-a-community-semantic-portal/">
	<title>Neighbourhoods of Winnipeg: A Community Semantic Portal</title>
	<link>http://fgiasson.com/blog/index.php/2013/05/21/neighbourhoods-of-winnipeg-a-community-semantic-portal/</link>
	<dc:date>2013-05-21T19:45:54Z</dc:date>
	<dc:creator><![CDATA[Frederick Giasson]]></dc:creator>
			<dc:subject><![CDATA[Citizen Dan]]></dc:subject>
		<dc:subject><![CDATA[irON]]></dc:subject>
		<dc:subject><![CDATA[Open Semantic Framework]]></dc:subject>
		<dc:subject><![CDATA[OSF for Drupal]]></dc:subject>
		<dc:subject><![CDATA[OSF Web Services]]></dc:subject>
		<dc:subject><![CDATA[OSF Widgets]]></dc:subject>
		<dc:subject><![CDATA[Planet Drupal]]></dc:subject>
		<dc:subject><![CDATA[Semantic Web]]></dc:subject>
		<dc:subject><![CDATA[Structured Dynamics]]></dc:subject>
		<dc:subject><![CDATA[#construct]]></dc:subject>
		<dc:subject><![CDATA[#data]]></dc:subject>
		<dc:subject><![CDATA[#now]]></dc:subject>
		<dc:subject><![CDATA[#open city]]></dc:subject>
		<dc:subject><![CDATA[#open data]]></dc:subject>
		<dc:subject><![CDATA[#open semantic framework]]></dc:subject>
		<dc:subject><![CDATA[#rdf]]></dc:subject>
		<dc:subject><![CDATA[#semantic city]]></dc:subject>
		<dc:subject><![CDATA[#semantic web]]></dc:subject>
		<dc:subject><![CDATA[#structwsf]]></dc:subject>
	<description><![CDATA[I am proud to announce the new NOW (Neighbourhoods Of Winnipeg) semantic web portal! This new an innovative semantic web portal has been publicly announced by the Mayor of Winnippeg City last week...]]></description>
	<content:encoded><![CDATA[	
	<span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Adc&amp;rfr_id=info%3Asid%2Focoins.info%3Agenerator&amp;rft.title=Neighbourhoods of Winnipeg: A Community Semantic Portal&amp;rft.aulast=Giasson&amp;rft.aufirst=Frederick&amp;rft.subject=Citizen Dan&amp;rft.subject=irON&amp;rft.subject=Open Semantic Framework&amp;rft.subject=OSF for Drupal&amp;rft.subject=OSF Web Services&amp;rft.subject=OSF Widgets&amp;rft.subject=Planet Drupal&amp;rft.subject=Semantic Web&amp;rft.subject=Structured Dynamics&amp;rft.source=Frederick Giasson&#8217;s Weblog&amp;rft.date=2013-05-21&amp;rft.type=blogPost&amp;rft.format=text&amp;rft.identifier=http://fgiasson.com/blog/index.php/2013/05/21/neighbourhoods-of-winnipeg-a-community-semantic-portal/&amp;rft.language=English"></span>
<p><object width="480" height="315" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowFullScreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="src" value="//www.youtube.com/v/W-Bhfew6Gjc?hl=en_US&amp;version=3&amp;rel=0" /><param name="allowfullscreen" value="true" /><embed width="480" height="315" type="application/x-shockwave-flash" src="//www.youtube.com/v/W-Bhfew6Gjc?hl=en_US&amp;version=3&amp;rel=0" allowFullScreen="true" allowscriptaccess="always" allowfullscreen="true" /></object></p>
<h3>Introduction</h3>
<p>I am proud to announce the new <a href="http://now.winnipeg.ca">NOW</a> (Neighbourhoods Of Winnipeg) semantic web portal! This new and innovative semantic web portal was publicly announced by the Mayor of Winnipeg City last week.</p>
<p>The NOW (Neighbourhoods of Winnipeg) portal is <em>&#8220;a new Web portal (the &#8220;Portal&#8221;) produced by the City of Winnipeg to provide broad, dynamic and interactive access to local and neighbourhood information. Designed for easy access and use by all citizens, businesses, community organizations and Governments, the information on the site includes municipal data, census and demographic information, economic development information, historical data, much spatial and mapping information, and facilities for including and sharing data by external groups and constituencies.&#8221;</em></p>
<p>I would suggest you to read <a href="http://www.mkbergman.com/?p=1645">Mike Bergman&#8217;s blog post</a> about this new semantic web portal to have the proper background about that initiative by the city of Winnipeg and how it uses the <a href="http://openstructs.org/open-semantic-framework/overview">OSF (Open Semantic Framework)</a> as its foundational technology stack.</p>
<p>This project has been the springboard that led to the <a href="https://github.com/structureddynamics/structWSF-Open-Semantic-Framework/tree/version-1.1">Open Semantic Framework version 1.1</a>. Multiple pieces of the framework have been developed in relation to this project, and more particularly pieces like the <a href="https://github.com/structureddynamics/Semantic-Components-Open-Semantic-Framework/tree/master/js/sWebMap">sWebMap</a> semantic component and several improvements to the structWSF web services endpoints and conStruct modules for Drupal 6.</p>
<h3>Development of the Portal</h3>
<p>The development plan of this portal is composed of four major areas:</p>
<ol>
<li>Development of the data structure of the municipal domain by creating a series of ontologies</li>
<li>Conversion of existing data asset using this new data structure</li>
<li>Creation of the web portal by creating its design and by developing all the display templates</li>
<li>Creation of new tools to let users interact with the data available on the portal</li>
</ol>
<p>Structured Dynamics has been involved in #1, #2 and #4 by providing design and development resources, technology transfer sessions and material and supporting internal teams to create, maintain and deploy their 57 publicly available datasets.</p>
<h4>The Data Structure</h4>
<p>This technology stack does not have any meaning without the proper data and data structures (ontologies) in place. This gold mine of information is what drives the functionality of the portal.</p>
<p>The portal is driven by 12 ontologies: 2 internal and 10 external. The content of the 57 publicly available datasets is defined by the classes and properties defined in one of these ontologies.</p>
<p>The two internal ontologies have been created jointly by Structured Dynamics and the City of Winnipeg, but they are extended and maintained by the city only.</p>
<p>These ontologies are maintained using two different kind of tools:</p>
<ol>
<li><a href="http://protege.stanford.edu/"><span class="st">Protege</span></a></li>
<li>structOntology</li>
</ol>
<p><span class="st">Protege</span> is used for the big development tasks such as creating a big number of classes and properties, to do a big reorganization of the classes structure, etc.</p>
<p><a href="http://openstructs.org/construct/features/structontology">structOntology</a> is used for quick ontological changes to have an immediate impact on the behaviors of the portals such as label changes, <a href="http://techwiki.openstructs.org/index.php/SCO_Ontology">SCO ontology</a> property assignments to change the behavior of some of the tools that exist in the portal, etc.</p>
<p>structOntology can also be used by portal users to understand the underlying data structure used to define the data available on the portal. <a href="http://now.winnipeg.ca/conStruct/ontology/">All users have access to the <em>reading mode</em> of the tool</a> which let them browse, search and export the loaded ontologies on the portal.</p>
<h4>The Data</h4>
<p>Except for rare exceptions such as the historical photos, no new data has been created by the City of Winnipeg to populate this NOW portal. Most of its content comes from existing internal sources of data such as:</p>
<ul>
<li>Conventional relational databases</li>
<li>GIS (Geographic Information System) on-top of relational databases</li>
<li>Spreadsheets</li>
</ul>
<p>All of the conventional relation databases and legacy data from the GIS systems has been converted into RDF using the <a href="http://www.safe.com/">FME Workbench</a> <a href="http://en.wikipedia.org/wiki/Extract,_transform,_load">ETL</a> system. All of the FME workbench templates are mapping the relational data into RDF using the ontologies loaded into the portal. All of the geolocated records that exist in the portal come from this ETL process and have been converted using FME.</p>
<p>Some smaller datasets come from internal spreadsheets that got modified to comply with the <a href="http://techwiki.openstructs.org/index.php/Instance_Record_and_Object_Notation_%28irON%29_Specification#SUB-PART_3:_commON_PROFILE">commON spreadsheet format</a> that is used to convert spreadsheet (CSV/TSV) data files into RDF.</p>
<p>All of the dataset creation and maintenance is managed internally by the City of Winnipeg using one of these two data conversion and importation processes.</p>
<p>Here are some internal statistics of the content that is currently accessible on the NOW portal.</p>
<h5>General Portal</h5>
<p>These are statistics related to different functionalities of the portal.</p>
<ul>
<li>Number of neighbourhoods: <strong>236</strong></li>
<li>Number of community areas: <strong>14</strong></li>
<li>Number of wards: <strong>15</strong></li>
<li>Number of neighbourhood clusters: <strong>23</strong></li>
<li>Number of major site sections: <strong>7</strong></li>
<li>Total number of site pages: <strong>428,019</strong>
<ul>
<li>Static pages:<strong> 2,245</strong></li>
<li>Record-oriented pages: <strong>425,874</strong></li>
<li>Dynamic (search-based) pages: <strong>infinite</strong></li>
</ul>
</li>
<li>Number of documents: <strong>1,017</strong></li>
<li>Number of images: <strong>2,683</strong></li>
<li>Number of search facets: <strong>1,392</strong></li>
<li>Number of display templates: <strong>54</strong></li>
<li>Number of links: <strong>1,067</strong>
<ul>
<li>External links: <strong>784</strong></li>
<li>Internal links: <strong>283</strong></li>
</ul>
</li>
</ul>
<h5>Site Data</h5>
<p>These statistics show the things that are available via the portal, what are their types, their properties, what is the quantity of data that is searchable, manipulable and exportable from the portal.</p>
<ul>
<li>Number of datasets: <strong>57</strong></li>
<li>Number of records: <strong>425,874</strong>
<ul>
<li>Number of geolocational records: <strong>418,869</strong>
<ul>
<li>Point of interest (POI) records: <strong>193,272</strong></li>
<li>Polygon records: <strong>218,602</strong></li>
<li>Path (route) records: <strong>6,995</strong></li>
</ul>
</li>
</ul>
</li>
<li>Number of classes (types): <strong>84</strong></li>
<li>Number of properties: <strong>1,308</strong></li>
<li>Number of triple assertions: <strong>8,683,103</strong></li>
</ul>
<h4>Sharing Content</h4>
<p>An important aspect of this portal is that all of the content is contextually available, in different formats, to all of the users of the portal. Whether you are browsing content within datasets, searching for specific pieces of content, or looking at a specific record page, you always have the possibility to get your hands on the content that is being displayed to you, the user, with a choice of five different data formats:</p>
<ul>
<li><a title="StructXML" href="http://techwiki.openstructs.org/index.php/StructXML">structXML</a></li>
<li><a title="StructJSON" href="http://techwiki.openstructs.org/index.php/StructJSON">structJSON</a></li>
<li><a href="http://www.w3.org/TR/REC-rdf-syntax/">RDF+XML</a></li>
<li><a href="http://www.w3.org/TeamSubmission/turtle/">N3/Turtle</a></li>
<li><a title="Instance Record and Object Notation (irON) Specification" href="http://techwiki.openstructs.org/index.php/Instance_Record_and_Object_Notation_%28irON%29_Specification#SUB-PART_1:_irXML_PROFILE">irJSON</a></li>
</ul>
<h5>Export Page Content</h5>
<p>All content pages can be exported in one of the formats outlined above. <a href="http://now.winnipeg.ca/conStruct/view/?uri=http%3A%2F%2Fnow.winnipeg.ca%2Fdatasets%2FIndoor_swimming_pools%2F12&amp;dataset=http%3A%2F%2Fnow.winnipeg.ca%2Fdatasets%2FIndoor_swimming_pools%2F">In the bottom right corner</a> of these pages you will see a <em>Export</em> button that you can click to get the content of that page in one of these formats.</p>
<h4><a href="http://fgiasson.com/blog/wp-content/uploads/2013/05/record_export.png"><img alt="record_export" src="http://fgiasson.com/blog/wp-content/uploads/2013/05/record_export.png" width="146" height="122" /></a></h4>
<h5>Export Search Content</h5>
<p>Every time you <a href="http://now.winnipeg.ca/conStruct/search/?filter_datasets_2=http%3A%2F%2Fnow.winnipeg.ca%2Fdatasets%2FIndoor_swimming_pools%2F&amp;query=pool&amp;filter=on">do a search on the portal</a>, you can export the results of that search in one of the formats outlined above. You can do that by selecting the <em>Export</em> tab, and by selecting one of the formats you want to use for exporting the data.</p>
<p><a href="http://fgiasson.com/blog/wp-content/uploads/2013/05/browse_export.jpg"><img alt="browse_export" src="http://fgiasson.com/blog/wp-content/uploads/2013/05/browse_export.jpg" width="596" height="164" /></a></p>
<h5>Export Datasets</h5>
<p>You can <a href="http://now.winnipeg.ca/conStruct/export/">export any publicly available dataset from the portal</a>. These datasets have to be exported in slices if they are too big to fit in a single slice. The datasets can be exported in one of the formats mentioned above.</p>
<h4><a href="http://fgiasson.com/blog/wp-content/uploads/2013/05/datasets_export.png"><img alt="datasets_export" src="http://fgiasson.com/blog/wp-content/uploads/2013/05/datasets_export.png" width="405" height="149" /></a></h4>
<h5>Export Census</h5>
<p>Users also have the <a href="http://now.winnipeg.ca/census/total-population-census-year">possibility to export census data</a>, from the census section of the portal, in spreadsheets. They only have to select the <em>Tables</em> tab, and then to click the <em>Ex</em>port<em> Spreadsheet</em> button.</p>
<p style="text-align: center;"><a href="http://fgiasson.com/blog/wp-content/uploads/2013/05/export_census.png"><img class="wp-image-2078 alignleft" alt="export_census" src="http://fgiasson.com/blog/wp-content/uploads/2013/05/export_census.png" width="427" height="224" /></a></p>
<h5></h5>
<h5></h5>
<h5></h5>
<h5></h5>
<h5></h5>
<h5></h5>
<h5>Export Ontologies</h5>
<p>The export functionality would not be complete without the ability to consult and export the ontologies that are used to describe the content exposed by the portal. These ontologies can be read from the <a href="http://now.winnipeg.ca/conStruct/ontology/">ontologies reader</a> user interface, or can be exported from the portal to be read by external ontologies management tools such as <a href="http://protege.stanford.edu/"><span class="st">Protege</span></a>.</p>
<p><a href="http://fgiasson.com/blog/wp-content/uploads/2013/05/ontologies_export.png"><img alt="ontologies_export" src="http://fgiasson.com/blog/wp-content/uploads/2013/05/ontologies_export.png" width="403" height="151" /></a></p>
<h4>Portal Design</h4>
<p>The portal is using <a href="http://drupal.org/">Drupal 6</a> as its CMS (Content Management System). The Drupal 6 instance communicates with <a href="http://openstructs.org/structwsf">structWSF</a> using the <a href="http://drupal.org/project/construct">conStruct module,</a> which acts as a bridge between a Druapal portal and a structWSF web service network.</p>
<p>Here are the main design phases that have been required to create the portal:</p>
<ol>
<li>Creation of the portal&#8217;s design, and the Drupal 6 theme that implements it</li>
<li>Creation of the Search and Browse results templates</li>
<li>Creation of the individual records&#8217; page design and <a href="http://techwiki.openstructs.org/index.php/Building_conStruct_Templates">templates</a> based on their type</li>
<li>Creation of the sWebMap search results templates.</li>
</ol>
<p>The portal&#8217;s design has been created internally by the City of Winnipeg and by <a href="http://tactica.ca/">Tactica</a> based on the Citizen DAN demo. Tactica also worked on another Citizen DAN like portal called <a href="http://www.mypeg.ca/">MyPeg.ca</a>.</p>
<h4>Semantic Components</h4>
<p>The NOW Web portal is using a series of tools that are called the <a href="http://techwiki.openstructs.org/index.php/Semantic_Component_Library">Semantic Components</a>. These are a set of Flash and JavaScript tools that can be embedded within any web page and that can easily communicate with structWSF instance(s). They display information in all kinds of charts, they can display document reading widgets, they can create <a href="http://techwiki.openstructs.org/index.php/Workbench:_Create_Dashboard_Views">dashboards of structured data</a>, etc. The initial set of Semantic Components was developed for the <a href="http://mypeg.ca">MyPeg.ca</a> project back in November 2010. This was before Steve Jobs announced that Apple would not support Adobe Flash, and far before Google announced that it would drop support for it as well.</p>
<p>Since the NOW portal wanted to re-use as much as possible to lower the development cost related to the portal, they choose to use the complete OSF stack which includes these Semantic Components.</p>
<p>However, when we participated in developing this new NOW portal, we did extended the set of Semantic Components by creating the most complex Semantic Component: the <a href="http://fgiasson.com/blog/index.php/2012/02/27/new-mapping-semantic-component-in-javascript/">sWebMap</a>. However, because of the two announcements mentioned above, we choose to move forward and to create the sWebMap Semantic Component using JavaScript instead of Flash. The other Semantic Component tools that have been developed in Flash have not yet been ported into JavaScript.</p>
<h3>Conclusion</h3>
<p>The new NOW semantic web portal&#8217;s main asset is its data: how it can be searched (with traditional search engines or using a semantic component to search, browse, filter and localize results), displayed and exported. This portal has been developed using a completely free and open source semantic platform <a href="http://fgiasson.com/blog/index.php/2011/10/17/open-sources-projects-as-a-pool-of-resources/">that has been developed from previous projects that open sourced their code</a>.</p>
<p>I consider this portal a pioneer in the way municipal organization will provide new online services to their citizens and to the commercial enterprises based on the quality of the data that will be exposed via such Web portals.</p>
]]></content:encoded>
	</item>
<item rdf:about="http://fgiasson.com/blog/index.php/2012/02/27/new-mapping-semantic-component-in-javascript/">
	<title>New Mapping Semantic Component In JavaScript</title>
	<link>http://fgiasson.com/blog/index.php/2012/02/27/new-mapping-semantic-component-in-javascript/</link>
	<dc:date>2012-02-27T18:16:18Z</dc:date>
	<dc:creator><![CDATA[Frederick Giasson]]></dc:creator>
			<dc:subject><![CDATA[Citizen Dan]]></dc:subject>
		<dc:subject><![CDATA[Open Semantic Framework]]></dc:subject>
		<dc:subject><![CDATA[OSF Web Services]]></dc:subject>
		<dc:subject><![CDATA[OSF Widgets]]></dc:subject>
		<dc:subject><![CDATA[Semantic Web]]></dc:subject>
		<dc:subject><![CDATA[Structured Dynamics]]></dc:subject>
		<dc:subject><![CDATA[#map]]></dc:subject>
		<dc:subject><![CDATA[#osf]]></dc:subject>
		<dc:subject><![CDATA[#semantic components]]></dc:subject>
		<dc:subject><![CDATA[#semantic web]]></dc:subject>
		<dc:subject><![CDATA[#structwsf]]></dc:subject>
	<description><![CDATA[	
	<span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Adc&amp;rfr_id=info%3Asid%2Focoins.info%3Agenerator&amp;rft.title=New Mapping Semantic Component In JavaScript&amp;rft.aulast=Giasson&amp;rft.aufirst=Frederick&amp;rft.subject=Citizen Dan&amp;rft.subject=Open Semantic Framework&amp;rft.subject=OSF Web Services&amp;rft.subject=OSF Widgets&amp;rft.subject=Semantic Web&amp;rft.subject=Structured Dynamics&amp;rft.source=Frederick Giasson&#8217;s Weblog&amp;rft.date=2012-02-27&amp;rft.type=blogPost&amp;rft.format=text&amp;rft.identifier=http://fgiasson.com/blog/index.php/2012/02/27/new-mapping-semantic-component-in-javascript/&amp;rft.language=English"></span>
&#160; I am please to announce the release of the new sWebMap Semantic Component in JavaScript. This new mapping component is a standalone JavaScript application that can be integrated on any new or existing web sites and that interact with an Open Semantic Framework (OSF) instance to search, browse, filter and display with geographically-located information [&#8230;]]]></description>
	<content:encoded><![CDATA[	
	<span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Adc&amp;rfr_id=info%3Asid%2Focoins.info%3Agenerator&amp;rft.title=New Mapping Semantic Component In JavaScript&amp;rft.aulast=Giasson&amp;rft.aufirst=Frederick&amp;rft.subject=Citizen Dan&amp;rft.subject=Open Semantic Framework&amp;rft.subject=OSF Web Services&amp;rft.subject=OSF Widgets&amp;rft.subject=Semantic Web&amp;rft.subject=Structured Dynamics&amp;rft.source=Frederick Giasson&#8217;s Weblog&amp;rft.date=2012-02-27&amp;rft.type=blogPost&amp;rft.format=text&amp;rft.identifier=http://fgiasson.com/blog/index.php/2012/02/27/new-mapping-semantic-component-in-javascript/&amp;rft.language=English"></span>
<p>&nbsp;</p>
<table>
<tbody>
<tr>
<td>I am please to announce the release of the new <a title="sWebMap Semantic Component" href="http://techwiki.openstructs.org/index.php/SWebMap">sWebMap </a>Semantic Component in JavaScript. This new mapping component is a standalone JavaScript application that can be integrated on any new or existing web sites and that interact with an <a title="Open Semantic Framework (OSF)" href="http://techwiki.openstructs.org/index.php/Open_Semantic_Framework">Open Semantic Framework</a> (OSF) instance to search, browse, filter and display with geographically-located information on an interactive map.</td>
<td><a href="http://fgiasson.com/blog/wp-content/uploads/2012/02/old-world-map.jpg"><img class="aligncenter  wp-image-1921" title="old-world-map with markers" src="http://fgiasson.com/blog/wp-content/uploads/2012/02/old-world-map.jpg" alt="" width="245" height="188" /></a></td>
</tr>
</tbody>
</table>
<h3>Features</h3>
<p>The sWebMap is a rich mapping tool that can easily be integrated on any webpage, and that can be extensively customized. The sWebMap does support these features:</p>
<ul>
<li>Full text search for searching and displaying results on a map</li>
<li>Extensive filtering capabilities</li>
<ul>
<li>Filtering by dataset source</li>
<li>Filtering by type</li>
<li>Filtering by attribute/value</li>
<li>Filtering of records that belongs to a specific geographic region</li>
</ul>
<li>Display of record on the map using:</li>
<ul>
<li>Different markers depending on the type of record to display (determined by the ontologies)</li>
<li>Polygon shapes for records that refers to a geographic region</li>
<li>Polyline shapes for records that refers to a geographically-located path</li>
</ul>
<li>Templating of records in a resultset depending on their type</li>
<li>Templating of records&#8217; preview, displayed in an overlay window, depending on their type</li>
<li>Persist records on the map accros searches and filtering operations</li>
<li>Supports map sessions</li>
<ul>
<li>Save map sessions</li>
<li>Load saved map sessions</li>
<li>Delete saved map sessions</li>
<li>Share saved map sessions</li>
</ul>
<li>Supports a multiple-maps mode</li>
<ul>
<li>Three focus maps are available under the main map</li>
<li>Each map focus on a particular region of the main map</li>
<li>User can switch between focus map to see different records in different region</li>
</ul>
</ul>
<p>&nbsp;</p>
<h3>Normal Mode</h3>
<p>Here is what the default sWebMap, in normal mode, using a few datasets related to the city of Iowa looks like. <a title="sWebMap Citizen DAN Demo" href="http://demo.citizen-dan.org/webmap">You can also interact with this sWebMap instance directly on the Citizen DAN demo website here</a>.</p>
<p style="text-align: center;"><a href="http://fgiasson.com/blog/wp-content/uploads/2012/02/swebmap.jpg"><div style="margin:10px;overflow:hidden;display:table;line-height:0;text-align:center;width:450px;" class="aligncenter"><img class=" size-full wp-image-1922 shadow_curl" title="sWebMap - Normal Mode" src="http://fgiasson.com/blog/wp-content/uploads/2012/02/swebmap.jpg" alt="" width="450" height="406"  style="padding:0 !important; margin:0 !important; max-width:100% !important;"><br/><img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="shadow_img" style="margin:0 !important;height:10px;width:100%;"></div></a></p>
<h3>Multiple Windows Mode</h3>
<p>Here is what the default sWebMap, in multiple windows mode, using a few datasets related to the city of Iowa looks like. <a title="sWebMap Citizen DAN Demo" href="http://demo.citizen-dan.org/webmapmulti">You can also interact with this sWebMap instance directly on the Citizen DAN demo website here</a>.</p>
<p>&nbsp;</p>
<p style="text-align: center;"><a href="http://fgiasson.com/blog/wp-content/uploads/2012/02/swebmap-multi.jpg"><div style="margin:10px;overflow:hidden;display:table;line-height:0;text-align:center;width:450px;" class="aligncenter"><img class=" size-full wp-image-1923 shadow_curl" title="sWebMap Multiple Maps Mode" src="http://fgiasson.com/blog/wp-content/uploads/2012/02/swebmap-multi.jpg" alt="" width="450" height="557"  style="padding:0 !important; margin:0 !important; max-width:100% !important;"><br/><img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="shadow_img" style="margin:0 !important;height:10px;width:100%;"></div></a></p>
<p>&nbsp;</p>
<h3>Under the Hood: The Open Semantic Framework</h3>
<p>Each sWebMap component communicates with an OSF (Open Semantic Framework) instance. More specifically, a sWebMap component will send Search/Filtering queries to a <a title="Search web service endpoint (structWSF)" href="http://techwiki.openstructs.org/index.php/Search">geo-enabled structWSF Search web service endpoint</a>.</p>
<p>Depending on the options you had specified when you created the sWebMap control, each time you move (option), zoom (option) or change the filtering criterias, this will send a query to the Search endpoint. The sWebMap control then requests JSON formatted resultset and display the results to the user.</p>
<p>This means that to implement the sWebMap component on your website, you will need to have:</p>
<ul>
<li>a running structWSF instance</li>
<li>some datasets that have geo-localized information</li>
<li><a href="http://techwiki.openstructs.org/index.php/SWebMap#Schemas">properly defined records and ontologies classes</a></li>
</ul>
<h3>Download</h3>
<p>You can immediately download the entire code source from this GitHub reposiroty:</p>
<p style="text-align: center;"><a title="Download the sWebMap Component" href="https://github.com/structureddynamics/Semantic-Components-Open-Semantic-Framework/tree/master/js/sWebMap"><img class="aligncenter  wp-image-1893" title="download" src="http://fgiasson.com/blog/wp-content/uploads/2012/01/download.png" alt="" width="307" height="186" /></a></p>
<h3>Installation</h3>
<p>Installing the sWebMap component is really easy. In fact, you only have to load a few JavaScript and CSS files, to defined a <code>&lt;div&gt;&lt;/div&gt;</code> container for the map, and to create a sWebMap component object, which is a single line of code.</p>
<p>Additionally, you can initialize the sWebMap component with one of the multiple <a title="sWebMap options available" href="http://techwiki.openstructs.org/index.php/SWebMap#Options">options available</a>.</p>
<p>Refer you to the <a title="Using and Installing sWebMap" href="http://techwiki.openstructs.org/index.php/SWebMap#Usage">Usage section of the sWebMap component</a> to know exactly how to install and setup a sWebMap component instance.</p>
<h3>Resources</h3>
<p>Here are some additional resources related to the sWebMap component:</p>
<ul>
<li><a title="sWebMap documentation" href="http://techwiki.openstructs.org/index.php/SWebMap">sWebMap complete documentation</a></li>
<li><a title="How to Use the WebMap" href="http://techwiki.openstructs.org/index.php/How_to_Use_the_WebMap">sWebMap user manual</a></li>
<li><a title="Open Semantic Framework (OSF) Installer" href="http://techwiki.openstructs.org/index.php/Open_Semantic_Framework_Installer">OSF Installer</a> (install the Open Semantic Framework to feed your sWebMap component)</li>
<li><a title="sWebMap Demo (normal mode)" href="http://demo.citizen-dan.org/webmap">sWebMap Demo (normal mode)</a></li>
<li><a title="sWebMap Demo (multiple windows mode)" href="http://demo.citizen-dan.org/webmapmulti">sWebMap Demo (multiple windows mode)</a></li>
</ul>
<p>&nbsp;</p>
]]></content:encoded>
	</item>
<item rdf:about="http://fgiasson.com/blog/index.php/2011/12/28/open-semantic-framework-running-on-micro-instances/">
	<title>Open Semantic Framework Running on Micro Instances</title>
	<link>http://fgiasson.com/blog/index.php/2011/12/28/open-semantic-framework-running-on-micro-instances/</link>
	<dc:date>2011-12-28T20:45:47Z</dc:date>
	<dc:creator><![CDATA[Frederick Giasson]]></dc:creator>
			<dc:subject><![CDATA[Open Semantic Framework]]></dc:subject>
		<dc:subject><![CDATA[OSF Web Services]]></dc:subject>
		<dc:subject><![CDATA[Semantic Web]]></dc:subject>
		<dc:subject><![CDATA[Structured Dynamics]]></dc:subject>
		<dc:subject><![CDATA[#aws]]></dc:subject>
		<dc:subject><![CDATA[#open semantic framework]]></dc:subject>
		<dc:subject><![CDATA[#rdf]]></dc:subject>
		<dc:subject><![CDATA[#semantic web]]></dc:subject>
		<dc:subject><![CDATA[#structwsf]]></dc:subject>
		<dc:subject><![CDATA[#web services]]></dc:subject>
	<description><![CDATA[	
	<span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Adc&amp;rfr_id=info%3Asid%2Focoins.info%3Agenerator&amp;rft.title=Open Semantic Framework Running on Micro Instances&amp;rft.aulast=Giasson&amp;rft.aufirst=Frederick&amp;rft.subject=Open Semantic Framework&amp;rft.subject=OSF Web Services&amp;rft.subject=Semantic Web&amp;rft.subject=Structured Dynamics&amp;rft.source=Frederick Giasson&#8217;s Weblog&amp;rft.date=2011-12-28&amp;rft.type=blogPost&amp;rft.format=text&amp;rft.identifier=http://fgiasson.com/blog/index.php/2011/12/28/open-semantic-framework-running-on-micro-instances/&amp;rft.language=English"></span>
After releasing the new Open Semantic Framework Installer, we started to test it on machines with all kind of different specifications: different CPU limits, different amount of memory, etc. One of the setup that caught our attention was Amazon&#8217;s EC2 Micro Instance. The Micro Instance is a virtual server type that has been introduced by [&#8230;]]]></description>
	<content:encoded><![CDATA[	
	<span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Adc&amp;rfr_id=info%3Asid%2Focoins.info%3Agenerator&amp;rft.title=Open Semantic Framework Running on Micro Instances&amp;rft.aulast=Giasson&amp;rft.aufirst=Frederick&amp;rft.subject=Open Semantic Framework&amp;rft.subject=OSF Web Services&amp;rft.subject=Semantic Web&amp;rft.subject=Structured Dynamics&amp;rft.source=Frederick Giasson&#8217;s Weblog&amp;rft.date=2011-12-28&amp;rft.type=blogPost&amp;rft.format=text&amp;rft.identifier=http://fgiasson.com/blog/index.php/2011/12/28/open-semantic-framework-running-on-micro-instances/&amp;rft.language=English"></span>
<table>
<tbody>
<tr>
<td>After releasing the new <a title="Open Semantic Framework (OSF) Installer" href="http://techwiki.openstructs.org/index.php/Open_Semantic_Framework_Installer">Open Semantic Framework Installer</a>, we started to test it on machines with all kind of different specifications: different CPU limits, different amount of memory, etc. One of the setup that caught our attention was Amazon&#8217;s EC2 Micro Instance.</td>
<td><a title="Really Small Things" href="http://designmind.frogdesign.com/articles/the-substance-of-things-not-seen/really-small-things.html"><div style="margin:10px;overflow:hidden;display:table;line-height:0;text-align:center;width:180px;" class="aligncenter"><img class="  wp-image-1840 shadow_curl" title="willard-wigan-small" src="http://fgiasson.com/blog/wp-content/uploads/2011/12/willard-wigan-small-300x200.jpg" alt="" width="180" height="120"  style="padding:0 !important; margin:0 !important; max-width:100% !important;"><br/><img src="http://fgiasson.com/blog/wp-content/plugins/shadows/shadow_curl.png" class="shadow_img" style="margin:0 !important;height:10px;width:100%;"></div></a></td>
</tr>
</tbody>
</table>
<p>The Micro Instance is a virtual server type that has been introduced by Amazon a little bit more than a year ago. As described by Amazon, Micro Instances are:</p>
<blockquote><p>Instances of this family provide a small amount of consistent CPU resources and allow you to burst CPU capacity when additional cycles are available. They are well suited for lower throughput applications and web sites that consume significant compute cycles periodically.</p></blockquote>
<p>We were intrigued by this particular type of instance because we wanted to know how the complete Open Semantic Framework stack could operate on such a small server instance.</p>
<h3>Micro Instance Specifications</h3>
<p>The Micro Instance&#8217;s specifications are as follow:</p>
<ul>
<li>613 MB memory</li>
<li>Up to 2 EC2 Compute Units (for short periodic bursts)</li>
<li>32-bit or 64-bit platform</li>
<li>I/O Performance: Low</li>
</ul>
<p>Note that a <a href="http://aws.amazon.com/ec2/instance-types/">EC2 Compute Unit</a> <em>provides the equivalent CPU capacity of a 1.0-1.2 GHz 2007 Opteron or 2007 Xeon processor</em>.</p>
<h3>Installing The Stack</h3>
<p>Installing the stack on the Amazon Micro Instance, using the OSF Installer, is not the fastest experience in the World. In fact, installing the complete stack takes up to 10 hours (5 minutes of your time, but compiling and installing everything takes about 10 hours of CPU time).</p>
<p>The problem is that installing OSF is a CPU intensive task, while the Micro instance is not. The micro instance can sustain small CPU bursts, but it can&#8217;t sustain the creation and compilation of the entire stack. That means that the CPU cycles won&#8217;t be available to the instance, and that the CPU consumption of that instance will be throttled by Amazon, which will significantly slow down the installation process.</p>
<p>However, as you will see below, once OSF is installed on the Micro instance, the complete stack responds perfectly to all queries sent to it.</p>
<h3>Creating an AMI</h3>
<p>The only time you have to spend 10 hours to install the OSF stack on an Amazon Micro Instance is the first time. After that, you would only have to <a title="Creating an AMI from a EBS Micro Instance" href="http://docs.amazonwebservices.com/AWSEC2/latest/UserGuide/Tutorial_CreateImage.html">create an Amazon AMI from that vanilla OSF instance</a> for future use. If you proceed that way, you will lower the installation time from 10 hours to a few minutes.</p>
<h3>Reading and Searching Data</h3>
<p>The testing we did for reading and searching data from <a title="structWSF" href="http://openstructs.org/structwsf">structWSF</a> shows that performances are as good as the ones you would get from a small instance with a normal workload. The <a title="Crud Read" href="http://techwiki.openstructs.org/index.php/CRUD:_Read">Crud: Read</a> and the <a title="Search endpoint" href="http://techwiki.openstructs.org/index.php/Search">Search</a> structWSF endpoints are fully responsive and operational.</p>
<h3>Creating, Updating and Deleting Data</h3>
<p>The testing we did for creating, updating and deleting entire datasets takes more time than with a small instance even if the instance is dedicated to that only task, without any other queries processed by the instance at the same time. The reason for this decrease in performances is due to the CPU throttling done by Amazon for this kind of more CPU intensive task. However, since individual records creation, updating and deletion creates &#8220;CPU Peaks&#8221;, such isolated create/update/delete queries doesn&#8217;t greatly affect the overall performances of the instance.</p>
<h3>What This Type Of Instance Is Good For?</h3>
<p>We found that such small instances were perfect for data collection activities performed by a single person, or a small group of collaborators. We also found that it could be used by low-traffic websites such as personal web portal, personal blogs, etc. The complete OSF stack is fully responsive and our analysis shows that the resources (CPU and Memory) are stable and responsive with a normal workload.</p>
<h3>Conclusion</h3>
<p>Such a small server instance can easily be used to create a personal data collection endpoint, or a personal, or small, data presentation portal such as Mike&#8217;s semantic web <a title="semantic web Sweet Tools" href="http://www.mkbergman.com/sweet-tools/">Sweet Tools</a>. It is well suited for data portals that require reading and searching of data with occasional data changes (addition, removal and modification of instance records).</p>
]]></content:encoded>
	</item>
</rdf:RDF>
