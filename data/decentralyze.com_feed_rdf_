<?xml version="1.0" encoding="UTF-8"?><rdf:RDF
	xmlns="http://purl.org/rss/1.0/"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:admin="http://webns.net/mvcb/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#" >
<channel rdf:about="http://decentralyze.com">
	<title>Decentralyze</title>
	<link>http://decentralyze.com</link>
	<description>Knock Down Walled-Garden Walls</description>
	<dc:date>2014-04-25T12:11:52Z</dc:date>
		<sy:updatePeriod>hourly</sy:updatePeriod>
		<sy:updateFrequency>1</sy:updateFrequency>
	<sy:updateBase>2000-01-01T12:00+00:00</sy:updateBase>
	<admin:generatorAgent rdf:resource="http://wordpress.com/" />
	<items>
		<rdf:Seq>
					<rdf:li rdf:resource="http://decentralyze.com/2014/03/11/the-web-is-like-beer/"/>
					<rdf:li rdf:resource="http://decentralyze.com/2014/02/27/nsa-certified/"/>
					<rdf:li rdf:resource="http://decentralyze.com/2012/04/06/fix-303-with-client-side-redirects/"/>
					<rdf:li rdf:resource="http://decentralyze.com/2011/04/14/rdf-steps-carefully-forward/"/>
					<rdf:li rdf:resource="http://decentralyze.com/2011/02/02/elevator-pitch-for-the-semantic-web/"/>
					<rdf:li rdf:resource="http://decentralyze.com/2011/01/28/can-we-use-lean-startup-methods-to-build-the-semantic-web/"/>
					<rdf:li rdf:resource="http://decentralyze.com/2010/11/10/simplified-rdf/"/>
					<rdf:li rdf:resource="http://decentralyze.com/2010/10/17/why-decentralize-facebook/"/>
					<rdf:li rdf:resource="http://decentralyze.com/2010/06/08/explaining-linked-data/"/>
					<rdf:li rdf:resource="http://decentralyze.com/2010/06/04/from-json-to-rdf-in-six-easy-steps-with-jron/"/>
				</rdf:Seq>
	</items>
</channel>
<item rdf:about="http://decentralyze.com/2014/03/11/the-web-is-like-beer/">
	<title>The Web is like Beer</title>
	<link>http://decentralyze.com/2014/03/11/the-web-is-like-beer/</link>
	<dc:date>2014-03-11T13:28:09Z</dc:date>
	<dc:creator><![CDATA[sandhawke]]></dc:creator>
			<dc:subject><![CDATA[Uncategorized]]></dc:subject>
	<description><![CDATA[Lots of people can&#8217;t seem to understand the relationship of the Web to the Internet. So I&#8217;ve come up with a simple analogy: The Web is to the Internet as Beer is to Alcohol. For some people, sometimes, they are essentially synonymous, because they are often encountered together. But of course they are fundamentally different [&#8230;]<img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=decentralyze.com&#038;blog=5209539&#038;post=274&#038;subd=decentralyze&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
	<content:encoded><![CDATA[<p>Lots of people can&#8217;t seem to understand the relationship of the Web to the Internet. So I&#8217;ve come up with a simple analogy:</p>
<p>The Web is to the Internet as Beer is to Alcohol.
<p>For some people, sometimes, they are essentially synonymous, because they are often encountered together. But of course they are fundamentally different things
<p>In this analogy, Email is like Wine: it&#8217;s the other universally popular use of the Internet/Alcohol.
<p>But there are lots of other uses, too, somewhat more obscure. We could say the various chat protocols are the various Whiskeys. IRC is Scotch; XMPP is Bourbon.
<p>gopher is obscure and obsolete, &#8230;. maybe melomel.
<p>ssh is potato vodka.
<p>I leave the rest to your imagination.
<p>Note that the non-technician never encounters raw Internet, just like they never encounter pure alcohol. They wouldn&#8217;t know what it was if it stepped on their foot. Of course, chemists are quite familiar with pure alcohol, and network technicians and programmers are familiar with TCP, UDP, and IP.
<p>The familiar smell of alcohol, that you can detect to some degree in nearly everything containing alcohol &#8212; that&#8217;s DNS.</p><br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/decentralyze.wordpress.com/274/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/decentralyze.wordpress.com/274/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=decentralyze.com&#038;blog=5209539&#038;post=274&#038;subd=decentralyze&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
	</item>
<item rdf:about="http://decentralyze.com/2014/02/27/nsa-certified/">
	<title>NSA Certified</title>
	<link>http://decentralyze.com/2014/02/27/nsa-certified/</link>
	<dc:date>2014-02-27T14:53:22Z</dc:date>
	<dc:creator><![CDATA[sandhawke]]></dc:creator>
			<dc:subject><![CDATA[Uncategorized]]></dc:subject>
	<description><![CDATA[The world of computing has a huge problem with surveillance. Whether you blame the governments doing it or the whistleblowers revealing it, the fact is that consumer adoption and satisfaction is being inhibited by an entirely-justified lack of trust in the systems. Here&#8217;s how the NSA can fix that, increase the safety of Americans, and, [&#8230;]<img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=decentralyze.com&#038;blog=5209539&#038;post=264&#038;subd=decentralyze&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
	<content:encoded><![CDATA[<p>The world of computing has a huge problem with surveillance.   Whether you blame the governments doing it or the whistleblowers revealing it, the fact is that consumer adoption and satisfaction is being inhibited by an entirely-justified lack of trust in the systems.</p>
<p>Here&#8217;s how the NSA can fix that, increase the safety of Americans, and, I suspect,  redeem itself in the eyes of much of the country. It&#8217;s a way to act with honor and integrity, without betraying citizens, businesses, or employees. The NSA can keep doing all the things it feel it must to keep America safe (until/unless congress or the administration changes those rules) and by doing this additional thing it would be helping protect us all from the increasing dangers of cyber attacks. And it&#8217;s pretty easy.</p>
<p>The proposal is this: establish a voluntary certification system, where vendors can submit products and services for confidential NSA review. In concluding its review, the NSA would enumerate for the public all known security vulnerabilities of the item. It would be under no obligation to discover vulnerabilities. Rather, it would simply need to disclose to consumers all the vulnerabilities of which it happens know, at that time and on an ongoing basis, going forward.</p>
<p>Vendors could be charged a reasonable fee for this service, perhaps on the order 1% gross revenue for that product.</p>
<p>Crucially, the NSA would accept civil liability for any accidental misleading of consumers in its review statements. Even more important: the NSA chain of command from the top down to the people doing the review would accept criminal liability for any intentionally misleading statements, including omissions. I am not a lawyer, but I think this could be done easily by having the statements include sworn affidavits stating both their belief in these statements and their due diligence in searching across the NSA and related entities. I&#8217;m sure there are other options too.</p>
<p>If congress wants to get involved, I think it might be time to pass an anti zero day law, supporting NSA certification. Specifically, I&#8217;d say that anyone who knows of a security vulnerability in an NSA certified product must report it immediately to the NSA or the vendor (which must tell each other). 90 days after reporting it, the person who reported it would be free to tell anyone / everyone, with full whistleblower protection. Maybe this could just be done by the product TOS.</p>
<p>NSA certified products could still include backdoors and weaknesses of all sorts, but their existence would no longer be secret. In particular, if there&#8217;s an NSA back door, a cryptographic hole for which they believe they have the only key, they would have to disclose that.</p>
<p>That&#8217;s it. Dear NSA, can you do this please?</p>
<p>For the rest of you, if you work at the kind of company the Snowden documents reveal to have been compromised, the companies who somehow handle user data, would you support this?   Would your company participate in the program, regaining user trust?</p><br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/decentralyze.wordpress.com/264/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/decentralyze.wordpress.com/264/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=decentralyze.com&#038;blog=5209539&#038;post=264&#038;subd=decentralyze&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
	</item>
<item rdf:about="http://decentralyze.com/2012/04/06/fix-303-with-client-side-redirects/">
	<title>Fix 303 with client-side redirects</title>
	<link>http://decentralyze.com/2012/04/06/fix-303-with-client-side-redirects/</link>
	<dc:date>2012-04-06T20:12:27Z</dc:date>
	<dc:creator><![CDATA[sandhawke]]></dc:creator>
			<dc:subject><![CDATA[Uncategorized]]></dc:subject>
	<description><![CDATA[I am trying to stay far away from the current TAG discussions of httpRange-14 (now just HR14). I did my time, years ago. I came up with the best solution to date: use &#8220;303 See Other&#8221;. It&#8217;s not pretty, but so far it is the best we&#8217;ve got. I gather now the can of worms [&#8230;]<img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=decentralyze.com&#038;blog=5209539&#038;post=239&#038;subd=decentralyze&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
	<content:encoded><![CDATA[<p> I am trying to stay far away from the current TAG discussions of httpRange-14 (now just HR14).  I did my time, years ago.  I came up with the best solution to date: <a href="http://www.w3.org/wiki/index.php?title=SlashRedirection&amp;oldid=29834">use &#8220;303 See Other&#8221;</a>.  It&#8217;s not pretty, but so far it is the best we&#8217;ve got.</p>
<p>I gather now the can of worms is open again.  I&#8217;m not really hungry for worms,  but <a href="http://tw.rpi.edu/web/person/JohnErickson">someone</a> mentioned that the reason it&#8217;s open again is that use of 303 is just too inefficient.  And if that&#8217;s the only problem, I think I know the answer.</p>
<p style="margin:2em;font-weight:bold;">If a site is doing a lot of redirects, in a consistent pattern, it should publish its rewrite rules, so the clients can do them locally.</p>
<p>Here&#8217;s a strawman proposal:</p>
<div style="margin:1em;padding:1em;border:1px solid gray;">
<p>We define an <a href="http://tools.ietf.org/html/rfc5785">RFC 5785 well-known URI pattern</a>: <tt>.well-known/rewrite-rules</tt>.  At this location, on each host, the host can publish some of its rewrite and redirection rules.  The syntax is a tiny subset of the Apache RewriteRule syntax.   For example:</p>
<pre># We moved /team to /staff
RewriteRule /team/(.*) /staff/$1 301

# All the /id/ pages get 303'd to the doc pages
RewriteRule (.*)/id/(.*) $1/doc/$2 303
</pre>
<p>The syntax here is: comments start with a slash; non-comments have four fields, separated by whitespace.  The first field is the word &#8220;RewriteRule&#8221;.  The second is a regular expression.  The third is a string with back-references into the regular expression.  The fourth is a numeric redirect code.  Any line not matching this syntax, or otherwise not understood by the client, is to be ignored.</p>
<p>Clients that do not implement this specification will function unchanged, not looking at this file.  Clients that do implement this specification keep track of how many times they get an HTTP redirect from a given host.  If they get three or more redirects during one small period of time (such as a minute, or one run of the client if the client is short-lived), they perform a GET on /.well-known/rewrite-rules.</p>
<p>If the GET succeeds, the result should be cached using normal HTTP caching rules.   If the result is not cached, this protocol is less efficient than server-side redirects.  If the result is cached too long, clients may see incorrect data, so clients <b>must not</b> cache the result for longer than permitted by HTTP caching rules.  (Maybe we make an exception for simple-minded clients and say they MAY ignore cache control information and just cache the document for up to 60 seconds.)</p>
<p>If a client has a non-stale set of rewrite-rules from a given host, it should attempt to perform those rewrite rules client-side.  For any GET, PUT, etc, it should match the URL (after the scheme name and colon) against the regular expression; if the match succeeds, it should perform the match-substitution into the destination string and use that for the operation, as if it had gotten a redirect (with the given redirect code).</p>
</div>
<p>As an example deployment, consider DBPedia.   Everything which is the primary subject of a Wikipedia entry has a URL has the form <tt><a href="http://dbpedia.org/resource/" rel="nofollow">http://dbpedia.org/resource/</a><i>page_title</i></tt>.   When the client does a GET on that URL, it receives a 303 See Other redirect to either <tt><a href="http://dbpedia.org/data/" rel="nofollow">http://dbpedia.org/data/</a><i>page_title</i></tt> or <tt><a href="http://dbpedia.org/page/" rel="nofollow">http://dbpedia.org/page/</a><i>page_title</i></tt>, depending on the requested content type.</p>
<p>So, with this proposal, DBPedia would publish, at <tt><a href="http://dbpedia.org/.well-known/rewrite-rules" rel="nofollow">http://dbpedia.org/.well-known/rewrite-rules</a></tt> this content:</p>
<pre style="margin:1em;padding:1em;border:1px solid gray;">
RewriteRule /resource/(.*) /data/$1 303
</pre>
<p>This would allow clients to rewrite their /resource/ URLs, fetch the /data/ pages directly, and never going through the 303 redirect dance again.</p>
<p>The content-negotiation issue could be handle by traditional means at the /page/* address.  When the requested media type is not a data format, the response could use a Content-Location header, or a 307 Temporary Redirect.   The redirect is much less painful here; this is a rare operation compared to the number of operations required when a Semantic Web client fetches all the data about a set of subjects</p>
<hr />
<p>My biggest worry about this proposal is that RewriteRules are error prone, and if these files get out of date, or the client implementation is buggy, the results would be very hard to debug.  I think this could be largely addressed by Web servers generating this resource at runtime, serializing the appropriate parts of the internal data structures they use for rewriting.</p>
<p>This could be useful for the HTML Web, too.   I don&#8217;t know how common redirects are in normal Web browsing or Web crawling.   It&#8217;s possible the browser vendors and search engines would appreciate this.  Or they might think it&#8217;s just Semantic Web wackiness.</p>
<p>So, that&#8217;s it.  No more performance hit from 303 See Other.  Now, can we close up this can of worms?</p>
<p><b>ETA:</b> dbpedia example.   Also clarified the implications for the HTML Web.</p><br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/decentralyze.wordpress.com/239/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/decentralyze.wordpress.com/239/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=decentralyze.com&#038;blog=5209539&#038;post=239&#038;subd=decentralyze&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
	</item>
<item rdf:about="http://decentralyze.com/2011/04/14/rdf-steps-carefully-forward/">
	<title>RDF Steps Carefully Forward</title>
	<link>http://decentralyze.com/2011/04/14/rdf-steps-carefully-forward/</link>
	<dc:date>2011-04-15T00:53:45Z</dc:date>
	<dc:creator><![CDATA[sandhawke]]></dc:creator>
			<dc:subject><![CDATA[Uncategorized]]></dc:subject>
	<description><![CDATA[18 months ago, when Ivan Herman and I began to plan a new RDF Working Group, I posted my RDF 2 Wishlist. Some people complained that the Semantic Web was not ready for anything different; it was still getting used to RDF 1. I clarified that &#8220;RDF 2&#8243; would be backward compatible and not break [&#8230;]<img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=decentralyze.com&#038;blog=5209539&#038;post=234&#038;subd=decentralyze&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
	<content:encoded><![CDATA[<p>18 months ago, when Ivan Herman and I began to plan a new RDF Working Group, I posted my <a href="http://decentralyze.com/2009/10/30/rdf-2-wishlist/">RDF 2 Wishlist</a>.  Some people complained that the Semantic Web was not ready for anything different; it was still getting used to RDF 1.  I clarified that &#8220;RDF 2&#8243; would be backward compatible and not break existing system, just like &#8220;HTML 5&#8243; isn&#8217;t breaking the existing Web. Still, some people prefered the term &#8220;RDF 1.1&#8243;.</p>
<p>The group just concluded its <a href="http://www.w3.org/2011/rdf-wg/wiki/F2F1">first face-to-face meeting</a>, and I think it&#8217;s now clear we&#8217;re just doing maintenance. If we were to do version numbering, it might be called &#8220;RDF 1.0.1&#8243;. This might just be &#8220;RDF Second Edition&#8221;.  Basically, the changes will be editorial clarifications and bug fixes.</p>
<p>The adventurer in me is disappointed.  It&#8217;s a bit like opening your birthday present to find nice warm socks, instead of the jet pack you were hoping for.</p>
<p>Of course, this was mostly clear from the <a href="http://www.w3.org/2010/06/rdf-work-items/table">workshop poll</a> and <a href="http://www.w3.org/2011/01/rdf-wg-charter">the charter</a>, but still, I had my hopes.</p>
<p>The most dramatic change the group is likely to make: advise people to stop using xs:string in RDF.  Pretty exciting.  And, despite unanimous support from the 14 people who <a href="http://www.w3.org/2011/rdf-wg/meeting/2011-04-13#line0468">expressed an opinion</a> in the meeting, there has now been some strong pushback from people not at the meeting.  So I think that&#8217;s a pretty good measure of the size change we can make. </p>
<p>As far as new stuff&#8230;.   we&#8217;ll probably come up with some terminology for talking about graphs, and maybe even a syntax which allows people to express information about graphs and subgraphs.   But one could easily view that as just properly providing the functionality that RDF reification was supposed to provide.   So, again, it&#8217;s just a (rather complicated) bug fix.   And yes, making Turtle a REC, but it&#8217;s already a de facto standard, so (again) not a big deal.</p>
<p>The group also <a href="http://www.w3.org/2011/rdf-wg/meeting/2011-04-13#resolution_4">decided</a>, with a bit of disappointment for some, not to actively push for a JSON serialization that appeals to non-RDF-folks.   This was something I was interested in (cf <a href="http://decentralyze.com/2010/06/04/from-json-to-rdf-in-six-easy-steps-with-jron/">JRON</a>) but I agree there&#8217;s too much design work to do in a Working Group like this.  The door was left open for the group to take it up again, if the right proposal appears.</p>
<p>So, it&#8217;s all good.  I&#8217;m comfortable with all the decisions the group made in the past two days, and I&#8217;m really happy to be working with such a great bunch of people.   I also had a nice time visiting Amsterdam and taking long walks along the canals.  But, one of these days, I want my jet pack.</p><br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/decentralyze.wordpress.com/234/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/decentralyze.wordpress.com/234/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=decentralyze.com&#038;blog=5209539&#038;post=234&#038;subd=decentralyze&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
	</item>
<item rdf:about="http://decentralyze.com/2011/02/02/elevator-pitch-for-the-semantic-web/">
	<title>Elevator Pitch for the Semantic Web</title>
	<link>http://decentralyze.com/2011/02/02/elevator-pitch-for-the-semantic-web/</link>
	<dc:date>2011-02-02T15:03:40Z</dc:date>
	<dc:creator><![CDATA[sandhawke]]></dc:creator>
			<dc:subject><![CDATA[Uncategorized]]></dc:subject>
	<description><![CDATA[SemanticWeb.com invited people to make video elevator pitches for the Semantic Web, focused on the question &#8220;What is the Semantic Web?&#8221;. I decided to give it a go. I&#8217;d love to hear comments from folks who share my motivation, trying to solve this &#8216;every app is a walled garden&#8217; problem. In case you&#8217;re curious, here&#8217;s [&#8230;]<img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=decentralyze.com&#038;blog=5209539&#038;post=225&#038;subd=decentralyze&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
	<content:encoded><![CDATA[<p>SemanticWeb.com <a href="http://semanticweb.com/category/elevator-pitch">invited</a> people to make video elevator pitches for the Semantic Web, focused on the question &#8220;What is the Semantic Web?&#8221;.    I decided to give it a go.</p>
<span class='embed-youtube' style='text-align:center; display: block;'><iframe class='youtube-player' type='text/html' width='560' height='345' src='http://www.youtube.com/embed/29c5qss3hz0?version=3&#038;rel=1&#038;fs=1&#038;showsearch=0&#038;showinfo=1&#038;iv_load_policy=1&#038;wmode=transparent' frameborder='0'></iframe></span>
<p>I&#8217;d love to hear comments from folks who share my motivation, trying to solve this &#8216;every app is a walled garden&#8217; problem.</p>
<p>In case you&#8217;re curious, here&#8217;s the script I&#8217;d written down, which turned out to be wayyyy to long for the elevators in my building, and also too long for me to remember.</p>
<blockquote style="border:1px solid blue;margin:1em;padding:1em;">
<p>Eric Franzon of SemanticWeb.Com invited people to send in an elevator pitch for the Semantic Web.  Here&#8217;s mine, aimed at a non-technical audience.  I&#8217;m Sandro Hawke, and I work for W3C at MIT, but this is entirely my own view.</p>
<p>The problem I&#8217;m trying to solve comes from the fact that if you want to do something online with other people, your software has to be compatible with theirs.  In practice this usually means you all have to use the same software, and that&#8217;s a problem. If you want to share photos with a group, and you use facebook, they all have to use facebook.  If you use flickr, they all have to use flickr.</p>
<p>It&#8217;s like this for nearly every kind of software out there.</p>
<p>The exceptions show what&#8217;s possible if we solve this problem.  In a few cases, through years of hard work, people have been able to create standards which allow compatible software to be built.  We see this with email and we see this with the web.  Because of this, email and the Web are everywhere.  They permeate our lives and now it&#8217;s hard to imagine modern life without them.</p>
<p>In other areas, though, we&#8217;re stuck, because we don&#8217;t have these standards, and we&#8217;re not likely to get them any time soon.  So if you want to create, explore, play a game, or generally collaborate with a group of people on line, every person in the group has to use the same software you do.  That&#8217;s a pain, and it seriously limits how much we can use these systems.</p>
<p>I see the answer in the Semantic Web.  I believe the Semantic Web will provide the infrastructure to solve this problem.  It&#8217;s not ready yet, but when it is, programs will be able to use the Semantic Web to automatically merge data with other programs, making them all &#8212; automatically &#8212; compatible.</p>
</blockquote>
<p>If I were up to doing another take, I&#8217;d change the line about the Semantic Web not being much yet.   And maybe add a little more detail about how I see it working.  I suppose I&#8217;d go for this script:</p>
<blockquote style="border:1px solid green;margin:1em;padding:1em;">
<p>Okay, elevator pitch for the Semantic Web.</p>
<p>What is the Semantic Web?</p>
<p>Well, right now, it&#8217;s a set of technologies that are seeing some adoption and can be useful in their own right, but what I want it to become is the way everyone shares their data, the way all software works together.</p>
<p>This is important because every program we use locks us into its own little silo, its own walled garden</p>
<p>For example, imagine I want to share photos with you.  If I use facebook, you have to use facebook.  If I use flickr, you have to use flicker.  And if I want to share with a group, they all have to use the same system</p>
<p>That&#8217;s a problem, and I think it&#8217;s one the Semantic Web can solve with a mixture of standards, downloadable data mappings, and existing Web technologies.</p>
<p>I&#8217;m Sandro Hawke, and I work for W3C at MIT.  This has been entirely my own opinion.</p>
</blockquote>
<p>(If only I could change the video as easily as that text.  Alas, that&#8217;s part of the magic of movies.)</p>
<p>So, back to the subject at hand.  Who is with me on this?</p><br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/decentralyze.wordpress.com/225/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/decentralyze.wordpress.com/225/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=decentralyze.com&#038;blog=5209539&#038;post=225&#038;subd=decentralyze&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
	</item>
<item rdf:about="http://decentralyze.com/2011/01/28/can-we-use-lean-startup-methods-to-build-the-semantic-web/">
	<title>Can we use Lean Startup methods to build the Semantic Web?</title>
	<link>http://decentralyze.com/2011/01/28/can-we-use-lean-startup-methods-to-build-the-semantic-web/</link>
	<dc:date>2011-01-28T13:17:20Z</dc:date>
	<dc:creator><![CDATA[sandhawke]]></dc:creator>
			<dc:subject><![CDATA[Uncategorized]]></dc:subject>
	<description><![CDATA[I&#8217;m disappointed in the pace of development of the Semantic Web, and I&#8217;m optimistic that the Lean Startup ideas can help us move things along faster. I&#8217;ve been a fan of Eric Ries and the Lean Startup ideas for while, but last night I was lucky enough to get to see him speak, and to [&#8230;]<img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=decentralyze.com&#038;blog=5209539&#038;post=218&#038;subd=decentralyze&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
	<content:encoded><![CDATA[<p>I&#8217;m disappointed in the pace of development of the Semantic Web, and I&#8217;m optimistic that the Lean Startup ideas can help us move things along faster.</p>
<p>I&#8217;ve been a fan of <a href="http://www.startuplessonslearned.com/">Eric Ries</a> and the <a href="http://en.wikipedia.org/wiki/Lean_Startup">Lean Startup</a> ideas for while, but last night I was lucky enough to get to see him speak, and to chat with some other adherents.  There are a lot of ideas here, but the bit that jumps out at me today is this, loosely paraphrased:</p>
<blockquote><p>Reality distortion fields are bad.  Instead of using charisma, style, and emotions to motivate your colleagues to act on faith, motivate them with experimental evidence.</p></blockquote>
<p>I think we have scant evidence that the Semantic Web will work, and that most of us have been working on this as an act of faith.  We believe, without solid evidence, that it can work and will be a good thing when it does.  You could say we&#8217;re operating in an RDF (resource description framework) RDF (reality distortion field).</p>
<p>The Lean Startup methodology says that we should get out of that field as quickly as possible, doing the fastest experiments possible that will teach us what really works and does not work.  On faith we can do 5+ year projects, hoping to show something interesting.  Instead, we should be doing <span class='wp-smiley emoji emoji-heart' title='&lt;3'>&lt;3</span> month projects to test a hypothesis about how this is all going to be useful.</p>
<p>It&#8217;s a shame that most of us are funded in ways that don&#8217;t support or reward this at all.  It&#8217;s a shame the research funding agencies operate on such a glacial and massive scale; in many ways they seem geared more towards keeping people busy and employed than actually innovating and producing knowledge for the world.</p>
<p>Below are my notes taken during Eric&#8217;s talk.  I have not cleaned them up at all, so you can see just how badly my fingers spell &#8220;entrepreneur&#8221; when my brain has moved on to something else.  I believe slides and the talk itself are available on line; it&#8217;s a talk he often gives, so if you have the time, watch it instead of just skimming my notes.   (eg <a href="http://www.youtube.com/watch?v=zGXAVw3vF9A">this one at Stanford</a>.)  Someone else with much better formatting and spelling posted their <a href="https://docs2.google.com/a/markbao.com/document/d/1a5ENaOh5eefjh8FMykavvQ9Izn5JiUcIzvgbNgskgls/edit?hl=en&amp;ndplr=1&amp;pli=1#">notes from last night&#8217;s talk</a>.  You probably want to read them instead, and then come back here and share your insights with us.</p>
<hr />
<pre>
$$ Thu Jan 27 18:20:41 EST 2011 ((( EricReis

2 yrs ago at Hobies in palo alto, 6 people, first talking about this...

silicon valley is parochial, rarely getting out of the bublle.

#leanstartup

new conversation -- what is entrepreneurship.

strsaight from unhear of to overhypes, without people having learned about it.

put entreneurship on a more solid footing.

What is a startup?

     A startup is a human institution deseigned to delivera a new
     product or service under conditions of extreme uncertainty.

Nothing to do with size of company, sector of the economigy, or
industry.

ALL THE BORING STUFF, and how to get better at it.

    Startup = Experiment

Web 2.0 chart --- lots failed at 3 years.

they all failed for BAD reasons.

and how many really lived up to their potential....???!!!   SO FEW.

"If you do everything I did, you can fail like I did."

We need a giant industrial support group.

"Hi, I'm eric, and most of my startups failed."

It's all Taylor's fault.  :-)
father of scientific management.

1911.   birth of management
"In the past, the man was first.  In the future, the system will be first."

"Work should be done efficiently"
"Work should be divided into tasks"
"It's possible to organize craftsmen"
   Management by exception -- only have them report their exceptions.

  Now, decomposing work into tasks is 100 years old.

Everything in this room was constructed under the supervision of managers trained by Taylor and his disciples.

Shadow Beliefs:
   * We know what customers want   (reality distortion field)
   * We can accurately predict the future
          just dont believe the hockey stick spreadsheet
   * Andvancing the plan is progress
         eg keep everyone busy, write code, do your functional job!
	 -- if we're building something no one wants, is it progress!

           [[ NO -- real progress is LEARNING ]]


The Lean Revolution   (Lean Manufacturing)
    W E Demming,    Taiichi Ohno

it's not Tim Quality Money -- pick two

we can get all three by being customer focused.

Agile Development

Alas, Agile development comes out big IT departments.

works IF you know what the customer really needs.


Steve Blank.    
     Customer Development
     Agile (Product) Development

imvu story
      im networks -- join them all.

      he wrote this, in 6 months, to ship to customers.
      5 years before that.

      had to pivot to standalone network.

      GREAT code, but no one wanted it.

claim to have learn something -- about to get fired.  :-)

learning is a 4 letter word in management
     -- bad plan -- fired
     -- failure to execute -- fired

Ask yourself: IF my goal was to learn this, could I have done this
without writing the code?

YES --- just make the landing page!!!

As an entrepreneur, you NOT LONGER HAVE a FUNCTIONAL DISCINPINE.
   you do whatever you need to to get there

Entreprenursip is management

  + OUR GOAL is to create an institution, not just a product
  * traditona lamangement preactices fail.  (mba)
  * nee entrepeurial managemt -- working under extreme uncertainyu

The Pivot --- SUDDENLY overhyped.

YOU MUST be able to do this.    The successes can do this.
They can find the good ideas from the bad, inside the distortion field.

SPEED WINS.
   how many pivots you have left.

   if we can reduce the time betwwen pivts,
   we can increas the odds of our success.

BUILD -&gt; MEASURE -&gt; LEARN

startup=    turns ideas into code

IF YOU DIDNT BUILD ANYTHING, you cant pivot
IF YOU DIDNT TEST IT WITH CUSTOMERS, you cant pivot

MINIMIZE total time through the loop.  Cycle time dominates.

gnl mgmt is about efficiency, not cycle time.

GOING THROUGH THE LOOP -- thats how you you settle arguments between founders.

How much design -- a reasonable balance.

FIVE principals.

   -- entreps are everywhere
   
         anywhere we seek out uncertainty
	 which is everywhere, given uncertainty from IT rev.

   -- entrp is mgmt
   
   -- validated learning

   -- innovation accounting

        normally just compliance reporting

	but:  drive accountablity -- hold mgrs accountable
	GM = "std volume"  to compute how many cars each division
	is expected to sell.   allows gm to give bonuses.

	NOT good for entreps.

	"success theater"      (cumulative total registrations  Heh.)

	ACTIONABLE METRICS, per customer, NOT VANITY METRICS.

	facebook per-customer behaviors were exciting.  Customers were
	heavily engaged in voluntary exchange with company.  And very
	viral.
	
		NEED an accounting paradigm for entrps to prove
		they've done validated learning.

		so you never take credit for random stuff, but only
		take credit for what you derve it for.

   -- build measure learn


HOW do we know when to pivot?

    as if it were obvious when there's a failure.

    land of the living dead.   

    persevere straight into the ground.

    Right answer: (acocunting)
    	  pattern, like in science, 
	  when the experiments are no longer very productive.
	  If When we can't move the needle very much.

Vision, Strategy, or Product
	- what makes a great company?
	500 Auto companies before Ford!!!
	they didnt have the right process.

	Vision doesnt change.  it's about changing the world.
	Strategy is how to build a business around that.

	product dev == optimization

	pivot is changing strategy, not vision.

	THERE is not testing The Vision.  We're NOT trying to
	elimintate vision.

What should we measure?  How do products grow?

     Entrp. accounting

Are we creating value?

What's in the MVP?

       - should a feature be in or out?  Out.

Can we go faster?

NEW BOOK.

================================================================

lean.st/LeanStartupBos

startuplessonslearned

$$ Thu Jan 27 19:53:19 EST 2011 

How do you keep engineers having faith in the process given MVP.

How to manage engineers under uncertainty?

    1.   Keep them calm.   Heads down, cranking out code.

    [reeks of frd taylor.]

    2.   Enlist all functions in process of discovering if on right track.
    	 
	 ABANDON Reality Distorion Field.

	 People will be way more creative if they know what's going on.

	 The truth will set you free.

================

Q: Newbie: use of the term "movement"

Eric: I dont want other people to to be doing this.

Eric: I used to be a coder.   What do I do now???

there IS something going on worldwide.   this is science, not religion.

lets be careful.

  if it works for entrepreneur, it's part of Lean Startup.

We're learning a lot over the past two years.

The movement is not me -- the movement is you guys testing these ideas, in changing the world.

this is NOT about proprietary advantage.

Eric used to think the right way to change the world was get the VCs to
evangelize.   Sooooo dumb of me.

vc:  "im not that interested in improving the world, just my profolio"

But now, we should do science.  If we all do it, we'll all improve the
world and live in a better world.

Q: how to test ideas people are not searching for.

eg dropbox -- no one knows they want it.

If customers dont know they have the problem and know the name of it,
you have to find a new way.

at imvu, people didnt know it "outbound is the new inbound" we did ad
compaigns, $5/day, buying keywords of every adjacent product, "*" +
chat.  And drove people to our landing page.  We wanted to learning
the differeences in convertion between these channels.

dropbox's MVP was a video, aimed at DIGG users.  Drove people to
waiting list, beta users.
   justin tv  sl conf  video

================

MBAs.

how much do MBAs need to re-learn?

er: I'm doing entreprenur in residence at harvard business school.

but why waste time with MBAs?

"what do people say about us when we're not in the room?"

MBAs have one big advantage:  very process and discipline oriented.

if you dont have some failures, yo dont learn.

you need to be able to tell what change to the product/market caused
the numbers to change.  IT HAS TO BE A VALID SCIENTIFIC EXPERIMENT.

================

Some new stuff:

the right things to measure are clear and consistent across all startups.

 1.  value test -- do you know it creates values

 2.  working enging of growth.

two feedback loops:
   -- eg loop in cylendar engine, and driver-and-surroundings
   write down how to get to work == taylor plan

three engines of growth

  -- paid.   you make a $1 per customer, and they cost $0.50 to buy
      (have to be able to buy customers)

  -- viral.   as a necessary consequence of customer using it, they
    get their friends to use it.  "someone has tagged you in a photo"
    you HAVE to click on that.   even some fashion busineses.  
    they "grow themselves" bye xploiting bug in human naturo

   -- sticky, engagment.  addictive, network effects, lockin, ebay,
      wotw, compounding interest.  so small viral can compound it, if
      sticky enough.

================

easily replicated product, get to market first?

fear: someone will steal my idea.

So: take your second best idea, and try to get someone to steal it.
TRY to get them to steal your idea.    PEOPLE dont steal ideas.

IT SEEMS NUTS, BUT ITS TRUE.

You need a good idea.

Threat by big company to clone you -- they poached a co-founder --
came out with exacty product two years delayed.  $100m failure for
them.

FIRST mover advantage is very rare in reality.     (!!!)

================

one person from each company.   how to get whole company to buy in?

people often say: that's a really great idea for someone else to do.

the issue is the WORK is a system.  Your company is a perfect robust
system, stable.  very very hard to change -- must be planned
carefully.

try to find one area where there is painful uncertainty, and say there
is a community of people trying science to solve this problem.

every nods at maximize speed through the loop.

BUT if you do that, you will MAKE PEOPLE FEEL INEFFICNENT.  People
will be interrrupted to do things "not their job".  There will be a
team powwow where people say they hate it making them less efficient.
NEED people bought into theory -- understanfing the value of VALIDATED
LEARNING.  Only do this where you have authority, maybe just yourself.

================

How does Lean Startup affect managment &amp; sales force.  Lab Equipment
company. --- "sales people are whiners" Really, customers were giving
great feedback, and non of that was making it back to management.

4 steps to ephinary -- steve blanks book -- perfect on enterprise sales.

YOU CANNOT DELEGATE customer development.  founders and senior mgmt
have to be in the room with the customers, at least some of the time.

Salespeople arent supposed to be good listeners.

Mgrs should DO THE SALES THEMSELVES.  THe goal is not to make money,
it's to get validated learning....

ONCE we understand how to do the sales, THEN give it to the salesfolk,
as per Steve Blank.

if using sales force, you are doing Paid Engine Of Growth.

================

Q: I have a product that people havnts paid for.  mainstream product.
personal keepsake.  needs to look really good.  hard to measure.
style counts.  what's mvp in that scenario.

why cant you do a landing page.

  keepsake book.

goal of MVP --- least amount of work to learn what needs to be
learned.  such as whether customers will pay.   eg get pre-orders.

you can always test demand through fake landing pages.

"Concierge" from food-on-the-table.  did it all by hand, until they
figured out what folks REALLY wanted.

PEOPLE will not truthfully answer what they would do.  "Would you buy
this" turns out to be TERRIBLE DATA.

**** YOU ALWAYS CAN TEST


requires VERY difficult risking rejections.     CUSTOMER SERVICE HURTS!!!

* Eric *HATEs* customer feedback *

does he really want to know what you thought about today's talk?  No!!!

================

When collective feedback, its NOT ABOUT YOU, it's about the person
giving it to you.

"product is okay" means "product sucks but I'm polite"

================


very very hard.      but rewards are emense.

think about all the people utterly wasting their time.

let's redeem them;  make it happen!.

$$ Thu Jan 27 20:35:27 EST 2011 )))

</pre><br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/decentralyze.wordpress.com/218/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/decentralyze.wordpress.com/218/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=decentralyze.com&#038;blog=5209539&#038;post=218&#038;subd=decentralyze&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
	</item>
<item rdf:about="http://decentralyze.com/2010/11/10/simplified-rdf/">
	<title>Simplified RDF</title>
	<link>http://decentralyze.com/2010/11/10/simplified-rdf/</link>
	<dc:date>2010-11-10T18:24:46Z</dc:date>
	<dc:creator><![CDATA[sandhawke]]></dc:creator>
			<dc:subject><![CDATA[Web Architecture]]></dc:subject>
	<description><![CDATA[I propose that we designate a certain subset of the RDF model as &#8220;Simplified RDF&#8221; and standardize a method of encoding full RDF in Simplified RDF. The subset I have in mind is exactly the subset used by Facebook&#8217;s Open Graph Protocol (OGP), and my proposed encoding technique is relatively straightforward. I&#8217;ve been mulling over [&#8230;]<img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=decentralyze.com&#038;blog=5209539&#038;post=199&#038;subd=decentralyze&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
	<content:encoded><![CDATA[<p><img src="http://www.w3.org/2010/06/parallel_properties/simplified-rdf-150.png" style="float:right;" /></p>
<p>I propose that we designate a certain subset of the RDF model as &#8220;Simplified RDF&#8221; and standardize a method of encoding full RDF in Simplified RDF.  The subset I have in mind is exactly the subset used by <a href="http://developers.facebook.com/docs/opengraph">Facebook&#8217;s Open Graph Protocol (OGP)</a>, and my proposed encoding technique is relatively straightforward.</p>
<p>I&#8217;ve been mulling over this approach for a few months, and I&#8217;m fairly confident it will work, but I don&#8217;t claim to have all the details perfect yet.  Comments and discussion are quite welcome, on this posting or on the semantic-web@w3.org mailing list.  This discussion, I&#8217;m afraid, is going to be heavily steeped in RDF tech; simplified RDF will be useful for people who don&#8217;t know all the details of RDF, but this discussion probably wont be.</p>
<p>My motivation comes from several directions, including OGP.   With OGP, Facebook has motivated <a href="http://trends.builtwith.com/docinfo/Open-Graph-Protocol">a huge number</a> of Web sites to add RDFa markup to their pages.  But the RDF they&#8217;ve added is quite constrained, and is not practically interoperable with the rest of the Semantic Web, because it uses simplified RDF.  One could argue that Facebook made a mistake here, that they should be requiring full &#8220;normal&#8221; RDF, but my feeling is their engineering decisions were correct, that this extreme degree of simplification is necessary to get any reasonable uptake.</p>
<p>I also think simplified RDF will play well with JSON developers.  <a href="http://decentralyze.com/2010/06/04/from-json-to-rdf-in-six-easy-steps-with-jron/">JRON</a> is pretty simple, but simplified RDF would allow it to be simpler still. Or, rather, it would mean folks using JRON could limit themselves to an even smaller number of &#8220;easy steps&#8221; (about three, depending on how open design issues are resolved).</p>
<h1>Cutting Out All The Confusing Stuff</h1>
<p>Simplified RDF makes the following radical restrictions to the RDF model and to deployment practice:</p>
<ol>
<li>
<p>The subject URIs are always web page addresses.   The content-negotiation hack for &#8220;hash&#8221; URIs and the 303-see-other hack for &#8220;slash&#8221; URIs are both avoided.  </p>
<p>(Open issue: are html fragment URIs okay?  Not in OGP, but I think it will be okay and useful.)</p>
</li>
<li>
<p>The values of the properties (the &#8220;object&#8221; components of the RDF triples) are always strings.  No datatype information is provided in the data, and object references are done by just putting the object URI into the string, instead of making it a normal URI-label node.</p>
<p>(Open issue: what about language tags?  I think RDFa will provide this for free in OGP, if the html has a language tag.)</p>
<p>(Open issue: what about multi-valued (repeated) properties?   Are they just repeated, or are the multiple values packing into the string, perhaps?   OGP has multiple administrators listed as &#8220;USER_ID1,USER_ID2&#8243;.  JSON lists are another factor here.)</p>
</li>
</ol>
<p>
At first inspection this reduction appears to remove so much from RDF as to make it essentally useless.  Our <a href="http://www.imdb.com/title/tt0129167/">beloved RDF</a> has been blown into a hundred pieces and scattered to the wind.  It turns out, however,  it still has enough enough magic to reassemble itself (with a little help from its friends, http and rdfs).</p>
<p>This image may give a feeling for the relationship of full RDF and simplified RDF:</p>
<p><img style="border:2px solid black;" src="http://www.w3.org/2010/06/parallel_properties/ver5-700" /></p>
<h1>Reassembling Full RDF</h1>
<p>The basic idea is that given some metadata (mostly: the schema), we can construct a new set of triples in full RDF which convey what the simplified RDF intended.  The new set will be distinguished by using different predicates, and the predicates are related by schema information available by dereferencing the predicate URI.   The specific relations used, and other schema information, allows us to unambiguously perform the conversion.</p>
<p>For example, og:title is intended to convey the same basic notion as rdfs:label.   They are not the same property, though, because og:title is applied to a page about the thing which is being labeled, rather than the thing itself.  So rather than saying they are related by owl:equivalentProperty, we say:</p>
<pre>
  og:title srdf:twin rdfs:label.
</pre>
<p>This ties to them together, saying they are &#8220;parallel&#8221; or &#8220;convertable&#8221;, and  allowing us to use other information in the schema(s) for og:title and rdfs:label to enable conversion.</p>
<p>The conversion goes something like this:</p>
<ol>
<li>
<p>The subject URLs should usually be taken as pages whose foaf:primaryTopic is the real subject.  (<a href="http://vocab.sindice.com/xfn">Expressing the XFN microformat in RDF</a> provides a gentle introduction to this kind of idea.)  That real subject can be identified with a blank node or with a constructed URI using a &#8220;thing described by&#8221; service such as <a href="http://t-d-b.org/">t-d-b.org</a>.   A little more work is needed on how to make such services efficient, but I think the concept is proven.   I&#8217;d expect facebook to want to run such a service.</p>
<p>In some cases, the subject URL really does identify the intended subject, such as when the triple is giving the license information for the web page itself.  These cases can be distinguished in the schema by indicating the simplified RDF property is an IndirectProperty or MetadataProperty.</p>
</li>
<li>
<p>The object (value) can be reconstructed by looking at the range of the full-RDF twin.  For example, given that something has an og:latitude of &#8220;37.416343&#8243;, og:latitude and example:latitude are twins, and example:latitude has a range of xs:decimal, we can conclude the thing has an example:latitude of &#8220;37.416343&#8243;^^xs:decimal.
</p>
<p>Similarly, the Simplified RDF technique of puting URIs in strings for the object can be undone by know the twin is an ObjectProperty, or has some non-Literal range.</p>
<p>I believe language tagging could also be wrapped into the predicate (like comment_fr, comment_en, comment_jp, etc) if that kind of thing turns out to be necessary, using an OWL 2 range restrictions on the rdf:langRange facet.</p>
</li>
<h1>Next Steps</h1>
<p>So, that&#8217;s a rough sketch, and I need to wrap this up.  If you&#8217;re at ISWC, I&#8217;ll be giving a 2 minute lightning talk about this at lunch later today.  But if you&#8217;ve ready this far, the talk wont say say anything you don&#8217;t already know.</p>
<p>FWIW, I believe this is implementable in RIF Core, which would mean data consumers which do RIF Core processing could get this functionality automatically.   But since we don&#8217;t have any data consumer libraries which do that yet, it&#8217;s probably easiest to implement this with normal code for now.</p>
<p>I think this is a fairly urgent topic because of the adoption curve (and energy) on OGP, and because it might possibly inform the design of a standand JSON serialization for RDF, which I&#8217;m expecting W3C to work on very soon.</p><br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/decentralyze.wordpress.com/199/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/decentralyze.wordpress.com/199/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=decentralyze.com&#038;blog=5209539&#038;post=199&#038;subd=decentralyze&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
	</item>
<item rdf:about="http://decentralyze.com/2010/10/17/why-decentralize-facebook/">
	<title>Why Decentralize Facebook</title>
	<link>http://decentralyze.com/2010/10/17/why-decentralize-facebook/</link>
	<dc:date>2010-10-18T02:36:19Z</dc:date>
	<dc:creator><![CDATA[sandhawke]]></dc:creator>
			<dc:subject><![CDATA[Explaining WHY]]></dc:subject>
	<description><![CDATA[Last week, I saw The Social Network. I enjoyed it as a movie (like everyone else, it seems), but it also made me unhappy, because it reminded me what a misdirected force Facebook is in danger of becoming (or already is). As most people realize, Facebook centralizes too much power; unless it changes course, this [&#8230;]<img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=decentralyze.com&#038;blog=5209539&#038;post=191&#038;subd=decentralyze&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
	<content:encoded><![CDATA[<p>Last week, I saw <a href="http://en.wikipedia.org/wiki/The_Social_Network">The Social Network</a>.  I enjoyed it as a movie (like everyone else, it seems), but it also made me unhappy, because it reminded me what a misdirected force Facebook is in danger of becoming (or already is).   As most people realize, Facebook centralizes too much power; unless it changes course, this will be its undoing.  I hear cheers from some in the audience, but it&#8217;s the users who will suffer along the way.</p>
<p>I&#8217;ll start with a quote from writer Jessi Hempel, reviewing the movie from the perspective of someone who claims to knows Mark Zuckerberg personally:</p>
<blockquote><p>The real-life Zuckerberg was maniacally focused on building a web site that could potentially connect everyone on the planet. As early as 2005, he told me, &#8220;It&#8217;s a social utility and what makes it work will be ubiquity.&#8221;  [<a href="http://tech.fortune.cnn.com/2010/09/24/the-incredibly-untrue-adventures-of-mark-zuckerberg/">Fortune</a>]</p></blockquote>
<p>To a first approximation, that&#8217;s the same as my goal of many years: building a system to connect everyone on the planet.   But I don&#8217;t think it can possibly work if it&#8217;s a centralized system, with one organization controlling it to any substantial degree.  Facebook may have 500m users, but it&#8217;s not going to get to 5b users until it&#8217;s a truly decentralized, open platform like the Internet and the Web.</p>
<p>More importantly, it wont get to the point where we can, in good conscience, require or assume our fellow travellers on this planet use it, as we generally can with email, the Web, and the telephone network.  Some communities (eg schools) are requiring people use Facebook, and I&#8217;m not the only one who finds that scary and offensive.</p>
<p>Of course, Mark Zuckerberg is a smart guy.  Wired <a href="http://www.wired.com/epicenter/2010/05/zuckerberg-interview/">reports</a> him saying:</p>
<blockquote><p>I donât think the world is going to evolve in a way that there is just one big site. I think it is going to be that there are going to be a lot of really great services and we are helping to get it there. I think people are always a little skeptical when something grows to something big, but I think you need to look at what it is doing.</p></blockquote>
<p>And he&#8217;s not the only one.  When Google made their first attempt to replace email with Wave, they knew it would have to be decentralized, with them just being one of many equal hubs.</p>
<p>When I was younger, I loved decentralization because it got us out from under the control of authorities I didn&#8217;t respect.   I think that particular fire may have gone out for me, but I still see the need: if we&#8217;re going to build the kind of universally shared apps the planet needs (and Facebook dreams of), they have to be built on an open, decentralized platform.  Otherwise there is no way they&#8217;ll be able to reach even as far as the Web does now.</p>
<p>In a perfect world, I would now sketch out how to build a decentralized version of Facebook.  But I seem to have too much else to do right now.   So, at very least, that will have to wait for another day.</p>
<p>I can say that it would be built using linked data.  I came to linked data as a good way to build global scale shared/social apps, and I still think it&#8217;s the best approach.    There are some more details to work out, though.   Sadly, I haven&#8217;t come across any promising funding or business models to support that work.  Decentralized businesses don&#8217;t have market lock-in and $100m+ exits.</p>
<p>It may be Diaspora will do it.  I&#8217;m confident before they get very far they&#8217;ll have to re-invent or adopt RDF, and eventually the rest of the SemWeb stack.   I haven&#8217;t yet looked at their design.   It may also be Facebook itself will do it.    (The fact that Zuckerberg still controls the company, instead of investors, makes it somewhat more likely.)</p>
<p>I suppose, after saying all this, it&#8217;s on me to show how SemWeb technology actually helps.  Or is that obvious?</p>
<p><strong>Edited to Add:</strong> I got a private question about my claim that facebook can&#8217;t scale to 5b users, so let me expand on that a little.   I see two things stopping them:</p>
<ol>
<li>A branding, and look-and-feel problem.  Some people hate facebook, without even knowing why.  Some people find the site awkward and difficult.   This is going to be true of any site; I think the only way around this is to provide for multiple brands with multiple user interfaces.  In theory, facebook could do this themselves, much like car manufacturers have multiple &#8220;makes&#8221;: Cadillac and Chevy are just product lines from the same company, but people&#8217;s feelings are directly mostly at the product line.</li>
<li>A trust issue.  Some communities (including some governments) will, quite rightly, refuse to trust facebook to operate in the way they want. It&#8217;s possible facebook can find a way to address this concern as well, with special contracts, and even special data centers.  For instance, it wouldn&#8217;t be impossible for them to build a facebook cluster for CIA internal use, in a CIA facility, subject to full CIA controls, but still somewhat interoperable with facebook at large.   But I wouldn&#8217;t hold my breath waiting for that to happen, either.   I&#8217;m not sure how it will play out when teachers ask their students, and their parents, to use facebook. </li>
</ol>
<p>So, that&#8217;s not an ironclad argument that they can&#8217;t grow to 5b, but that&#8217;s what I&#8217;m thinking.</p><br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/decentralyze.wordpress.com/191/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/decentralyze.wordpress.com/191/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=decentralyze.com&#038;blog=5209539&#038;post=191&#038;subd=decentralyze&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
	</item>
<item rdf:about="http://decentralyze.com/2010/06/08/explaining-linked-data/">
	<title>Explaining Linked Data</title>
	<link>http://decentralyze.com/2010/06/08/explaining-linked-data/</link>
	<dc:date>2010-06-08T20:16:24Z</dc:date>
	<dc:creator><![CDATA[sandhawke]]></dc:creator>
			<dc:subject><![CDATA[Uncategorized]]></dc:subject>
	<description><![CDATA[I&#8217;m going to try explaining linked data again, tonight, at the Cambridge Semantic Web Gathering. I will attempt to keep it simple, while still covering the important details. We&#8217;ll see how it goes. My slides, for people who want a peek ahead of time, are here. ETA: Thanks to Marco Neumann, there&#8217;s a video of [&#8230;]<img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=decentralyze.com&#038;blog=5209539&#038;post=178&#038;subd=decentralyze&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
	<content:encoded><![CDATA[<p>I&#8217;m going to try explaining linked data again, tonight, at the <a href="http://www.meetup.com/The-Cambridge-Semantic-Web-Meetup-Group/">Cambridge Semantic Web Gathering</a>.   I will attempt to keep it simple, while still covering the important details.   We&#8217;ll see how it goes.</p>
<p>My slides, for people who want a peek ahead of time, are <a href="http://www.w3.org/2010/Talks/0608-linked-data/presentation.pdf">here</a>.</p>
<p>
<strong>ETA:</strong> Thanks to Marco Neumann, there&#8217;s <a href="http://vimeo.com/12444260">a video</a> of my talk.  I&#8217;m pretty happy with it.   Also, my <a href="http://www.w3.org/2010/Talks/0608-linked-data/where-linked-data-fits.png">Venn Diagram slide</a>, which you&#8217;re welcome to re-use with credit.</p><br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/decentralyze.wordpress.com/178/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/decentralyze.wordpress.com/178/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=decentralyze.com&#038;blog=5209539&#038;post=178&#038;subd=decentralyze&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
	</item>
<item rdf:about="http://decentralyze.com/2010/06/04/from-json-to-rdf-in-six-easy-steps-with-jron/">
	<title>From JSON to RDF in Six Easy Steps with JRON</title>
	<link>http://decentralyze.com/2010/06/04/from-json-to-rdf-in-six-easy-steps-with-jron/</link>
	<dc:date>2010-06-04T04:24:34Z</dc:date>
	<dc:creator><![CDATA[sandhawke]]></dc:creator>
			<dc:subject><![CDATA[Uncategorized]]></dc:subject>
	<description><![CDATA[Sometimes, if you stand in the right place and squint, JSON and RDF line up perfectly. Each time I notice this, I badly want a way to make them line up all the time, no matter where you&#8217;re standing. And, actually, I think it&#8217;s pretty easy. I&#8217;ve seen a few proposals for how to work [&#8230;]<img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=decentralyze.com&#038;blog=5209539&#038;post=174&#038;subd=decentralyze&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
	<content:encoded><![CDATA[<p>Sometimes, if you stand in the right place and squint, JSON and RDF line up perfectly.  Each time I notice this, I badly want a way to make them line up all the time, no matter where you&#8217;re standing.  And, actually, I think it&#8217;s pretty easy. </p>
<p>I&#8217;ve seen a few proposals for how to work with RDF data in JSON, but the ones I&#8217;ve seen put too much burden on JSON folks to accomodate RDF.  It seems to me we can let JSON keep doing what it does so well, and meanwhile, we can provide bits of RDF which can be adopted when needed.  Instead of pushing RDF on people, allow them to take the parts they find useful. </p>
<p>In thinking about it, I&#8217;ve come up with six things RDF can do that are not standard parts of JSON.  These are things one can do with JSON, of course, but not in any standard way.  My suggestion is these bits of functionally be provided in an RDF-compatible way (as I detail below), so that the JSON world and the RDF world can start to really play well together. </p>
<p>I&#8217;m interested to hear what people think of this.  Blog comment, email to sandro@hawke.org (maybe cc semantic-web@w3.org?), or catch me in the halls at <a href="http://semtech2010.semanticuniverse.com/">SemTech</a>.  I expect this general topic of RDF-meets-JSON will be discussed at the <a href="http://www.w3.org/2001/sw/wiki/RDF/NextStepWorkshop">RDF Next Steps workshop</a>, and if the stars line up right, maybe we can get a W3C Recommendation in this space in the next year or so.  Let&#8217;s call this particular proposal JRON 0.1 (Javascript RDF Object Notation), not &#8220;Sandro&#8217;s Proposal&#8221;, so I can be freer to like other designs and be properly neutral. </p>
<h2>Step 0: Start with ordinary JSON</h2>
<p>In general, JSON and RDF are very similar, although they are usually described using different terminology.  Of course, they both have strings and numbers.  They both have way of encoding a sequence of items: arrays in JSON, lists in RDF (some details below).  The main structuring is around key-value pairs, which JSON calls an &#8216;object&#8217;. In RDF we call it the &#8220;subject&#8221; and focus on its connection with each key-value pair; the three together form an RDF triple. </p>
<p>The point here is that ordinary JSON structures correspond to an important subset of RDF.  The don&#8217;t exactly match that subset because RDF uses namespace, as detailed in step 5 below.  The other steps below show the ways in which JSON is a subset of RDF.  If one takes all the steps here, using JSON with these conventions, one has full RDF. </p>
<p>So, here are the steps.  Steps 1-3 are pretty simple and not very interesting.  They address everyday concerns in data processing. Steps 4-6 may be a little more surprising if you&#8217;re not familiar with RDF. </p>
<h2>Step 1: Allow Extended Datatypes</h2>
<p>Why: For datatypes, JSON only has strings, numbers, booleans.  Sometimes people want to store and manipulate other datatypes, such as dates, or application-specific datatypes. </p>
<p>How: RDF uses XML&#8217;s datatype mechanism, where data values are conveyed as a pair of items: a <em>lexical representation</em> (a sequence of characters) and a <em>datatype identifier</em> (a sequences of characters which happens to be a URI).  Each datatype is a mapping from strings (lexical representations) to values; the datatype identifier tells us which datatype is to be used to interpret this particular representation.</p>
<p>In JRON, we represent this pair like this:</p>
<pre>{ "__repr": "2010-03-06",
  "__type": "http://www.w3.org/2001/XMLSchema#date" }
</pre>
<p>You can put this as a value in a list or in a key-value pair, just like a string or number.</p>
<p>RDF doesn&#8217;t restrict which datatypes are used.  Some recent standards work selected <a href="http://www.w3.org/TR/rif-dtb/#Datatypes">this list</a> as the set people should implement.</p>
<p>Personally, I&#8217;m not sure users need to be able to extend datatypes.   I see dates being important, but otherwise I&#8217;m not convinced.  Still, it&#8217;s in RDF, and I like compatibility, so it&#8217;s here.</p>
<h2>Step 2: Allow Language Tags</h2>
<p>Why: When you have text available in several different languages, language tags provide a way to select which of the available strings, if any, matches the language preference of the user.</p>
<p>Also: Text-to-speech systems can handle text better if they know which natural language to use in pronouncing the text.</p>
<p>How: RDF allows language tags on string literals.  In JRON, we use a pair like this:</p>
<pre>{ "__text": "chat",
  "__lang": "fr" }
</pre>
<p>Commentary: Personally, I&#8217;ve never liked this bit of RDF.  I feel like there are better architectures for handling language tagging.  But there was a vocal community that felt this was essential, so it&#8217;s in the standard.  I gather some people like it, and I haven&#8217;t seen a good counter-proposal.</p>
<h2>Step 3: Allow Non-Tree Structures</h2>
<p>Why: Sometimes your data is not tree structured.  Sometimes you have an arbitrary directed graph, such as when representing a social network.</p>
<p>How: In RDF, an arbitrary &#8220;node id&#8221; is available for making non-tree structures. We can do the same in JRON, saying any object may have a node id, and if it does, the object is considered the same as all other objects with the same node id.  Like this bit JSON saying my friend Eric and I both know each other:</p>
<pre>...
   { "foaf_name": "Sandro Hawke",
     "foaf_knows: { "__node_id": "n102" },
     "__node_id": "n334" }
...
   { "foaf_name": "Eric Prud'hommeaux",
     "foaf_knows: { "__node_id": "n334" },
     "__node_id": "n102" }
...
</pre>
<p>In the above example, the objects representing me and Eric are given node ids, and then those node ids are used to make the links to each other.  We could also do this with only one node id, but we still need at least one:</p>
<pre>   { "foaf_name": "Sandro Hawke",
     "foaf_knows: { "foaf_name": "Eric Prud'hommeaux",
                    "foaf_knows: { "__node_id": "n334" },
     "__node_id": "n334" }
</pre>
<p>Okay, those were the ordinary three things to add to JSON.  Here are the interesting three:</p>
<h2>Step 4: Allow Cross-Document Structures</h2>
<p>Why: Sometimes, there is useful, relevant data available on the Web but it&#8217;s not part of the current JSON document.  We would not want all the Web pages in the world to be gathered into one big Web page; similarly, it&#8217;s good to keep data in different documents.  But that shouldn&#8217;t stop us from easily combining the data, and keeping the links intact. </p>
<p>How: RDF allows IRIs (unicode web addresses) to be used as node identifiers.  They are like node ids, except they work across multiple documents; they are globally unambiguous identifiers, <strong>and</strong> systems can use Web protocols to dereference them to get other useful information.</p>
<p>In JSON, we can do this:</p>
<pre>     { "foaf_name": "Sandro Hawke",
       "__iri": "http://www.w3.org/People/Sandro/data#Sandro_Hawke"
     }
</pre>
<p>Commentary: So why do we still need __node_id?  Because sometimes it&#8217;s a pain to make up a good IRI.   Some people prefer to always use IRIs, avoiding node_ids in their data, and that&#8217;s fine.</p>
<h2>Step 5: Put Keys in Namespaces</h2>
<p>Why: When data is coming from different sources across the Web, it&#8217;s not practical to get all the sources to agree on all the terminology.  Instead, by using Web addresses (URLs/IRIs) as our keys, we allow individuals and organizations to make their own decisions.  They can decide how much to share their vocabularies, and they avoid accidental name collisions.  The web address also provides a handy link to documentation, community sites, schemas, etc.</p>
<p>How: It&#8217;s awkward to use a whole, long http IRIs everywhere, so as in many RDF syntaxes, JRON has a prefix expansion mechanism, like this:</p>
<pre>    { "foaf_name": "Sandro Hawke",
       ...
      "__prefixes": {
         "foaf_" : "http://xmlns.com/foaf/0.1/"
      }
    }</pre>
<p>Here the key &#8220;foaf_name&#8221; gets expanded into &#8220;<a href="http://xmlns.com/foaf/0.1/name&#038;#8221" rel="nofollow">http://xmlns.com/foaf/0.1/name&#038;#8221</a>;, which serves as a unique-on-the-Internet identifier for a particular conceptualization of names.</p>
<p>Commentary: Although I&#8217;ve left it almost to the end, this is the one mandatory part of this proposal.   All the other elements are only present when required by the data.   The null JRON document is: {&#8220;__prefixes&#8221;:{}}</p>
<p>Others have suggested this part can be optional, too, by having a set of standard prefixes for a given API.   I&#8217;m not entirely opposed to that, but I&#8217;m concerned about how those defaults would be communicated in practice.</p>
<p>Also, I&#8217;m not sure there&#8217;s consensus on what character to use in the short name: should it be foaf_name, foaf.name, foaf:name, or what?  The mechanism here is that you can use whatever you want: the __prefixes table keys are matched longest-first.  If there&#8217;s an entry with an empty string, that provides a default namespace.</p>
<h2>Step 6: Allow Multiple Values Per Key</h2>
<p>Why: Sometimes it makes sense to have more than one value for some property.  For instance, as it turns out, I have more than one friend.  I could use a single-value &#8216;list-of-friends&#8217; property, but sometimes it makes more sense to use a &#8216;friend&#8217; property that has multiple values.  In particular, if we&#8217;ll be learning who my friends are from multiple sources, and we were using lists, what order would we put the resulting combined list in?</p>
<p>How: We still just use JSON lists, but we indicate that the order does not matter, so the values can be merged arbitrarily:</p>
<pre>   { "foaf.name": "Sandro Hawke",
     "foaf.knows: { "__values": [
                     { "foaf.name": "Eric Prud'hommeaux" },
                     { "foaf.name": "Dan Brickley" },
                     { "foaf.name": "Matt Womer" }
                  ]}
   }
   </pre>
<h2>Closing Thoughts</h2>
<p>That&#8217;s it.  Those are the six things that RDF does that normal JSONdoesn&#8217;t do.   Did I miss something?</p>
<p>The API I&#8217;m imagining (but haven&#8217;t built yet) would have a few<br />
features like:</p>
<dl>
<dt>jron_reprefix(tree, desired_prefixes)</dt>
<dd>Returns another JRON tree with all the prefixes matching the ones provided here.   If you&#8217;re going to use foaf, for instance, you probably want to set a prefix like &#8220;foaf.&#8221; for foaf, so your code can expect it.</dd>
<dt>jron_merge_nodes(tree) and jron_treeify(tree)</dt>
<dd>convert a tree (suitable for transmitting) from/to a graph (suitable for use in memory</dd>
<dt>jron_use_native_type(tree)</dt>
<dd>Would convert all the __type/__repr objects into suitable local objects, if they exist.   Maybe even date/time objects, if there&#8217;s a suitable library installed for those.</dd>
</dl>
<p>
One technical issue for RDF folks:</p>
<p>Should JSON arrays be considered RDF Lists or RDF Sequences?  Perhaps they default to RDF Lists but there can be an option flag in the top-level object:</p>
<pre> { ...
   "__json_array_is_rdf_seq": true 
   ...
 }</pre>
<p>When that flag is absent or false, arrays would be considered RDF Lists.  My sense is no one needs to use both.  Maybe soon we&#8217;ll know if RDF Sequences can finally be deprecated.</p><br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/decentralyze.wordpress.com/174/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/decentralyze.wordpress.com/174/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=decentralyze.com&#038;blog=5209539&#038;post=174&#038;subd=decentralyze&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
	</item>
</rdf:RDF>